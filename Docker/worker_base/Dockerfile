FROM ubuntu:20.04

ENV TZ=Etc/UTC
ENV LANG=en_US.UTF-8
ENV LANGUAGE=en_US:en
ENV LC_ALL=en_US.UTF-8

# Base Setup
RUN apt-get update && apt-get install -y --no-install-recommends \
      curl \
      sudo \
      apt-transport-https \
      ca-certificates \
      gnupg \
      lsb-release \
      build-essential \
      locales \
      unzip && \
    ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone && \
    sed -i '/en_US.UTF-8/s/^# //g' /etc/locale.gen && \
    locale-gen && \
    rm -rf /var/lib/apt/lists/*

#Setup for installing Node.js 20 (LTS)
RUN mkdir -p /etc/apt/keyrings; \
    curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg; \
    echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_20.x nodistro main" > /etc/apt/sources.list.d/nodesource.list;

# Setup for installing .NET Core SDK
RUN curl -o packages-microsoft-prod.deb https://packages.microsoft.com/config/ubuntu/20.04/packages-microsoft-prod.deb && \
    dpkg -i packages-microsoft-prod.deb && \
    rm packages-microsoft-prod.deb

# Install supported languages and frameworks
RUN apt-get update && apt-get install -y \
      dotnet-sdk-6.0 \
      dotnet-sdk-3.1 \
      dotnet-sdk-5.0 \
      openjdk-11-jdk \
      openjdk-17-jdk \
      nodejs \
      python3.8 \
      python3-pip \
      golang-go \
      libgtk-3-0 \
      libgbm1 && \
    rm -rf /var/lib/apt/lists/*

# Docker setup
RUN curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg && \
    echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null && \
    apt-get update && apt-get install -y --no-install-recommends \
      docker-ce \
      docker-ce-cli \
      containerd.io && \
    rm -rf /var/lib/apt/lists/*

# Install Maven
ENV MAVEN_VERSION 3.9.1
RUN mkdir /judge-resources && \
	cd /judge-resources && \
    curl -O https://archive.apache.org/dist/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz && \
    tar -xzvf apache-maven-$MAVEN_VERSION-bin.tar.gz && \
    rm apache-maven-$MAVEN_VERSION-bin.tar.gz && \
    ln -s /judge-resources/apache-maven-$MAVEN_VERSION/bin/mvn /usr/bin/mvn

# Java setup
WORKDIR /tmp/java
COPY ./java/gradlew ./gradlew
COPY ./java/gradlew.bat ./gradlew.bat
COPY ./java/gradle ./gradle
RUN ./gradlew

COPY ./java/build.gradle ./build.gradle
RUN ./gradlew getDeps11
RUN ./gradlew getDeps17

# JS and JS SPA
COPY ./js /judge-resources/js
WORKDIR /judge-resources/js
RUN npm install

COPY ./js-run-spa-in-docker-and-execute-mocha-tests /judge-resources/js-run-spa-in-docker-and-execute-mocha-tests
WORKDIR /judge-resources/js-run-spa-in-docker-and-execute-mocha-tests
RUN npm install && \
    bash /judge-resources/js/chromium-scripts/update-and-run.sh

ENV JAVA_LIBS_DIR=/judge-resources/javaLibs/
ENV JAVA17_LIBS_DIR=/judge-resources/java17Libs/

ENV JS_NODE_MODULES_DIR=/judge-resources/js/node_modules

# Python 11 with Django support
RUN apt-get update && apt-get install -y --no-install-recommends \
      make \
      libssl-dev \
      zlib1g-dev \
      libbz2-dev \
      libreadline-dev \
      libsqlite3-dev \
      llvm \
      libncurses5-dev \
      xz-utils \
      tk-dev \
      libxml2-dev \
      libxmlsec1-dev \
      libffi-dev \
      liblzma-dev \
      mecab-ipadic-utf8 \
      git \
      libpq-dev && \
    rm -rf /var/lib/apt/lists/*
    
ENV PYENV_ROOT /root/.pyenv
ENV PATH $PYENV_ROOT/shims:$PYENV_ROOT/bin:$PATH
RUN curl https://pyenv.run | bash && \
    pyenv update && \
    pyenv install 3.11.5

# Install Python packages from requirements.txt
COPY ./python/requirements.txt /tmp/

RUN pip3 install --no-cache-dir -r /tmp/requirements.txt

RUN $PYENV_ROOT/versions/3.11.5/bin/pip install --no-cache-dir -r /tmp/requirements.txt

# Go
ENV GO111MODULE=off

# Clean up
RUN apt-get autoremove -y && apt-get clean && rm -rf /var/lib/apt/lists/*

CMD tail -f /dev/null
