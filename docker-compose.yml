version: '3.8'

services:
  ui:
    build:
      context: .
      dockerfile: ./Docker/Dockerfile.ui
    image: judge_web_ui
    container_name: web_ui_instance
    ports:
      - "5010:80"
    restart: on-failure
    volumes:
      - ./Logs:/Logs
    env_file:
      - Docker/envs/common.env
    extra_hosts:
      - "db:host-gateway"
    links:
      - elasticsearch
      - mq
      - redis
    depends_on:
      - elasticsearch
      - mq
      - redis
  fe:
    build:
      context: .
      dockerfile: ./Docker/Dockerfile.fe
      args:
        - YARN_BUILD_COMMAND=build:local
    image: judge_web_fe
    container_name: web_fe_instance
    ports:
      - "5002:80"
    restart: on-failure
    volumes:
      - ./Logs:/Logs
      - .:/app
      - /app/node_modules
    links:
      - ui
    depends_on:
      - ui
  administration:
    build:
      context: .
      dockerfile: ./Docker/Dockerfile.administration
    image: judge_administration
    container_name: administration_instance
    ports:
      - "5001:80"
    restart: on-failure
    volumes:
      - ./Logs:/Logs
    env_file:
      - Docker/envs/common.env
    extra_hosts:
      - "db:host-gateway"
    links:
      - elasticsearch
      - mq
      - redis
    depends_on:
      - elasticsearch
      - mq
      - redis
  worker:
    build:
      context: .
      dockerfile: ./Docker/Dockerfile.worker
    image: judge_worker
    ports:
      - "8003:80"
    container_name: worker_instance
    restart: on-failure
    env_file:
      - Docker/envs/common.env
    volumes:
      - ./Logs:/Logs
      - /tmp/ExecutionStrategies:/tmp/ExecutionStrategies
      - /var/run/docker.sock:/var/run/docker.sock
    links:
      - elasticsearch
      - mq
      - sql_server
      - mysql
      - postgres
    depends_on:
      - elasticsearch
      - mq
      - sql_server
      - mysql
      - postgres

# External services
  mq:
    image: rabbitmq:3.12-management
    ports:
      - "5672:5672"
      - "15672:15672"
    container_name: mq_instance
    hostname: "judge-mq"
    environment:
      DEFAULT_USER_PASSWORD: myS3cretPass2
    volumes:
      - ./rabbitmq/data:/var/lib/rabbitmq/mnesia
      - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
  redis:
    image: "redis:7"
    ports:
      - "6379:6379"
    container_name: redis_instance
    hostname: "judge-rd"
    command: "redis-server --requirepass redisPass123"
## Worker dependencies
  sql_server:
    image: mcr.microsoft.com/mssql/server:2017-CU8-ubuntu
    restart: always
    environment:
      ACCEPT_EULA: Y
      SA_PASSWORD: 1123QwER
  mysql:
    image: mysql/mysql-server:8.0.19
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 1123QwER
      MYSQL_ROOT_HOST: '%'
  postgres:
      image: postgres:15
      restart: always
      environment:
        POSTGRES_PASSWORD: 1123QwER
        POSTGRES_USER: postgres
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.14.3
    container_name: elasticsearch_instance
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
  kibana:
    image: docker.elastic.co/kibana/kibana:8.14.3
    container_name: kibana_instance
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - elasticsearch.ssl.verificationMode=none
    volumes:
        - kibana_data:/usr/share/kibana/data
    links:
      - elasticsearch
    depends_on:
      - elasticsearch

volumes:
  rabbitmq_data:
  elasticsearch_data:
  kibana_data:
