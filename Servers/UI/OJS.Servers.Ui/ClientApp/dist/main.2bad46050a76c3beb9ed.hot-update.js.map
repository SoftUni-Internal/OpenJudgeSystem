{"version":3,"file":"main.2bad46050a76c3beb9ed.hot-update.js","sources":["C:/Users/User/Desktop/OpenJudgeSystem/Servers/UI/OJS.Servers.Ui/ClientApp/src/hooks/contests/contest-filter-utils.ts"],"sourcesContent":["import { ITreeItemType } from '../../components/guidelines/trees/Tree';\nimport { ContestStatus, FilterType, IContestStrategyFilter, IFilter } from '../../common/contest-types';\nimport { generateFilterItems } from '../../common/filter-utils';\nimport { IContestCategoryTreeType } from '../../common/types';\n\nconst addCategoryLeafFilters = ({ id, name, children: treeChildren }: ITreeItemType, arr: IFilter[], cache: Map<string, IFilter>) => {\n    treeChildren?.forEach((c) => {\n        addCategoryLeafFilters(c, arr, cache);\n    });\n    \n    if(!cache.has(id)) {\n        cache.set(id, { name, value: id.toString() } as IFilter); \n    }\n\n    arr.push(cache.get(id)!);\n};\n\nconst generateCategoryFilters =(() => {\n    const categoriesCache = new Map();\n\n    return (categories: IContestCategoryTreeType[]) => {\n        const categoryFilters = [] as IFilter[];\n\n        categories?.forEach((c) => addCategoryLeafFilters(c, categoryFilters, categoriesCache));\n\n        return generateFilterItems(FilterType.Category, ...categoryFilters);\n    };\n})();\n\nconst generateStatusFilters = (() => {\n    const result = generateFilterItems(\n        FilterType.Status,\n        { name: ContestStatus.All, value: ContestStatus.All },\n        { name: ContestStatus.Active, value: ContestStatus.Active },\n        { name: ContestStatus.Past, value: ContestStatus.Past },\n    );\n\n    return () => result;\n})();\n\nconst generateStrategyFilters = (() => {\n    const strategiesCache = new Map();\n\n    return (strategies: IContestStrategyFilter[]) => {\n        const strategyFilters = strategies?.map(({ name, id }) => {\n            if(!strategiesCache.has(id)) {\n                strategiesCache.set(id, { name, value: id.toString() });\n            }\n\n            return strategiesCache.get(id);\n        }) ?? [];\n\n        return generateFilterItems(FilterType.Strategy, ...strategyFilters);\n    };\n})();\n\nexport {\n    generateCategoryFilters,\n    generateStrategyFilters,\n    generateStatusFilters,\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}