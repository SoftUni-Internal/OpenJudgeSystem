{"version":3,"file":"main.1da6021ac5645703bf38.hot-update.js","sources":["C:/Users/User/Desktop/OpenJudgeSystem/Servers/UI/OJS.Servers.Ui/ClientApp/src/components/contests/contest-password-form/ContestPasswordForm.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useCallback, useState } from 'react';\nimport { isNil } from 'lodash';\nimport { useCurrentContest } from '../../../hooks/use-current-contest';\nimport Heading, { HeadingType } from '../../guidelines/headings/Heading';\nimport FormControl, { FormControlType } from '../../guidelines/forms/FormControl';\nimport Form from '../../guidelines/forms/Form';\nimport styles from './ContestPasswordForm.module.scss';\n\ninterface IContestPasswordFormProps {\n    id: number;\n    isOfficial: boolean;\n}\n\nconst ContestPasswordForm = ({ id, isOfficial }: IContestPasswordFormProps) => {\n    const {\n        state: {\n            contest,\n            submitContestPasswordErrorMessage,\n        },\n        actions: { submitPassword },\n    } = useCurrentContest();\n    const [ passwordValue, setPasswordValue ] = useState<string>('');\n\n    const passwordFieldName = 'contestPassword';\n\n    const handleOnSubmitPassword = useCallback(async () => {\n        await submitPassword({ id, isOfficial, password: passwordValue });\n    }, [ id, isOfficial, passwordValue, submitPassword ]);\n\n    const handleOnChangeUpdatePassword = useCallback((value: string) => {\n        setPasswordValue(value);\n    }, [ setPasswordValue ]);\n\n    const renderErrorMessage = useCallback(\n        () => (!isNil(submitContestPasswordErrorMessage)\n            ? <span className={styles.errorMessage}>{submitContestPasswordErrorMessage}</span>\n            : null),\n        [ submitContestPasswordErrorMessage ],\n    );\n\n    return (\n        <Form\n          className={styles.contestPasswordForm}\n          onSubmit={() => {\n              handleOnSubmitPassword();\n          }}\n        >\n            <header className={styles.formHeader}>\n                <Heading type={HeadingType.primary}>Enter contest password</Heading>\n                <Heading type={HeadingType.secondary}>{contest?.name}</Heading>\n                { renderErrorMessage() }\n            </header>\n            <FormControl\n              id={passwordFieldName.toLowerCase()}\n              name={passwordFieldName}\n              labelText=\"Password\"\n              type={FormControlType.password}\n              onChange={(value) => handleOnChangeUpdatePassword(isNil(value)\n                  ? ''\n                  : value.toString())}\n              value=\"\"\n            />\n        </Form>\n    );\n};\n\nexport default ContestPasswordForm;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAOA;AAAA;AACA;AADA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAMA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAMA;AAEA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAGA;AARA;AAAA;AAAA;AAAA;AAAA;AAXA;AAAA;AAAA;AAAA;AAAA;AAuBA;AACA;AApDA;AAOA;;;AAPA;AAqDA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}