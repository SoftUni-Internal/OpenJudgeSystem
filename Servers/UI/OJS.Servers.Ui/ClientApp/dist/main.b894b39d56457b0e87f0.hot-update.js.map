{"version":3,"file":"main.b894b39d56457b0e87f0.hot-update.js","sources":["C:/Users/User/Desktop/OpenJudgeSystem/Servers/UI/OJS.Servers.Ui/ClientApp/src/components/contests/contest-password-form/ContestPasswordForm.module.scss","C:/Users/User/Desktop/OpenJudgeSystem/Servers/UI/OJS.Servers.Ui/ClientApp/src/pages/contest/ContestRegisterPage.module.scss","webpack:///./src/components/contests/contest-password-form/ContestPasswordForm.module.scss?9757","C:/Users/User/Desktop/OpenJudgeSystem/Servers/UI/OJS.Servers.Ui/ClientApp/src/components/contests/contest-password-form/ContestPasswordForm.tsx","webpack:///./src/pages/contest/ContestRegisterPage.module.scss?659d","C:/Users/User/Desktop/OpenJudgeSystem/Servers/UI/OJS.Servers.Ui/ClientApp/src/pages/contest/ContestRegisterPage.tsx"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".ContestPasswordForm_contestPasswordForm__1Yfis {\\n  width: 50%;\\n  margin: 0 auto;\\n  text-align: center;\\n  align-content: center;\\n}\\n.ContestPasswordForm_contestPasswordForm__1Yfis > button[type=submit] {\\n  align-self: center;\\n}\\n\\n.ContestPasswordForm_formHeader__1mjUI {\\n  text-align: center;\\n}\\n\\n.ContestPasswordForm_errorMessage__Qdcd8 {\\n  margin-top: 10px;\\n  color: #fc4c50;\\n  text-align: center;\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://src/components/contests/contest-password-form/ContestPasswordForm.module.scss\",\"webpack://src/styles/colors.scss\"],\"names\":[],\"mappings\":\"AAEA;EACE,UAAA;EACA,cAAA;EACA,kBAAA;EACA,qBAAA;AADF;AAGE;EACE,kBAAA;AADJ;;AAKA;EACE,kBAAA;AAFF;;AAKA;EACE,gBAAA;EACA,cCEY;EDDZ,kBAAA;AAFF\",\"sourcesContent\":[\"@import \\\"src/styles/colors\\\";\\r\\n\\r\\n.contestPasswordForm {\\r\\n  width: 50%;\\r\\n  margin: 0 auto;\\r\\n  text-align: center;\\r\\n  align-content: center;\\r\\n  \\r\\n  & > button[type='submit'] {\\r\\n    align-self: center;\\r\\n  }\\r\\n}\\r\\n\\r\\n.formHeader {\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.errorMessage {\\r\\n  margin-top: 10px;\\r\\n  color: $primary-red;\\r\\n  text-align: center;\\r\\n}\",\"$white-color: #fff;\\r\\n$warning-color: #FEC112;\\r\\n$grey-color: #565656;\\r\\n$light-blue-color: #42abf8;\\r\\n\\r\\n$primary-blue: #44a9f8;\\r\\n$background-color-footer: #3e4c5d;\\r\\n$background-color-light-gray: #fdfdfd;\\r\\n$wrappers-border-color: #cbcbcb;\\r\\n$success-background-color: #42abf8;\\r\\n$success-font-color: #fff;\\r\\n$color-btn-secondary: $light-blue-color;\\r\\n$color-btn-disabled: #bebebe;\\r\\n$background-color-btn-primary: $success-background-color;\\r\\n$background-color-btn-primary-hover: $primary-blue;\\r\\n$background-color-btn-secondary: white;\\r\\n$background-color-btn-secondary-hover: #e3f3fd;\\r\\n$bottom-border-color: #bebebe;\\r\\n$text-light-gray-color: #b5b5b5;\\r\\n$text-dark-gray-color: #3e4c5d;\\r\\n$box-shadow-color: 0 1px 5px rgb(0 0 0 / 20%), 0 3px 4px rgb(0 0 0 / 12%), 0 2px 4px rgb(0 0 0 / 14%);\\r\\n$primary-red: #fc4c50;\\r\\n$primary-green: #23be5e;\\r\\n$icon-green: green;\\r\\n$icon-blue: blue;\\r\\n$icon-red: red;\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"contestPasswordForm\": \"ContestPasswordForm_contestPasswordForm__1Yfis\",\n\t\"formHeader\": \"ContestPasswordForm_formHeader__1mjUI\",\n\t\"errorMessage\": \"ContestPasswordForm_errorMessage__Qdcd8\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","var api = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??ref--5-oneOf-7-1!../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../node_modules/resolve-url-loader/index.js??ref--5-oneOf-7-3!../../../../node_modules/sass-loader/dist/cjs.js??ref--5-oneOf-7-4!./ContestPasswordForm.module.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../../../node_modules/css-loader/dist/cjs.js??ref--5-oneOf-7-1!../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../node_modules/resolve-url-loader/index.js??ref--5-oneOf-7-3!../../../../node_modules/sass-loader/dist/cjs.js??ref--5-oneOf-7-4!./ContestPasswordForm.module.scss\",\n      function () {\n        content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??ref--5-oneOf-7-1!../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../node_modules/resolve-url-loader/index.js??ref--5-oneOf-7-3!../../../../node_modules/sass-loader/dist/cjs.js??ref--5-oneOf-7-4!./ContestPasswordForm.module.scss\");\n\n              content = content.__esModule ? content.default : content;\n\n              if (typeof content === 'string') {\n                content = [[module.id, content, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nmodule.exports = content.locals || {};","import * as React from 'react';\nimport { useCallback, useState } from 'react';\nimport { isNil } from 'lodash';\nimport { useCurrentContest } from '../../../hooks/use-current-contest';\nimport Heading, { HeadingType } from '../../guidelines/headings/Heading';\nimport FormControl, { FormControlType } from '../../guidelines/forms/FormControl';\nimport Form from '../../guidelines/forms/Form';\nimport styles from './ContestPasswordForm.module.scss';\n\ninterface IContestPasswordFormProps {\n    id: number;\n    isOfficial: boolean;\n}\n\nconst ContestPasswordForm = ({ id, isOfficial }: IContestPasswordFormProps) => {\n    const {\n        state: {\n            contest,\n            submitContestPasswordErrorMessage,\n        },\n        actions: { submitPassword },\n    } = useCurrentContest();\n    const [ passwordValue, setPasswordValue ] = useState<string>('');\n\n    const passwordFieldName = 'contestPassword';\n\n    const handleOnSubmitPassword = useCallback(async () => {\n        await submitPassword({ id, isOfficial, password: passwordValue });\n    }, [ id, isOfficial, passwordValue, submitPassword ]);\n\n    const handleOnChangeUpdatePassword = useCallback((value: string) => {\n        setPasswordValue(value);\n    }, [ setPasswordValue ]);\n\n    const renderErrorMessage = useCallback(\n        () => (!isNil(submitContestPasswordErrorMessage)\n            ? <span className={styles.errorMessage}>{submitContestPasswordErrorMessage}</span>\n            : null),\n        [ submitContestPasswordErrorMessage ],\n    );\n\n    return (\n        <Form\n          className={styles.contestPasswordForm}\n          onSubmit={() => {\n              handleOnSubmitPassword();\n          }}\n        >\n            <header className={styles.formHeader}>\n                <Heading type={HeadingType.primary}>Enter contest password</Heading>\n                <Heading type={HeadingType.secondary}>{contest?.name}</Heading>\n                { renderErrorMessage() }\n            </header>\n            <FormControl\n              id={passwordFieldName.toLowerCase()}\n              name={passwordFieldName}\n              labelText=\"Password\"\n              type={FormControlType.password}\n              onChange={(value) => handleOnChangeUpdatePassword(isNil(value)\n                  ? ''\n                  : value.toString())}\n              value=\"\"\n            />\n        </Form>\n    );\n};\n\nexport default ContestPasswordForm;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ref--5-oneOf-7-1!../../../node_modules/postcss-loader/src/index.js??postcss!../../../node_modules/resolve-url-loader/index.js??ref--5-oneOf-7-3!../../../node_modules/sass-loader/dist/cjs.js??ref--5-oneOf-7-4!./ContestRegisterPage.module.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js??ref--5-oneOf-7-1!../../../node_modules/postcss-loader/src/index.js??postcss!../../../node_modules/resolve-url-loader/index.js??ref--5-oneOf-7-3!../../../node_modules/sass-loader/dist/cjs.js??ref--5-oneOf-7-4!./ContestRegisterPage.module.scss\",\n      function () {\n        content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ref--5-oneOf-7-1!../../../node_modules/postcss-loader/src/index.js??postcss!../../../node_modules/resolve-url-loader/index.js??ref--5-oneOf-7-3!../../../node_modules/sass-loader/dist/cjs.js??ref--5-oneOf-7-4!./ContestRegisterPage.module.scss\");\n\n              content = content.__esModule ? content.default : content;\n\n              if (typeof content === 'string') {\n                content = [[module.id, content, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nmodule.exports = content.locals || {};","import * as React from 'react';\nimport { useEffect, useMemo } from 'react';\nimport { useParams } from 'react-router';\nimport { useNavigate } from 'react-router-dom';\nimport { isNil } from 'lodash';\nimport { makePrivate } from '../shared/make-private';\nimport { setLayout } from '../shared/set-layout';\nimport { useCurrentContest } from '../../hooks/use-current-contest';\nimport ContestPasswordForm from '../../components/contests/contest-password-form/ContestPasswordForm';\nimport { ContestParticipationType } from '../../common/constants';\nimport { useUrlParams } from '../../hooks/common/use-url-params;';\nimport styles from './ContestRegisterPage.module.scss';\n\nconst ContestRegisterPage = () => {\n    const {\n        contestId,\n        participationType,\n    } = useParams();\n    const navigate = useNavigate();\n\n    const contestIdToNumber = useMemo(() => Number(contestId), [ contestId ]);\n    const isParticipationOfficial = useMemo(() => participationType === ContestParticipationType.Compete, [ participationType ]);\n    const internalContest = useMemo(\n        () => ({\n            id: contestIdToNumber,\n            isOfficial: isParticipationOfficial,\n        })\n        , [ contestIdToNumber, isParticipationOfficial ],\n    );\n    \n    const {\n        state: {\n            requirePassword,\n            isPasswordValid,\n        },\n        actions: { register },\n    } = useCurrentContest();\n\n    const doesNotRequirePassword = useMemo(() => !isNil(requirePassword) && !requirePassword, [ requirePassword ]);\n    const isSubmittedPasswordValid = useMemo(() => !isNil(isPasswordValid) && isPasswordValid, [ isPasswordValid ]);\n\n    useEffect(() => {\n        (async () => {\n            \n            \n            await register(internalContest);\n        })();\n    }, [ internalContest, contestIdToNumber, isParticipationOfficial, participationType, register ]);\n\n    useEffect(() => {\n        if (doesNotRequirePassword || isSubmittedPasswordValid) {\n            navigate(`/contests/${contestId}/${participationType}`);\n        }\n    }, [ contestId, doesNotRequirePassword, isSubmittedPasswordValid, participationType, navigate ]);\n\n    return (\n        <div className={styles.container}>\n            {\n                requirePassword\n                    ? (\n                        <ContestPasswordForm\n                          id={contestIdToNumber}\n                          isOfficial={isParticipationOfficial}\n                        />\n                    )\n                    : <p>No password required. Redirecting to contest.</p>\n            }\n        </div>\n    );\n};\n\nexport default makePrivate(setLayout(ContestRegisterPage));\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACXA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjuBA;AACA;AApDA;AAOA;;;AAPA;AAqDA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAAA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AACA;AAOA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAKA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AATA;AAAA;AAAA;AAAA;AAAA;AAaA;AACA;AAzDA;AAIA;;;AAJA;AA0DA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}