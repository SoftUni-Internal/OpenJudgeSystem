{"version":3,"file":"main.208ee9848ba789c5ae32.hot-update.js","sources":["C:/Users/User/Desktop/OpenJudgeSystem/Servers/UI/OJS.Servers.Ui/ClientApp/src/components/contests/contest-categories/ContestCategories.module.scss","C:/Users/User/Desktop/OpenJudgeSystem/Servers/UI/OJS.Servers.Ui/ClientApp/src/components/guidelines/trees/Tree.module.scss","webpack:///./src/components/contests/contest-categories/ContestCategories.module.scss?b377","C:/Users/User/Desktop/OpenJudgeSystem/Servers/UI/OJS.Servers.Ui/ClientApp/src/components/contests/contest-categories/ContestCategories.tsx","webpack:///./src/components/guidelines/trees/Tree.module.scss?1a82","C:/Users/User/Desktop/OpenJudgeSystem/Servers/UI/OJS.Servers.Ui/ClientApp/src/components/guidelines/trees/Tree.tsx"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".ContestCategories_heading__3r0tO {\\n  text-align: left;\\n  padding-bottom: 10px;\\n  border-bottom: 1px solid #bebebe;\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://src/components/contests/contest-categories/ContestCategories.module.scss\"],\"names\":[],\"mappings\":\"AAEA;EACE,gBAAA;EACA,oBAAA;EACA,gCAAA;AADF\",\"sourcesContent\":[\"@import \\\"src/styles/colors\\\";\\n\\n.heading {\\n  text-align: left;\\n  padding-bottom: 10px;\\n  border-bottom: 1px solid $bottom-border-color;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"heading\": \"ContestCategories_heading__3r0tO\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".Tree_categoriesTree__1AfoW {\\n  font-size: 1rem;\\n  font-family: \\\"Roboto\\\", \\\"Helvetica\\\", \\\"Arial\\\", sans-serif;\\n  font-weight: 400;\\n  line-height: 1.5;\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://src/components/guidelines/trees/Tree.module.scss\"],\"names\":[],\"mappings\":\"AAAA;EACE,eAAA;EACA,uDAAA;EACA,gBAAA;EACA,gBAAA;AACF\",\"sourcesContent\":[\".categoriesTree {\\r\\n  font-size: 1rem;\\r\\n  font-family: \\\"Roboto\\\", \\\"Helvetica\\\", \\\"Arial\\\", sans-serif;\\r\\n  font-weight: 400;\\r\\n  line-height: 1.5;\\r\\n}\\r\\n\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"categoriesTree\": \"Tree_categoriesTree__1AfoW\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","var api = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??ref--5-oneOf-7-1!../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../node_modules/resolve-url-loader/index.js??ref--5-oneOf-7-3!../../../../node_modules/sass-loader/dist/cjs.js??ref--5-oneOf-7-4!./ContestCategories.module.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../../../node_modules/css-loader/dist/cjs.js??ref--5-oneOf-7-1!../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../node_modules/resolve-url-loader/index.js??ref--5-oneOf-7-3!../../../../node_modules/sass-loader/dist/cjs.js??ref--5-oneOf-7-4!./ContestCategories.module.scss\",\n      function () {\n        content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??ref--5-oneOf-7-1!../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../node_modules/resolve-url-loader/index.js??ref--5-oneOf-7-3!../../../../node_modules/sass-loader/dist/cjs.js??ref--5-oneOf-7-4!./ContestCategories.module.scss\");\n\n              content = content.__esModule ? content.default : content;\n\n              if (typeof content === 'string') {\n                content = [[module.id, content, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nmodule.exports = content.locals || {};","import React, { useCallback, useMemo } from 'react';\nimport { isArray, isNil } from 'lodash';\nimport { TreeItem } from '@material-ui/lab';\nimport { useContestCategories } from '../../../hooks/use-contest-categories';\nimport Heading, { HeadingType } from '../../guidelines/headings/Heading';\n\nimport styles from './ContestCategories.module.scss';\nimport { useContests } from '../../../hooks/use-contests';\nimport { IHaveOptionalClassName } from '../../common/Props';\nimport Tree, { ITreeItemType } from '../../guidelines/trees/Tree';\nimport { IFilter } from '../../../common/contest-types';\nimport { useCategoriesBreadcrumbs } from '../../../hooks/use-contest-categories-breadcrumb';\n\ninterface IContestCategoriesProps extends IHaveOptionalClassName {\n    onCategoryClick: (filter: IFilter) => void;\n    defaultSelected?: string,\n}\n\nconst ContestCategories = ({\n    className = '',\n    onCategoryClick,\n    defaultSelected,\n}: IContestCategoriesProps) => {\n    const { state: { categories } } = useContestCategories();\n    const { state: { possibleFilters } } = useContests();\n    const { actions: { updateBreadcrumb } } = useCategoriesBreadcrumbs();\n\n    const renderTree = useCallback((node: ITreeItemType) => (\n        <div className={categoriesTreeClassName}>\n            <div className={treeTooltipClassName}>\n                <div className={treeTooltipElementClassName}\n                     key={node.id}>\n                    {node.name}\n                </div>\n            </div>\n            <TreeItem\n                key={node.id}\n                className={treeElementClassName}\n                nodeId={node.id.toString()}\n                label={node.name}\n                onClick={() => handleTreeItemClick(node)}\n                onLabelClick={() => handleLabelClick(node)}\n            >\n                {isArray(node.children)\n                    ? node.children.map((child) => renderTree(child))\n                    : null}\n            </TreeItem>\n        </div>\n    ), [ categoriesTreeClassName, treeTooltipClassName, treeTooltipElementClassName,\n        treeElementClassName, handleTreeItemClick, handleLabelClick, renderTree ]);\n    \n    const flattenTree = useCallback(\n        (treeItems: ITreeItemType[], result: ITreeItemType[]) => {\n            treeItems.forEach(({ children, ...rest }) => {\n                result.push(rest);\n\n                \n\n                if (!isNil(children)) {\n                    flattenTree(children, result);\n                }\n            });\n\n            return result;\n        },\n        [],\n    );\n\n    const getParents = useCallback(\n        (result: string[], allItems: ITreeItemType[], searchId?: string) => {\n            if (isNil(searchId)) {\n                return result;\n            }\n\n            const node = allItems.find(({ id }) => id.toString() === searchId);\n\n            if (isNil(node)) {\n                return result;\n            }\n\n            if (node.id.toString() === searchId) {\n                result.push(searchId);\n            }\n\n            getParents(result, allItems, node.parentId?.toString());\n\n            return result;\n        },\n        [],\n    );\n\n    const categoriesFlat = useMemo(\n        () => flattenTree(categories, []),\n        [ categories, flattenTree ],\n    );\n\n    const defaultExpanded = useMemo(\n        () => getParents([], categoriesFlat, defaultSelected),\n        [ defaultSelected, categoriesFlat, getParents ],\n    );\n\n    const handleTreeLabelClick = useCallback((node: ITreeItemType) => {\n        const filter = possibleFilters.find(({ value }) => value.toString() === node.id.toString());\n        const category = categoriesFlat.find(({ id }) => id.toString() === node.id.toString());\n\n        if (isNil(filter)) {\n            return;\n        }\n\n        onCategoryClick(filter);\n        updateBreadcrumb(category, categoriesFlat);\n    }, [ possibleFilters, categoriesFlat, onCategoryClick, updateBreadcrumb ]);\n    \n    return (\n        <div className={className as string}>\n            <Heading\n              type={HeadingType.small}\n              className={styles.heading}\n            >\n                Category\n            </Heading>\n            <Tree\n              items={categories}\n              onTreeLabelClick={handleTreeLabelClick}\n              defaultSelected={defaultSelected}\n              defaultExpanded={defaultExpanded}\n            />\n        </div>\n    );\n};\n\nexport default ContestCategories;\n","var api = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??ref--5-oneOf-7-1!../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../node_modules/resolve-url-loader/index.js??ref--5-oneOf-7-3!../../../../node_modules/sass-loader/dist/cjs.js??ref--5-oneOf-7-4!./Tree.module.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../../../node_modules/css-loader/dist/cjs.js??ref--5-oneOf-7-1!../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../node_modules/resolve-url-loader/index.js??ref--5-oneOf-7-3!../../../../node_modules/sass-loader/dist/cjs.js??ref--5-oneOf-7-4!./Tree.module.scss\",\n      function () {\n        content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??ref--5-oneOf-7-1!../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../node_modules/resolve-url-loader/index.js??ref--5-oneOf-7-3!../../../../node_modules/sass-loader/dist/cjs.js??ref--5-oneOf-7-4!./Tree.module.scss\");\n\n              content = content.__esModule ? content.default : content;\n\n              if (typeof content === 'string') {\n                content = [[module.id, content, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nmodule.exports = content.locals || {};","import React, { useCallback, useEffect, useState } from 'react';\nimport { TreeItem, TreeView } from '@material-ui/lab';\nimport { MdChevronRight, MdExpandMore } from 'react-icons/md';\nimport { isArray, isEmpty } from 'lodash';\n\nimport concatClassNames from '../../../utils/class-names';\nimport styles from './Tree.module.scss';\n\ninterface ITreeItemType {\n    id: string,\n    name: string,\n    parentId?: string,\n    children?: ITreeItemType[],\n}\n\ninterface ITreeProps {\n    items: ITreeItemType[];\n    onTreeLabelClick: (node: ITreeItemType) => void;\n    defaultSelected?: string;\n    defaultExpanded?: string[];\n}\n\nconst Tree = ({\n    items,\n    onTreeLabelClick,\n    defaultSelected,\n    defaultExpanded = [],\n}: ITreeProps) => {\n    const [ expanded, setExpanded ] = useState([] as string[]);\n    const [ selected, setSelected ] = useState('');\n\n    const handleTreeItemClick = useCallback(\n        (node: ITreeItemType) => {\n            const id = node.id.toString();\n            let newExpanded = Array.from(expanded);\n\n            if (expanded.includes(id)) {\n                newExpanded = newExpanded.filter((e) => e !== id);\n            } else {\n                newExpanded.push(id);\n            }\n\n            setExpanded(newExpanded);\n        },\n        [ expanded, setExpanded ],\n    );\n\n    const handleLabelClick = useCallback(\n        (node: ITreeItemType) => {\n            setSelected(node.id.toString());\n\n            onTreeLabelClick(node);\n        },\n        [ onTreeLabelClick ],\n    );\n\n    useEffect(\n        () => {\n            if (isEmpty(selected) && defaultSelected) {\n                setSelected(defaultSelected);\n            }\n        },\n        [ defaultSelected, selected ],\n    );\n\n    useEffect(\n        () => {\n            if (isEmpty(expanded) && !isEmpty(defaultExpanded)) {\n                setExpanded(defaultExpanded);\n            }\n        },\n        [ defaultExpanded, expanded ],\n    );\n\n    const categoriesTree = 'tree-Header';\n    const categoriesTreeClassName = concatClassNames(categoriesTree, styles.categoriesTree);\n    const treeElement = 'tree-Element';\n    const treeElementClassName = concatClassNames(treeElement, styles.treeElement);\n    const treeTooltip = 'tooltip';\n    const treeTooltipClassName = concatClassNames(treeTooltip, styles.tooltip);\n    const treeTooltipElement = 'tooltip-Element';\n    const treeTooltipElementClassName = concatClassNames(treeTooltipElement, styles.tooltipElement);\n\n    const renderTree = useCallback((node: ITreeItemType) => (\n        <TreeItem\n            key={node.id}\n            nodeId={node.id.toString()}\n            label={node.name}\n            onClick={() => handleTreeItemClick(node)}\n            onLabelClick={() => handleLabelClick(node)}\n        >\n            {isArray(node.children)\n                ? node.children.map((child) => renderTree(child))\n                : null}\n        </TreeItem>\n    ), [ handleLabelClick, handleTreeItemClick ]);\n\n    // const renderTree = useCallback((node: ITreeItemType) => (\n    //     <div className={categoriesTreeClassName}>\n    //         <div className={treeTooltipClassName}>\n    //             <div className={treeTooltipElementClassName}\n    //                  key={node.id}>\n    //                 {node.name}\n    //             </div>\n    //         </div>\n    //         <TreeItem\n    //             key={node.id}\n    //             className={treeElementClassName}\n    //             nodeId={node.id.toString()}\n    //             label={node.name}\n    //             onClick={() => handleTreeItemClick(node)}\n    //             onLabelClick={() => handleLabelClick(node)}\n    //         >\n    //             {isArray(node.children)\n    //                 ? node.children.map((child) => renderTree(child))\n    //                 : null}\n    //         </TreeItem>\n    //     </div>\n    // ), [ categoriesTreeClassName, treeTooltipClassName, treeTooltipElementClassName,\n    //     treeElementClassName, handleTreeItemClick, handleLabelClick, renderTree ]);\n\n    const renderTreeView = (treeItems: ITreeItemType[]) => treeItems.map((c) => renderTree(c));\n\n    return (\n        <TreeView\n            aria-label=\"rich object\"\n            defaultCollapseIcon={<MdExpandMore/>}\n            defaultExpandIcon={<MdChevronRight/>}\n            selected={selected}\n            expanded={expanded}\n        >\n            <div className={treeTooltipClassName}> {renderTreeView(items)}</div>\n            {renderTreeView(items)}\n        </TreeView>\n    );\n};\n\nexport default Tree;\n\nexport type {\n    ITreeItemType,\n};\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACTA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjFA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;;;AAOA;AAIA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AANA;AASA;AAAA;AATA;AAAA;AAAA;AAAA;AAAA;AAPA;AAAA;AAAA;AAAA;AAAA;AADA;AAwBA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AACA;AAAA;AAIA;AACA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAPA;AAAA;AAAA;AAAA;AAAA;AAeA;AACA;AAhHA;AAKA;;;AALA;AAiHA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjFA;AACA;AACA;AACA;AAEA;AACA;;;AAgBA;AAKA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAEA;AACA;AAIA;AAEA;AACA;AACA;AACA;AAIA;AAEA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AALA;AAQA;AAAA;AARA;AAAA;AAAA;AAAA;AAAA;AADA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AAlHA;AACA;AADA;AAmHA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}