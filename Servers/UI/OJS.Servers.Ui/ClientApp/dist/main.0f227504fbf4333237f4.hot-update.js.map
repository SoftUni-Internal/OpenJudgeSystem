{"version":3,"file":"main.0f227504fbf4333237f4.hot-update.js","sources":["C:/Users/User/Desktop/OpenJudgeSystem/Servers/UI/OJS.Servers.Ui/ClientApp/src/components/statistic-box/StatisticBox.tsx","C:/Users/User/Desktop/OpenJudgeSystem/Servers/UI/OJS.Servers.Ui/ClientApp/src/layout/header/PageHeader.tsx"],"sourcesContent":["import React, { ReactNode, useCallback, useMemo } from 'react';\r\n\r\nimport { isNil } from 'lodash';\r\n\r\nimport { format } from '../../utils/number-utils';\r\n\r\nimport { IStatistic } from '../../common/statistics-types';\r\n\r\nimport Heading, { HeadingType } from '../guidelines/headings/Heading';\r\n\r\nimport styles from './StatisticBox.module.scss';\r\nimport concatClassNames from '../../utils/class-names';\r\n\r\nenum StatisticBoxSize {\r\n    small = 1,\r\n    medium = 2,\r\n    big = 3,\r\n}\r\n\r\ninterface IStatisticBoxProps {\r\n    statistic: IStatistic;\r\n    renderIcon?: (() => ReactNode) | null;\r\n}\r\n\r\nconst StatisticBox = ({\r\n    statistic,\r\n    renderIcon = null,\r\n}: IStatisticBoxProps) => {\r\n    const { name, value } = statistic;\r\n\r\n    const formattedValue = useMemo(\r\n        () => format(value),\r\n        [ value ],\r\n    );\r\n\r\n    const renderIconInternal = useCallback(\r\n        () => {\r\n            if (isNil(renderIcon)) {\r\n                return null;\r\n            }\r\n\r\n            return (\r\n                <div>\r\n                    {renderIcon()}\r\n                </div>\r\n            );\r\n        },\r\n        [ renderIcon ],\r\n    );\r\n\r\n    const staticBoxClass = 'staticBox';\r\n    const staticBoxClassName = concatClassNames(styles.box, staticBoxClass);\r\n\r\n    return (\r\n        <div className={staticBoxClassName}>\r\n            {renderIconInternal()}\r\n            <div className={styles.valuesContainer}>\r\n                <Heading\r\n                  type={HeadingType.small}\r\n                  className={styles.name}\r\n                >\r\n                    {name}\r\n                </Heading>\r\n                <Heading\r\n                  className={styles.value}\r\n                  type={HeadingType.secondary}\r\n                >\r\n                    {formattedValue}\r\n                </Heading>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StatisticBox;\r\n\r\nexport {\r\n    StatisticBoxSize,\r\n};\r\n","import React, { useCallback } from 'react';\r\nimport logo from './softuni-logo-horizontal.svg';\r\nimport PageNav from '../nav/PageNav';\r\nimport Heading, { HeadingType } from '../../components/guidelines/headings/Heading';\r\nimport { useAuth } from '../../hooks/use-auth';\r\nimport { useUrls } from '../../hooks/use-urls';\r\nimport { ButtonSize, LinkButton, LinkButtonType } from '../../components/guidelines/buttons/Button';\r\nimport styles from './PageHeader.module.scss';\r\nimport concatClassNames from '../../utils/class-names';\r\n\r\nconst PageHeader = () => {\r\n    const { state: { user } } = useAuth();\r\n\r\n    const { getAdministrationNavigation } = useUrls();\r\n\r\n    const renderLinks = useCallback(() => {\r\n        const administrationLink = user.permissions.canAccessAdministration\r\n            ? (\r\n                <LinkButton\r\n                  type={LinkButtonType.plain}\r\n                  size={ButtonSize.none}\r\n                  to={getAdministrationNavigation()}\r\n                  isToExternal\r\n                  text=\"Administration\"\r\n                />\r\n            )\r\n            : null;\r\n\r\n        return (\r\n            <>\r\n                <LinkButton\r\n                  id=\"nav-contests-link\"\r\n                  type={LinkButtonType.plain}\r\n                  size={ButtonSize.none}\r\n                  to=\"/contests\"\r\n                  text=\"Contests\"\r\n                />\r\n                <LinkButton\r\n                  id=\"nav-submissions-link\"\r\n                  type={LinkButtonType.plain}\r\n                  size={ButtonSize.none}\r\n                  to=\"/submissions\"\r\n                  text=\"Submissions\"\r\n                />\r\n                { administrationLink }\r\n            </>\r\n        );\r\n    }, [ getAdministrationNavigation, user.permissions.canAccessAdministration ]);\r\n        \r\n    const headingSecondaryClass = 'headingSeconary';\r\n    const headingSecondaryClassName = concatClassNames(styles.heading, headingSecondaryClass);\r\n\r\n    return (\r\n        <header id=\"pageHeader\" className={styles.header}>\r\n            <div className={styles.headerSize}>\r\n                <div className={styles.headerLinks}>\r\n                    <Heading\r\n                      id=\"page-header-h2\"\r\n                      type={HeadingType.secondary}\r\n                      className={headingSecondaryClassName}\r\n                    >\r\n                        <a href=\"/\">\r\n                            <img src={logo} alt=\"softuni logo\" />\r\n                        </a>\r\n                    </Heading>\r\n                    { renderLinks() }\r\n                </div>\r\n                <PageNav />\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default PageHeader;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AAEA;AAIA;AAEA;AACA;;AAEA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AAUA;AAGA;AACA;AADA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAIA;AACA;AAEA;AACA;AAAA;AAEA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAkBA;AACA;AAjDA;AACA;AADA;AAkDA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7EA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AARA;AAkBA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AAKA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAbA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAkBA;AACA;AA9DA;AACA;;;AADA;AA+DA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}