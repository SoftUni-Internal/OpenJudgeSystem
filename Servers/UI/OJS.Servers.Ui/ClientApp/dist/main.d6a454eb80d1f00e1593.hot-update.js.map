{"version":3,"file":"main.d6a454eb80d1f00e1593.hot-update.js","sources":["C:/Users/User/Desktop/OpenJudgeSystem/Servers/UI/OJS.Servers.Ui/ClientApp/src/components/contests/contest-tasks-navigation/ContestTasksNavigation.module.scss","webpack:///./src/components/contests/contest-tasks-navigation/ContestTasksNavigation.module.scss?78f4","C:/Users/User/Desktop/OpenJudgeSystem/Servers/UI/OJS.Servers.Ui/ClientApp/src/components/contests/contest-tasks-navigation/ContestTasksNavigation.tsx"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".ContestTasksNavigation_tasksListSideNavigation__1paMb .ContestTasksNavigation_taskSideNavigationItem__pDQBW {\\n  font-family: Lato, serif;\\n}\\n\\n.ContestTasksNavigation_tasksListSideNavigation__1paMb .ContestTasksNavigation_taskSideNavigationItem__pDQBW {\\n  font-style: normal;\\n}\\n\\n.ContestTasksNavigation_tasksSideNavigation__3mqLn {\\n  text-align: center;\\n}\\n\\n.ContestTasksNavigation_tasksListSideNavigation__1paMb {\\n  align-items: flex-start;\\n  padding: 20px;\\n  display: flex;\\n}\\n.ContestTasksNavigation_tasksListSideNavigation__1paMb .ContestTasksNavigation_taskSideNavigationItem__pDQBW {\\n  text-align: start;\\n  font-size: 18px;\\n  margin-top: 10px;\\n  color: #3e4c5d;\\n}\\n.ContestTasksNavigation_tasksListSideNavigation__1paMb .ContestTasksNavigation_taskSideNavigationItem__pDQBW:hover {\\n  cursor: pointer;\\n}\\n.ContestTasksNavigation_tasksListSideNavigation__1paMb .ContestTasksNavigation_taskSideNavigationItem__pDQBW.ContestTasksNavigation_selected__3JnSj {\\n  color: #42abf8;\\n}\\n\\n.ContestTasksNavigation_taskListItem__3LppE {\\n  width: 100%;\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  position: relative;\\n  padding: 35px 0 5px;\\n  border-bottom: 1px solid #bebebe;\\n}\\n\\n.ContestTasksNavigation_resultsButton__3bPyz {\\n  border: none;\\n  align-self: end;\\n}\\n.ContestTasksNavigation_resultsButton__3bPyz:hover {\\n  background: none;\\n  cursor: pointer;\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://src/styles/fonts.scss\",\"webpack://src/components/contests/contest-tasks-navigation/ContestTasksNavigation.module.scss\",\"webpack://src/styles/variables.scss\",\"webpack://src/styles/colors.scss\"],\"names\":[],\"mappings\":\"AAMA;EACE,wBAPkB;ACEpB;;ADwBA;EACE,kBAvBkB;ACEpB;;AAFA;EACE,kBAAA;AAKF;;AAFA;EACE,uBAAA;EACA,aAAA;EACA,aAAA;AAKF;AAHE;EACE,iBAAA;EACA,eCXQ;EDaR,gBAAA;EACA,cECmB;AFGvB;AAFI;EACE,eAAA;AAIN;AADI;EACE,cEtBa;AFyBnB;;AAEA;EACE,WAAA;EACA,aAAA;EACA,8BAAA;EACA,mBAAA;EACA,kBAAA;EACA,mBAAA;EACA,gCAAA;AACF;;AAEA;EACE,YAAA;EACA,eAAA;AACF;AACE;EACE,gBAAA;EACA,eAAA;AACJ\",\"sourcesContent\":[\"﻿$font-family-lato: Lato, serif;\\r\\n$font-family-lato-regular: Lato-Regular, serif;\\r\\n$font-family-montserrat: Montserrat, serif;\\r\\n$font-family-montserrat-medium: Montserrat-Medium, serif;\\r\\n$font-style-normal: normal;\\r\\n\\r\\n%font-family-lato {\\r\\n  font-family: $font-family-lato;\\r\\n  @extend %font-style-normal;\\r\\n}\\r\\n\\r\\n%font-family-lato-regular {\\r\\n  font-family: $font-family-lato-regular;\\r\\n  @extend %font-style-normal;\\r\\n}\\r\\n\\r\\n%font-family-montserrat {\\r\\n  font-family: $font-family-montserrat;\\r\\n  @extend %font-style-normal;\\r\\n}\\r\\n\\r\\n%font-family-montserrat-medium {\\r\\n  font-family: $font-family-montserrat-medium;\\r\\n  @extend %font-style-normal;\\r\\n}\\r\\n\\r\\n%font-style-normal {\\r\\n  font-style: $font-style-normal;\\r\\n}\",\".tasksListSideNavigation .taskSideNavigationItem {\\n  font-family: Lato, serif;\\n}\\n\\n.tasksListSideNavigation .taskSideNavigationItem {\\n  font-style: normal;\\n}\\n\\n.tasksSideNavigation {\\n  text-align: center;\\n}\\n\\n.tasksListSideNavigation {\\n  align-items: flex-start;\\n  padding: 20px;\\n  display: flex;\\n}\\n.tasksListSideNavigation .taskSideNavigationItem {\\n  text-align: start;\\n  font-size: 18px;\\n  margin-top: 10px;\\n  color: #3e4c5d;\\n}\\n.tasksListSideNavigation .taskSideNavigationItem:hover {\\n  cursor: pointer;\\n}\\n.tasksListSideNavigation .taskSideNavigationItem.selected {\\n  color: #42abf8;\\n}\\n\\n.taskListItem {\\n  width: 100%;\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  position: relative;\\n  padding: 35px 0 5px;\\n  border-bottom: 1px solid #bebebe;\\n}\\n\\n.resultsButton {\\n  border: none;\\n  align-self: end;\\n}\\n.resultsButton:hover {\\n  background: none;\\n  cursor: pointer;\\n}\",\"﻿// Font-Sizes\\r\\n$f-size-10: 10px;\\r\\n$f-size-12: 12px;\\r\\n$f-size-16: 16px;\\r\\n$f-size-18: 18px;\\r\\n$f-size-24: 24px;\\r\\n$f-size-30: 30px;\\r\\n$f-size-36: 36px;\",\"$white-color: #fff;\\r\\n$warning-color: #FEC112;\\r\\n$grey-color: #565656;\\r\\n$light-blue-color: #42abf8;\\r\\n\\r\\n$primary-blue: #44a9f8;\\r\\n$background-color-footer: #3e4c5d;\\r\\n$background-color-light-gray: #fdfdfd;\\r\\n$wrappers-border-color: #cbcbcb;\\r\\n$success-background-color: #42abf8;\\r\\n$success-font-color: #fff;\\r\\n$color-btn-secondary: $light-blue-color;\\r\\n$color-btn-disabled: #bebebe;\\r\\n$background-color-btn-primary: $success-background-color;\\r\\n$background-color-btn-primary-hover: $primary-blue;\\r\\n$background-color-btn-secondary: white;\\r\\n$background-color-btn-secondary-hover: #e3f3fd;\\r\\n$bottom-border-color: #bebebe;\\r\\n$text-light-gray-color: #b5b5b5;\\r\\n$text-dark-gray-color: #3e4c5d;\\r\\n$box-shadow-color: 0 1px 5px rgb(0 0 0 / 20%), 0 3px 4px rgb(0 0 0 / 12%), 0 2px 4px rgb(0 0 0 / 14%);\\r\\n$primary-red: #fc4c50;\\r\\n$primary-green: #23be5e;\\r\\n$icon-green: green;\\r\\n$icon-blue: blue;\\r\\n$icon-red: red;\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"tasksListSideNavigation\": \"ContestTasksNavigation_tasksListSideNavigation__1paMb\",\n\t\"taskSideNavigationItem\": \"ContestTasksNavigation_taskSideNavigationItem__pDQBW\",\n\t\"tasksSideNavigation\": \"ContestTasksNavigation_tasksSideNavigation__3mqLn\",\n\t\"selected\": \"ContestTasksNavigation_selected__3JnSj\",\n\t\"taskListItem\": \"ContestTasksNavigation_taskListItem__3LppE\",\n\t\"resultsButton\": \"ContestTasksNavigation_resultsButton__3bPyz\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","var api = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??ref--5-oneOf-7-1!../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../node_modules/resolve-url-loader/index.js??ref--5-oneOf-7-3!../../../../node_modules/sass-loader/dist/cjs.js??ref--5-oneOf-7-4!./ContestTasksNavigation.module.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../../../node_modules/css-loader/dist/cjs.js??ref--5-oneOf-7-1!../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../node_modules/resolve-url-loader/index.js??ref--5-oneOf-7-3!../../../../node_modules/sass-loader/dist/cjs.js??ref--5-oneOf-7-4!./ContestTasksNavigation.module.scss\",\n      function () {\n        content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??ref--5-oneOf-7-1!../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../node_modules/resolve-url-loader/index.js??ref--5-oneOf-7-3!../../../../node_modules/sass-loader/dist/cjs.js??ref--5-oneOf-7-4!./ContestTasksNavigation.module.scss\");\n\n              content = content.__esModule ? content.default : content;\n\n              if (typeof content === 'string') {\n                content = [[module.id, content, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nmodule.exports = content.locals || {};","import React, { useCallback, useEffect, useState } from 'react';\n\nimport Heading, { HeadingType } from '../../guidelines/headings/Heading';\nimport List, { ListType } from '../../guidelines/lists/List';\nimport { Button, ButtonType, LinkButton, LinkButtonType } from '../../guidelines/buttons/Button';\n\nimport concatClassNames from '../../../utils/class-names';\nimport { IProblemType } from '../../../common/types';\nimport { ContestParticipationType, ContestResultType } from '../../../common/constants';\n\nimport { useProblems } from '../../../hooks/use-problems';\nimport { useCurrentContest } from '../../../hooks/use-current-contest';\n\nimport SubmissionResultPointsLabel from '../../submissions/submission-result-points-label/SubmissionResultPointsLabel';\n\nimport styles from './ContestTasksNavigation.module.scss';\n\nconst compareByOrderBy = (p1: IProblemType, p2: IProblemType) => p1.orderBy - p2.orderBy;\n\nconst ContestTasksNavigation = () => {\n    const [ resultsLink, setResultsLink ] = useState('');\n\n    const {\n        state: {\n            currentProblem,\n            problems,\n        },\n        actions: { selectProblemById },\n    } = useProblems();\n\n    const {\n        state: {\n            contest,\n            isOfficial,\n        },\n    } = useCurrentContest();\n\n    const renderTask = useCallback(\n        (problem: IProblemType) => {\n            const { id: currentId } = currentProblem || {};\n            const { id } = problem;\n\n            const selectedClassName = currentId === id\n                ? styles.selected\n                : '';\n\n            const className = concatClassNames(\n                styles.taskSideNavigationItem,\n                selectedClassName,\n            );\n\n            const participationType = isOfficial\n                ? ContestParticipationType.Compete\n                : ContestParticipationType.Practice;\n            \n            return (\n                <>\n                    <LinkButton\n                      // onClick={() => selectProblemById(problem.id)}\n                      className={className}\n                      type={LinkButtonType.plain}\n                      to={`/contests/${contest?.id}/${participationType}/${problem.id}`}\n                    >\n                        {problem.name}\n                    </LinkButton>\n                    <SubmissionResultPointsLabel\n                      points={problem.points}\n                      maximumPoints={problem.maximumPoints}\n                      isProcessed={false}\n                    />\n                </>\n            );\n        },\n        [ currentProblem, selectProblemById ],\n    );\n    const sideBarTasksList = 'all-tasks-list';\n    const sideBarTasksListClassName = concatClassNames(styles.tasksListSideNavigation, sideBarTasksList);\n    const renderTasksList = useCallback(\n        () => (\n            <List\n              values={problems.sort(compareByOrderBy)}\n              itemFunc={renderTask}\n              className={sideBarTasksListClassName}\n              itemClassName={styles.taskListItem}\n              type={ListType.numbered}\n            />\n        ),\n        [ problems, renderTask, sideBarTasksListClassName ],\n    );\n\n    useEffect(() => {\n        const participationType = isOfficial\n            ? ContestParticipationType.Compete\n            : ContestParticipationType.Practice;\n        const newResultsLink = `/contests/${contest?.id}/${participationType}/results/${ContestResultType.Simple}`;\n\n        setResultsLink(newResultsLink);\n    }, [ isOfficial, contest ]);\n\n    const resultsButtonClass = 'resultsButton';\n    const refreshButtonClassName = concatClassNames(styles.resultsButton, resultsButtonClass);\n\n    return (\n        <div className={styles.tasksSideNavigation}>\n            <Heading type={HeadingType.secondary}>Tasks</Heading>\n            {renderTasksList()}\n            <LinkButton\n              type={LinkButtonType.secondary}\n              to={resultsLink}\n              text=\"Results\"\n              className={refreshButtonClassName}\n            />\n        </div>\n    );\n};\n\nexport default ContestTasksNavigation;\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjFA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AAEA;;;;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AAMA;AAEA;AAAA;AACA;AAAA;AAEA;AAIA;AAKA;AAIA;AACA;AACA;AAEA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AATA;AAgBA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AADA;AAYA;AACA;AAGA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AAhGA;AASA;;;AATA;AAiGA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}