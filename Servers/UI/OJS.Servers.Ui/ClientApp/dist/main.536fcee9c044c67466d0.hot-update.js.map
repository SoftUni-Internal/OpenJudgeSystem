{"version":3,"file":"main.536fcee9c044c67466d0.hot-update.js","sources":["C:/Users/User/Desktop/OpenJudgeSystem/Servers/UI/OJS.Servers.Ui/ClientApp/src/components/common/InitProviders.tsx","C:/Users/User/Desktop/OpenJudgeSystem/Servers/UI/OJS.Servers.Ui/ClientApp/src/components/guidelines/icons/LockIcon.tsx","C:/Users/User/Desktop/OpenJudgeSystem/Servers/UI/OJS.Servers.Ui/ClientApp/src/components/guidelines/icons/MemoryIcon.tsx","C:/Users/User/Desktop/OpenJudgeSystem/Servers/UI/OJS.Servers.Ui/ClientApp/src/components/guidelines/icons/TimeLimitIcon.tsx","C:/Users/User/Desktop/OpenJudgeSystem/Servers/UI/OJS.Servers.Ui/ClientApp/src/components/home-header/HomeHeader.tsx","C:/Users/User/Desktop/OpenJudgeSystem/Servers/UI/OJS.Servers.Ui/ClientApp/src/components/profile/profile-submissions/ProfileSubmisssions.tsx","C:/Users/User/Desktop/OpenJudgeSystem/Servers/UI/OJS.Servers.Ui/ClientApp/src/identity-config.ts","C:/Users/User/Desktop/OpenJudgeSystem/Servers/UI/OJS.Servers.Ui/ClientApp/src/index.tsx"],"sourcesContent":["import React, { FC } from 'react';\r\nimport { IHaveChildrenProps } from './Props';\r\n\r\ninterface IProvider {\r\n    Provider: FC<IHaveChildrenProps>,\r\n    props?: any,\r\n}\r\n\r\n// A provider could be FC or IProvider when props are needed\r\ntype ProviderType = IProvider | FC;\r\n\r\ninterface IInitProviderProps {\r\n    providers: ProviderType[],\r\n    children: any,\r\n}\r\n\r\nconst InitProviders = ({ providers, children }: IInitProviderProps) => {\r\n    const initial = (<>{children}</>);\r\n\r\n    return providers\r\n        .reverse()\r\n        .reduce(\r\n            (current, item) => {\r\n                let Provider = item as FC<IHaveChildrenProps>;\r\n                let props = {};\r\n                const providerItem = item as IProvider;\r\n\r\n                // Checking if provider is of type IProvider to pass props\r\n                if (providerItem.Provider) {\r\n                    Provider = providerItem.Provider;\r\n                    props = providerItem.props;\r\n                }\r\n\r\n                return (\r\n                    // eslint-disable-next-line react/jsx-props-no-spreading\r\n                    <Provider {...props}>\r\n                        {current}\r\n                    </Provider>\r\n                );\r\n            },\r\n            initial,\r\n        );\r\n};\r\n\r\nexport default InitProviders;\r\n\r\nexport type {\r\n    ProviderType,\r\n};\r\n","import React from 'react';\r\nimport { AiOutlineLock } from 'react-icons/ai';\r\n\r\nimport IconSize from './common/icon-sizes';\r\nimport Icon, { IIconProps } from './Icon';\r\n\r\ninterface ILockIconProps extends IIconProps {\r\n}\r\n\r\nconst LockIcon = ({\r\n    className = '',\r\n    size = IconSize.Medium,\r\n    helperText = '',\r\n}: ILockIconProps) => (\r\n    <Icon\r\n      className={className}\r\n      size={size}\r\n      helperText={helperText}\r\n      Component={AiOutlineLock}\r\n    />\r\n);\r\n\r\nexport default LockIcon;\r\n","import React from 'react';\r\nimport { BiMemoryCard } from 'react-icons/bi';\r\nimport IconSize from './common/icon-sizes';\r\nimport Icon, { IIconProps } from './Icon';\r\n\r\ninterface IMemoryIconProps extends IIconProps {\r\n}\r\n\r\nconst MemoryIcon = ({\r\n    className = '',\r\n    size = IconSize.Medium,\r\n    helperText = '',\r\n}: IMemoryIconProps) => (\r\n    <Icon\r\n      className={className}\r\n      Component={BiMemoryCard}\r\n      size={size}\r\n      helperText={helperText}\r\n    />\r\n);\r\n\r\nexport default MemoryIcon;\r\n","import React from 'react';\r\nimport { BiTime } from 'react-icons/bi';\r\n\r\nimport IconSize from './common/icon-sizes';\r\nimport Icon, { IIconProps } from './Icon';\r\nimport concatClassNames from '../../../utils/class-names';\r\nimport styles from './TimeLimitIcon.module.scss';\r\n\r\ninterface IInProgressIconProps extends IIconProps {\r\n}\r\n\r\nconst TimeLimitIcon = ({\r\n    className = '',\r\n    size = IconSize.Medium,\r\n    helperText = '',\r\n}: IInProgressIconProps) => (\r\n    <Icon\r\n      className={concatClassNames(styles.timeLimitIcon, className)}\r\n      Component={BiTime}\r\n      size={size}\r\n      helperText={helperText}\r\n    />\r\n);\r\n\r\nexport default TimeLimitIcon;\r\n","import React, { FC, useCallback, useEffect, useMemo } from 'react';\r\n\r\nimport { isNil } from 'lodash';\r\n\r\nimport { IDictionary, IKeyValuePair } from '../../common/common-types';\r\nimport { toList } from '../../utils/object-utils';\r\nimport IconSize from '../guidelines/icons/common/icon-sizes';\r\n\r\nimport List, { Orientation } from '../guidelines/lists/List';\r\nimport StatisticBox from '../statistic-box/StatisticBox';\r\nimport UsersIcon from '../guidelines/icons/UsersIcon';\r\nimport CodeIcon from '../guidelines/icons/CodeIcon';\r\nimport ProblemIcon from '../guidelines/icons/ProblemIcon';\r\nimport StrategyIcon from '../guidelines/icons/StrategyIcon';\r\nimport ContestIcon from '../guidelines/icons/ContestIcon';\r\nimport SubmissionsPerDayIcon from '../guidelines/icons/SubmissionsPerDayIcon';\r\nimport Heading, { HeadingType } from '../guidelines/headings/Heading';\r\n\r\nimport { useHomeStatistics } from '../../hooks/use-home-statistics';\r\n\r\nimport styles from './HomeHeader.module.scss';\r\n\r\nconst keyToNameMap: IDictionary<string> = {\r\n    usersCount: 'Users',\r\n    submissionsCount: 'Submissions',\r\n    submissionsPerDayCount: 'Submissions per day',\r\n    problemsCount: 'Problems',\r\n    strategiesCount: 'Test strategies',\r\n    contestsCount: 'Contests',\r\n};\r\n\r\nconst defaultProps = { className: styles.icon };\r\n\r\n/* eslint-disable react/jsx-props-no-spreading */\r\nconst keyToIconComponent: IDictionary<FC> = {\r\n    usersCount: (props: any) => (<UsersIcon {...defaultProps} {...props} />),\r\n    submissionsCount: (props: any) => (<CodeIcon {...defaultProps} {...props} />),\r\n    submissionsPerDayCount: (props: any) => (<SubmissionsPerDayIcon {...defaultProps} {...props} />),\r\n    problemsCount: (props: any) => (<ProblemIcon {...defaultProps} {...props} />),\r\n    strategiesCount: (props: any) => (<StrategyIcon {...defaultProps} {...props} />),\r\n    contestsCount: (props: any) => (<ContestIcon {...defaultProps} {...props} />),\r\n};\r\n/* eslint-enable react/jsx-props-no-spreading */\r\n\r\nconst HomeHeader = () => {\r\n    const {\r\n        state: { statistics },\r\n        actions: { load },\r\n    } = useHomeStatistics();\r\n\r\n    useEffect(\r\n        () => {\r\n            (async () => {\r\n                await load();\r\n            })();\r\n        },\r\n        [ load ],\r\n    );\r\n\r\n    const renderIcon = (type: string) => {\r\n        const props = { size: IconSize.ExtraLarge, children: {} };\r\n        const func = keyToIconComponent[type];\r\n\r\n        return func(props);\r\n    };\r\n\r\n    const renderStatistic = useCallback(\r\n        (statisticItem: IKeyValuePair<number>) => {\r\n            const { key, value } = statisticItem;\r\n\r\n            return (\r\n                <>\r\n                    <StatisticBox\r\n                        statistic={{ name: keyToNameMap[key], value }}\r\n                        renderIcon={() => renderIcon(key)}\r\n                    />\r\n                </>\r\n            );\r\n        },\r\n        [],\r\n    );\r\n\r\n    const statisticsList = useMemo(\r\n        () => {\r\n            if (isNil(statistics)) {\r\n                return [];\r\n            }\r\n\r\n            return toList(statistics);\r\n        },\r\n        [ statistics ],\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <Heading type={HeadingType.primary}>\r\n                SoftUni Judge Numbers\r\n            </Heading>\r\n            <List\r\n                values={statisticsList}\r\n                itemFunc={renderStatistic}\r\n                className={styles.statisticsList}\r\n                itemClassName={styles.statisticsListItem}\r\n                wrap\r\n                orientation={Orientation.horizontal}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default HomeHeader;\r\n","/* eslint-disable */\r\nimport * as React from 'react';\r\nimport { DataGrid, GridColDef, GridValueGetterParams } from '@mui/x-data-grid';\r\nimport { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSubmissions } from '../../../hooks/submissions/use-submissions';\r\nimport { formatDate } from '../../../utils/dates';\r\nimport ExecutionResult from '../../submissions/execution-result/ExecutionResult';\r\nimport styles from './ProfileSubmissions.module.scss';\r\n\r\n// const columns: GridColDef[] = [\r\n//     { field: 'id', headerName: 'â„–', minWidth: 70, flex: 1 },\r\n//     {\r\n//         field: 'submittedOn',\r\n//         headerName: 'Submitted On',\r\n//         minWidth: 160,\r\n//         flex: 1,\r\n//         sortable: true,\r\n//         valueGetter: (params: GridValueGetterParams) => `${formatDate(new Date(params.row.submittedOn))}`,\r\n//     },\r\n//     {\r\n//         field: 'problem',\r\n//         headerName: 'Task',\r\n//         minWidth: 150,\r\n//         flex: 1,\r\n//         sortable: true,\r\n//         renderCell: (params: GridValueGetterParams) => (\r\n//             <Link to={`/submissions/${params.row.id}`} className={styles.contestLink}>{params.row.problem.name}</Link>\r\n//         ),\r\n//     },\r\n//     {\r\n//         field: 'points',\r\n//         headerName: 'Points',\r\n//         type: 'number',\r\n//         minWidth: 70,\r\n//         flex: 1,\r\n//         sortable: true,\r\n//         valueGetter: (params: GridValueGetterParams) => `${params.row.points}/${params.row.problem.maximumPoints}`,\r\n//     },\r\n//     {\r\n//         field: 'maxUsedTime',\r\n//         headerName: 'Memory Used',\r\n//         type: 'string',\r\n//         minWidth: 70,\r\n//         flex: 1,\r\n//         hide: true,\r\n//         sortable: false,\r\n//     },\r\n//     {\r\n//         field: 'maxUsedMemory',\r\n//         headerName: 'Memory Used',\r\n//         type: 'string',\r\n//         minWidth: 70,\r\n//         hide: true,\r\n//         sortable: true,\r\n//     },\r\n//     {\r\n//         field: 'executionResult',\r\n//         headerName: 'Execution Result',\r\n//         type: 'string',\r\n//         minWidth: 250,\r\n//         flex: 1,\r\n//         sortable: false,\r\n//         renderCell: (params: GridValueGetterParams) => (\r\n//             <ExecutionResult testRuns={params.row.testRuns} />\r\n//         ),\r\n//     },\r\n// ];\r\n\r\nconst ProfileSubmissions = () => {\r\n    // const { submissions, getUserSubmissions } = useSubmissions();\r\n    //\r\n    // useEffect(() => {\r\n    //     getUserSubmissions();\r\n    // }, [ getUserSubmissions ]);\r\n    //\r\n    // return (\r\n    //     <div style={{ height: 400, width: '100%' }}>\r\n    //         <DataGrid\r\n    //           rows={submissions}\r\n    //           columns={columns}\r\n    //           pageSize={5}\r\n    //           rowsPerPageOptions={[ 5 ]}\r\n    //           disableSelectionOnClick\r\n    //         />\r\n    //     </div>\r\n    // );\r\n\r\n    const x = 5;\r\n    return (<h1>{x}</h1>);\r\n};\r\n\r\nexport default ProfileSubmissions;\r\n","// import { WebStorageStateStore } from 'oidc-client';\r\n\r\nconst appBaseUrl = window.URLS.UI_URL;\r\nconst authorityBaseUrl = process.env.REACT_APP_PLATFORM_IDENTITY_BASE_URL;\r\nconst authorityUrl = `${process.env.REACT_APP_PLATFORM_IDENTITY_BASE_URL}${process.env.REACT_APP_PLATFORM_IDENTITY_AUTHORITY_URL_POSTFIX}`;\r\nconst authorityRegisterUrl = `${authorityUrl}/register`;\r\n// eslint-disable-next-line max-len\r\n\r\nconst IDENTITY_CONFIG = {\r\n    authority: authorityBaseUrl,\r\n    client_id: process.env.REACT_APP_IDENTITY_CLIENT_ID,\r\n    redirect_uri: `${appBaseUrl}/logincallback`,\r\n    login: `${authorityUrl}`,\r\n    register: authorityRegisterUrl,\r\n    automaticSilentRenew: false,\r\n    loadUserInfo: true,\r\n    silent_redirect_uri: `${appBaseUrl}/silentrenew`,\r\n    scope: process.env.REACT_APP_IDENTITY_ALLOWED_SCOPES,\r\n    response_type: process.env.REACT_APP_RESPONSE_TYPE,\r\n    // stateStore: new WebStorageStateStore({ store: window.localStorage }),\r\n    canAccessAdministrationCookieName: 'can_access_administration',\r\n    loggedInUsernameCookieName: 'logged_in_username',\r\n};\r\n\r\nconst METADATA_OIDC = {\r\n    issuer: authorityBaseUrl,\r\n    jwks_uri: `${authorityBaseUrl}/.well-known/jwks`,\r\n    authorization_endpoint: `${authorityUrl}/authorize`,\r\n    token_endpoint: `${authorityUrl}/token`,\r\n    userinfo_endpoint: `${authorityUrl}/userinfo`,\r\n    end_session_endpoint: `${authorityUrl}/endsession`,\r\n    check_session_iframe: `${authorityUrl}/checksession`,\r\n    revocation_endpoint: `${authorityUrl}/revocation`,\r\n    introspection_endpoint: `${authorityUrl}/introspect`,\r\n};\r\n\r\nexport {\r\n    IDENTITY_CONFIG,\r\n    METADATA_OIDC,\r\n};\r\n","import React, { Suspense } from 'react';\r\nimport { createRoot } from 'react-dom/client';\r\n\r\nimport App from './App';\r\nimport Loading from './components/guidelines/loading/Loading';\r\nimport register from './registerServiceWorker';\r\n\r\nconst container = document.getElementById('root');\r\nconst root = createRoot(container!);\r\n\r\nroot\r\n    .render(<Suspense fallback={<Loading isWholePage isLoading/>}>\r\n        <App/>\r\n    </Suspense>);\r\n\r\n\r\nregister();\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAgBA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAMA;AAGA;AACA;AA3BA;AA4BA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7CA;AACA;AAEA;AACA;;;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AALA;AACA;AADA;AAaA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBA;AACA;AACA;AACA;;;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AALA;AACA;AADA;AAaA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBA;AACA;AAEA;AACA;AACA;AACA;;;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AALA;AACA;AADA;AAaA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzBA;AAEA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANA;AAQA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAIA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AADA;AAOA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAJA;AAcA;AACA;AAjEA;AAIA;;;AAJA;AAkEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/GA;AACA;;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAtBA;AAuBA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7FA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrCA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}