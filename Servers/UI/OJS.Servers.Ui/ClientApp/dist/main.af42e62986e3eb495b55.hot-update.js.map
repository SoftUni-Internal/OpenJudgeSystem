{"version":3,"file":"main.af42e62986e3eb495b55.hot-update.js","sources":["C:/Users/User/Desktop/OpenJudgeSystem/Servers/UI/OJS.Servers.Ui/ClientApp/src/components/contests/contest-categories/ContestCategories.module.scss","C:/Users/User/Desktop/OpenJudgeSystem/Servers/UI/OJS.Servers.Ui/ClientApp/src/components/contests/contests-filters/ContestFilters.module.scss","C:/Users/User/Desktop/OpenJudgeSystem/Servers/UI/OJS.Servers.Ui/ClientApp/src/components/guidelines/trees/Tree.module.scss","webpack:///./src/components/contests/contest-categories/ContestCategories.module.scss?b377","C:/Users/User/Desktop/OpenJudgeSystem/Servers/UI/OJS.Servers.Ui/ClientApp/src/components/contests/contest-categories/ContestCategories.tsx","webpack:///./src/components/contests/contests-filters/ContestFilters.module.scss?beaf","C:/Users/User/Desktop/OpenJudgeSystem/Servers/UI/OJS.Servers.Ui/ClientApp/src/components/contests/contests-filters/ContestFilters.tsx","webpack:///./src/components/guidelines/trees/Tree.module.scss?1a82","C:/Users/User/Desktop/OpenJudgeSystem/Servers/UI/OJS.Servers.Ui/ClientApp/src/components/guidelines/trees/Tree.tsx"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".ContestCategories_heading__3r0tO {\\n  text-align: left;\\n  padding-bottom: 10px;\\n  border-bottom: 1px solid #bebebe;\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://src/components/contests/contest-categories/ContestCategories.module.scss\"],\"names\":[],\"mappings\":\"AAEA;EACE,gBAAA;EACA,oBAAA;EACA,gCAAA;AADF\",\"sourcesContent\":[\"@import \\\"src/styles/colors\\\";\\n\\n.heading {\\n  text-align: left;\\n  padding-bottom: 10px;\\n  border-bottom: 1px solid $bottom-border-color;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"heading\": \"ContestCategories_heading__3r0tO\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".ContestFilters_heading__2zpGe {\\n  text-align: left;\\n  padding-bottom: 10px;\\n  border-bottom: 1px solid #bebebe;\\n}\\n\\n.ContestFilters_filterTypeContainer__QuWHH {\\n  margin-top: 10px;\\n}\\n\\n.ContestFilters_listFilters__2MlVy {\\n  max-height: 130px;\\n  overflow: hidden;\\n  align-items: flex-start;\\n}\\n.ContestFilters_listFilters__2MlVy .ContestFilters_listFilterItem__29aBG {\\n  margin-top: 5px;\\n}\\n.ContestFilters_listFilters__2MlVy.ContestFilters_expanded__2nNsm {\\n  max-height: none;\\n  overflow: visible;\\n}\\n\\n.ContestFilters_btnSelectFilter__1BuMC {\\n  width: 95%;\\n}\\n\\n.ContestFilters_container__25CDp {\\n  min-width: 300px;\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://src/components/contests/contests-filters/ContestFilters.module.scss\"],\"names\":[],\"mappings\":\"AAEA;EACE,gBAAA;EACA,oBAAA;EACA,gCAAA;AADF;;AAIA;EACE,gBAAA;AADF;;AAIA;EACE,iBAAA;EACA,gBAAA;EACA,uBAAA;AADF;AAGE;EACE,eAAA;AADJ;AAIE;EACE,gBAAA;EACA,iBAAA;AAFJ;;AAMA;EACE,UAAA;AAHF;;AAMA;EACE,gBAAA;AAHF\",\"sourcesContent\":[\"@import \\\"src/styles/colors\\\";\\n\\n.heading {\\n  text-align: left;\\n  padding-bottom: 10px;\\n  border-bottom: 1px solid $bottom-border-color;\\n}\\n\\n.filterTypeContainer {\\n  margin-top: 10px;\\n}\\n\\n.listFilters {\\n  max-height: 130px;\\n  overflow: hidden;\\n  align-items: flex-start;\\n\\n  .listFilterItem {\\n    margin-top: 5px;\\n  }\\n\\n  &.expanded {\\n    max-height: none;\\n    overflow: visible;\\n  }\\n}\\n\\n.btnSelectFilter {\\n  width: 95%;\\n}\\n\\n.container {\\n  min-width: 300px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"heading\": \"ContestFilters_heading__2zpGe\",\n\t\"filterTypeContainer\": \"ContestFilters_filterTypeContainer__QuWHH\",\n\t\"listFilters\": \"ContestFilters_listFilters__2MlVy\",\n\t\"listFilterItem\": \"ContestFilters_listFilterItem__29aBG\",\n\t\"expanded\": \"ContestFilters_expanded__2nNsm\",\n\t\"btnSelectFilter\": \"ContestFilters_btnSelectFilter__1BuMC\",\n\t\"container\": \"ContestFilters_container__25CDp\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".Tree_categoriesTree__1AfoW {\\n  font-size: 1rem;\\n  font-family: \\\"Roboto\\\", \\\"Helvetica\\\", \\\"Arial\\\", sans-serif;\\n  font-weight: 400;\\n  line-height: 1.5;\\n}\\n\\n.Tree_treeElement__1J2kJ div:nth-child(2) {\\n  white-space: nowrap;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  width: 150px;\\n}\\n\\n.Tree_tooltip__2H9jN {\\n  position: absolute;\\n  border-bottom: 1px dotted black;\\n  left: 14%;\\n  display: none;\\n}\\n\\n.Tree_tooltipElement__25ie5 {\\n  width: 183px;\\n  background-color: grey;\\n  color: #fff;\\n  border-radius: 6px;\\n}\\n\\n.Tree_categoriesTree__1AfoW:hover .Tree_tooltip__2H9jN {\\n  display: block;\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://src/components/guidelines/trees/Tree.module.scss\"],\"names\":[],\"mappings\":\"AAAA;EACE,eAAA;EACA,uDAAA;EACA,gBAAA;EACA,gBAAA;AACF;;AAEA;EACE,mBAAA;EACA,gBAAA;EACA,uBAAA;EACA,YAAA;AACF;;AAEA;EACE,kBAAA;EACA,+BAAA;EACA,SAAA;EACA,aAAA;AACF;;AAEA;EACE,YAAA;EACA,sBAAA;EACA,WAAA;EACA,kBAAA;AACF;;AAIE;EACE,cAAA;AADJ\",\"sourcesContent\":[\".categoriesTree {\\r\\n  font-size: 1rem;\\r\\n  font-family: \\\"Roboto\\\", \\\"Helvetica\\\", \\\"Arial\\\", sans-serif;\\r\\n  font-weight: 400;\\r\\n  line-height: 1.5;\\r\\n}\\r\\n\\r\\n.treeElement div:nth-child(2) {\\r\\n  white-space: nowrap;\\r\\n  overflow: hidden;\\r\\n  text-overflow: ellipsis;\\r\\n  width: 150px;\\r\\n}\\r\\n\\r\\n.tooltip {\\r\\n  position: absolute;\\r\\n  border-bottom: 1px dotted black;\\r\\n  left: 14%;\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n.tooltipElement {\\r\\n  width: 183px;\\r\\n  background-color: grey;\\r\\n  color: #fff;\\r\\n  border-radius: 6px;\\r\\n\\r\\n}\\r\\n\\r\\n.categoriesTree:hover {\\r\\n  .tooltip {\\r\\n    display: block;\\r\\n  }\\r\\n}\\r\\n\\r\\n\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"categoriesTree\": \"Tree_categoriesTree__1AfoW\",\n\t\"treeElement\": \"Tree_treeElement__1J2kJ\",\n\t\"tooltip\": \"Tree_tooltip__2H9jN\",\n\t\"tooltipElement\": \"Tree_tooltipElement__25ie5\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","var api = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??ref--5-oneOf-7-1!../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../node_modules/resolve-url-loader/index.js??ref--5-oneOf-7-3!../../../../node_modules/sass-loader/dist/cjs.js??ref--5-oneOf-7-4!./ContestCategories.module.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../../../node_modules/css-loader/dist/cjs.js??ref--5-oneOf-7-1!../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../node_modules/resolve-url-loader/index.js??ref--5-oneOf-7-3!../../../../node_modules/sass-loader/dist/cjs.js??ref--5-oneOf-7-4!./ContestCategories.module.scss\",\n      function () {\n        content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??ref--5-oneOf-7-1!../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../node_modules/resolve-url-loader/index.js??ref--5-oneOf-7-3!../../../../node_modules/sass-loader/dist/cjs.js??ref--5-oneOf-7-4!./ContestCategories.module.scss\");\n\n              content = content.__esModule ? content.default : content;\n\n              if (typeof content === 'string') {\n                content = [[module.id, content, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nmodule.exports = content.locals || {};","import React, { useCallback, useMemo } from 'react';\nimport { isNil } from 'lodash';\nimport { useContestCategories } from '../../../hooks/use-contest-categories';\nimport Heading, { HeadingType } from '../../guidelines/headings/Heading';\n\nimport styles from './ContestCategories.module.scss';\nimport { useContests } from '../../../hooks/use-contests';\nimport { IHaveOptionalClassName } from '../../common/Props';\nimport Tree, { ITreeItemType } from '../../guidelines/trees/Tree';\nimport { IFilter } from '../../../common/contest-types';\nimport { useCategoriesBreadcrumbs } from '../../../hooks/use-contest-categories-breadcrumb';\n\ninterface IContestCategoriesProps extends IHaveOptionalClassName {\n    onCategoryClick: (filter: IFilter) => void;\n    defaultSelected?: string,\n}\n\nconst ContestCategories = ({\n    className = '',\n    onCategoryClick,\n    defaultSelected,\n}: IContestCategoriesProps) => {\n    const { state: { categories } } = useContestCategories();\n    const { state: { possibleFilters } } = useContests();\n    const { actions: { updateBreadcrumb } } = useCategoriesBreadcrumbs();\n    \n    const flattenTree = useCallback(\n        (treeItems: ITreeItemType[], result: ITreeItemType[]) => {\n            treeItems.forEach(({ children, ...rest }) => {\n                result.push(rest);\n\n                if (!isNil(children)) {\n                    flattenTree(children, result);\n                }\n            });\n\n            return result;\n        },\n        [],\n    );\n\n    const getParents = useCallback(\n        (result: string[], allItems: ITreeItemType[], searchId?: string) => {\n            if (isNil(searchId)) {\n                return result;\n            }\n\n            const node = allItems.find(({ id }) => id.toString() === searchId);\n\n            if (isNil(node)) {\n                return result;\n            }\n\n            if (node.id.toString() === searchId) {\n                result.push(searchId);\n            }\n\n            getParents(result, allItems, node.parentId?.toString());\n\n            return result;\n        },\n        [],\n    );\n\n    const categoriesFlat = useMemo(\n        () => flattenTree(categories, []),\n        [ categories, flattenTree ],\n    );\n\n    const defaultExpanded = useMemo(\n        () => getParents([], categoriesFlat, defaultSelected),\n        [ defaultSelected, categoriesFlat, getParents ],\n    );\n\n    const handleTreeLabelClick = useCallback((node: ITreeItemType) => {\n        const filter = possibleFilters.find(({ value }) => value.toString() === node.id.toString());\n        const category = categoriesFlat.find(({ id }) => id.toString() === node.id.toString());\n\n        if (isNil(filter)) {\n            return;\n        }\n\n        onCategoryClick(filter);\n        updateBreadcrumb(category, categoriesFlat);\n    }, [ possibleFilters, categoriesFlat, onCategoryClick, updateBreadcrumb ]);\n    \n    return (\n        <div className={className as string}>\n            <Heading\n              type={HeadingType.small}\n              className={styles.heading}\n            >\n                Category\n            </Heading>\n            <Tree\n              items={categories}\n              onTreeLabelClick={handleTreeLabelClick}\n              defaultSelected={defaultSelected}\n              defaultExpanded={defaultExpanded}\n            />\n        </div>\n    );\n};\n\nexport default ContestCategories;\n","var api = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??ref--5-oneOf-7-1!../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../node_modules/resolve-url-loader/index.js??ref--5-oneOf-7-3!../../../../node_modules/sass-loader/dist/cjs.js??ref--5-oneOf-7-4!./ContestFilters.module.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../../../node_modules/css-loader/dist/cjs.js??ref--5-oneOf-7-1!../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../node_modules/resolve-url-loader/index.js??ref--5-oneOf-7-3!../../../../node_modules/sass-loader/dist/cjs.js??ref--5-oneOf-7-4!./ContestFilters.module.scss\",\n      function () {\n        content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??ref--5-oneOf-7-1!../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../node_modules/resolve-url-loader/index.js??ref--5-oneOf-7-3!../../../../node_modules/sass-loader/dist/cjs.js??ref--5-oneOf-7-4!./ContestFilters.module.scss\");\n\n              content = content.__esModule ? content.default : content;\n\n              if (typeof content === 'string') {\n                content = [[module.id, content, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nmodule.exports = content.locals || {};","import React, { useCallback, useEffect, useState } from 'react';\nimport { isNil } from 'lodash';\nimport { useSearchParams } from 'react-router-dom';\nimport List, { Orientation } from '../../guidelines/lists/List';\nimport Heading, { HeadingType } from '../../guidelines/headings/Heading';\n\nimport { FilterType, IFilter } from '../../../common/contest-types';\nimport ContestCategories from '../contest-categories/ContestCategories';\n\nimport styles from './ContestFilters.module.scss';\nimport Button, { ButtonSize, ButtonType } from '../../guidelines/buttons/Button';\nimport { useContests } from '../../../hooks/use-contests';\nimport { groupByType } from '../../../common/filter-utils';\nimport ExpandButton from '../../guidelines/buttons/ExpandButton';\nimport concatClassNames from '../../../utils/class-names';\nimport { useContestStrategyFilters } from '../../../hooks/use-contest-strategy-filters';\nimport { useContestCategories } from '../../../hooks/use-contest-categories';\n\ninterface IContestFiltersProps {\n    onFilterClick: (filter: IFilter) => void;\n}\n\ninterface IFiltersGroup {\n    type: FilterType;\n    filters: IFilter[];\n}\n\nconst ContestFilters = ({ onFilterClick }: IContestFiltersProps) => {\n    const [ filtersGroups, setFiltersGroups ] = useState<IFiltersGroup[]>([]);\n    const [ expanded, setExpanded ] = useState(false);\n    const [ defaultSelected, setDefaultSelected ] = useState('');\n    const [ searchParams ] = useSearchParams();\n    const [ isLoaded, setIsLoaded ] = useState(false);\n    const { actions: { load: loadStrategies } } = useContestStrategyFilters();\n    const { actions: { load: loadCategories } } = useContestCategories();\n\n    const {\n        state: {\n            possibleFilters,\n            filters,\n        },\n    } = useContests();\n\n    const handleFilterClick = useCallback(\n        (filterId: number) => {\n            const filter = possibleFilters.find(({ id }) => filterId === id);\n\n            if (isNil(filter)) {\n                return;\n            }\n\n            onFilterClick(filter);\n        },\n        [ possibleFilters, onFilterClick ],\n    );\n\n    const getRenderFilterStatusItem = useCallback(\n        (type: FilterType) => ({ id, name }: IFilter) => {\n            const filterIsSelected = filters.some((f) => f.name === name);\n            const buttonType = filterIsSelected\n                ? ButtonType.primary\n                : ButtonType.secondary;\n\n            const btnClassName = type === FilterType.Status\n                ? styles.btnSelectFilter\n                : '';\n\n            return (\n                <Button\n                    type={buttonType}\n                    onClick={() => handleFilterClick(id)}\n                    className={btnClassName}\n                    text={name}\n                    size={ButtonSize.small}\n                />\n            );\n        },\n        [ handleFilterClick, filters ],\n    );\n\n    // const strategiesTree = 'tree-Header';\n    // const strategiesTreeClassName = concatClassNames(strategiesTree, styles.categoriesTree);\n    // const strategyElement = 'tree-Element';\n    // const strategyElementClassName = concatClassNames(strategyElement, styles.treeElement);\n    // const strategyTooltip = 'tooltip';\n    // const strategyTooltipClassName = concatClassNames(strategyTooltip, styles.tooltip);\n    // const strategyTooltipElement = 'tooltip-Element';\n    // const strategyTooltipElementClassName=concatClassNames\n    // (strategyTooltipElement,styles.tooltipElement);\n\n    const getRenderFilterStrategyItem = useCallback(\n        (type: FilterType) => ({ id, name }: IFilter) => {\n            const filterIsSelected = filters.some((f) => f.name === name);\n            const buttonType = filterIsSelected\n                ? ButtonType.primary\n                : ButtonType.secondary;\n\n            const btnClassName = type === FilterType.Status\n                ? styles.btnSelectFilter\n                : '';\n\n            return (\n                <div className=\"hiii\">\n                    <Button\n                        type={buttonType}\n                        onClick={() => handleFilterClick(id)}\n                        className={btnClassName}\n                        text={name}\n                        size={ButtonSize.small}\n                    />\n                </div>\n            );\n        },\n        [ handleFilterClick, filters ],\n    );\n    \n    // const getRenderFilterItemFunc = useCallback(\n    //     (type: FilterType) => ({ id, name }: IFilter) => {\n    //         // TODO: investigate why filters change ids\n    //         //  and use id instead of name for checking if filter is selected\n    //         const filterIsSelected = filters.some((f) => f.name === name);\n    //\n    //\n    //         // let type === FilterType.Status ? getRenderFilterStatusItem : getRenderFilterStrategyItem;\n    //         let bla = getRenderFilterStatusItem.bind(getRenderFilterStrategyItem);\n    //         return (\n    //             <div>{getRenderFilterStatusItem}</div>\n    //             <div>getRenderFilterStrategyItem</div>\n    //         );\n    //         // return (\n    //         //     <div id=\"hello\">\n    //         //        \n    //         //         asd<Button\n    //         //       type={buttonType}\n    //         //       onClick={() => handleFilterClick(id)}\n    //         //       className={btnClassName}\n    //         //       text={name}\n    //         //       size={ButtonSize.small}\n    //         //     />\n    //         //     </div>\n    //         // );\n    //     },\n    //     [ handleFilterClick, filters ],\n    // );\n\n    const toggleFiltersExpanded = useCallback(\n        (isExpanded) => setExpanded(isExpanded),\n        [],\n    );\n\n    const renderExpandButton = useCallback(\n        (allFilters: IFilter[]) => {\n            const maxFiltersToDisplayCount = 3;\n\n            return allFilters.length > maxFiltersToDisplayCount\n                ? <ExpandButton onExpandChanged={toggleFiltersExpanded}/>\n                : null;\n        },\n        [ toggleFiltersExpanded ],\n    );\n\n    const renderFilter = useCallback(\n        (fg: IFiltersGroup) => {\n            const { type, filters: groupFilters } = fg;\n            const className = concatClassNames(\n                styles.listFilters,\n                expanded\n                    ? styles.expanded\n                    : '',\n            );\n\n            const listOrientation = type === FilterType.Status\n                ? Orientation.horizontal\n                : Orientation.vertical;\n\n            return (\n                <div className={styles.filterTypeContainer}>\n                    <Heading\n                        type={HeadingType.small}\n                        className={styles.heading}\n                    >\n                        {type}\n                    </Heading>\n                    <List\n                        values={groupFilters}\n                        itemFunc={getRenderFilterStrategyItem(type)}\n                        orientation={listOrientation}\n                        className={className}\n                        itemClassName={styles.listFilterItem}\n                        fullWidth\n                    />\n                    {renderExpandButton(groupFilters)}\n                </div>\n            );\n        },\n        [ expanded, getRenderFilterItemFunc, renderExpandButton ],\n    );\n\n    useEffect(\n        () => {\n            const plainFilters = possibleFilters.filter(({ type }) => type !== FilterType.Category);\n\n            setFiltersGroups(groupByType(plainFilters));\n        },\n        [ possibleFilters ],\n    );\n\n    useEffect(\n        () => {\n            if (isLoaded) {\n                return;\n            }\n\n            const searchParamName = FilterType.Category.toString();\n            let selectedCategory = searchParams.get(searchParamName);\n\n            if (isNil(selectedCategory)) {\n                selectedCategory = searchParams.get(searchParamName.toLowerCase());\n            }\n\n            if (isNil(selectedCategory)) {\n                return;\n            }\n\n            setIsLoaded(true);\n            setDefaultSelected(selectedCategory.toString());\n        },\n        [ isLoaded, searchParams ],\n    );\n\n    useEffect(\n        () => {\n            (async () => {\n                await loadStrategies();\n            })();\n        },\n        [ loadStrategies ],\n    );\n\n    useEffect(\n        () => {\n            (async () => {\n                await loadCategories();\n            })();\n        },\n        [ loadCategories ],\n    );\n\n    return (\n        <div className={styles.container}>\n            <ContestCategories\n                className={styles.filterTypeContainer}\n                onCategoryClick={onFilterClick}\n                defaultSelected={defaultSelected}\n            />\n            <List\n                values={filtersGroups}\n                itemFunc={renderFilter}\n                fullWidth\n            />\n        </div>\n    );\n};\n\nexport default ContestFilters;\n","var api = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??ref--5-oneOf-7-1!../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../node_modules/resolve-url-loader/index.js??ref--5-oneOf-7-3!../../../../node_modules/sass-loader/dist/cjs.js??ref--5-oneOf-7-4!./Tree.module.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../../../node_modules/css-loader/dist/cjs.js??ref--5-oneOf-7-1!../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../node_modules/resolve-url-loader/index.js??ref--5-oneOf-7-3!../../../../node_modules/sass-loader/dist/cjs.js??ref--5-oneOf-7-4!./Tree.module.scss\",\n      function () {\n        content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??ref--5-oneOf-7-1!../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../node_modules/resolve-url-loader/index.js??ref--5-oneOf-7-3!../../../../node_modules/sass-loader/dist/cjs.js??ref--5-oneOf-7-4!./Tree.module.scss\");\n\n              content = content.__esModule ? content.default : content;\n\n              if (typeof content === 'string') {\n                content = [[module.id, content, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nmodule.exports = content.locals || {};","import React, { useCallback, useEffect, useState } from 'react';\nimport { TreeItem, TreeView } from '@material-ui/lab';\nimport { MdChevronRight, MdExpandMore } from 'react-icons/md';\nimport { isArray, isEmpty } from 'lodash';\n\nimport concatClassNames from '../../../utils/class-names';\nimport styles from './Tree.module.scss';\n\ninterface ITreeItemType {\n    id: string,\n    name: string,\n    parentId?: string,\n    children?: ITreeItemType[],\n}\n\ninterface ITreeProps {\n    items: ITreeItemType[];\n    onTreeLabelClick: (node: ITreeItemType) => void;\n    defaultSelected?: string;\n    defaultExpanded?: string[];\n}\n\nconst Tree = ({\n    items,\n    onTreeLabelClick,\n    defaultSelected,\n    defaultExpanded = [],\n}: ITreeProps) => {\n    const [ expanded, setExpanded ] = useState([] as string[]);\n    const [ selected, setSelected ] = useState('');\n\n    const handleTreeItemClick = useCallback(\n        (node: ITreeItemType) => {\n            const id = node.id.toString();\n            let newExpanded = Array.from(expanded);\n\n            if (expanded.includes(id)) {\n                newExpanded = newExpanded.filter((e) => e !== id);\n            } else {\n                newExpanded.push(id);\n            }\n\n            setExpanded(newExpanded);\n        },\n        [ expanded, setExpanded ],\n    );\n\n    const handleLabelClick = useCallback(\n        (node: ITreeItemType) => {\n            setSelected(node.id.toString());\n\n            onTreeLabelClick(node);\n        },\n        [ onTreeLabelClick ],\n    );\n\n    useEffect(\n        () => {\n            if (isEmpty(selected) && defaultSelected) {\n                setSelected(defaultSelected);\n            }\n        },\n        [ defaultSelected, selected ],\n    );\n\n    useEffect(\n        () => {\n            if (isEmpty(expanded) && !isEmpty(defaultExpanded)) {\n                setExpanded(defaultExpanded);\n            }\n        },\n        [ defaultExpanded, expanded ],\n    );\n\n    const categoriesTree = 'tree-Header';\n    const categoriesTreeClassName = concatClassNames(categoriesTree, styles.categoriesTree);\n    const treeElement = 'tree-Element';\n    const treeElementClassName = concatClassNames(treeElement, styles.treeElement);\n    const treeTooltip = 'tooltip';\n    const treeTooltipClassName = concatClassNames(treeTooltip, styles.tooltip);\n    const treeTooltipElement = 'tooltip-Element';\n    const treeTooltipElementClassName=concatClassNames(treeTooltipElement,styles.tooltipElement);\n\n    const renderTree = useCallback((node: ITreeItemType) => (\n        <div className={categoriesTreeClassName}>\n            <div className={treeTooltipClassName}>\n                <div className={treeTooltipElementClassName}\n                 key={node.id}>\n                    {node.name}\n                </div>\n            </div>\n            <TreeItem\n                key={node.id}\n                className={treeElementClassName}\n                nodeId={node.id.toString()}\n                label={node.name}\n                onClick={() => handleTreeItemClick(node)}\n                onLabelClick={() => handleLabelClick(node)}\n            >\n                {isArray(node.children)\n                    ? node.children.map((child) => renderTree(child))\n                    : null}\n            </TreeItem>\n        </div>\n    ), [ categoriesTreeClassName,treeTooltipClassName, treeTooltipElementClassName, \n        treeElementClassName, handleLabelClick, handleTreeItemClick ]);\n    \n    const renderTreeView = (treeItems: ITreeItemType[]) => treeItems.map((c) => renderTree(c));\n\n    return (\n        <TreeView\n            aria-label=\"rich object\"\n            defaultCollapseIcon={<MdExpandMore/>}\n            defaultExpandIcon={<MdChevronRight/>}\n            selected={selected}\n            expanded={expanded}\n        >\n            <div className={treeTooltipClassName}> {renderTreeView(items)}</div> \n            {renderTreeView(items)}\n        </TreeView>\n    );\n};\n\nexport default Tree;\n\nexport type {\n    ITreeItemType,\n};\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACTA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACfjFA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;;;AAOA;AAIA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AACA;AAAA;AAIA;AACA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAPA;AAAA;AAAA;AAAA;AAAA;AAeA;AACA;AAtFA;AAKA;;;AALA;AAuFA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjFA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAWA;AAAA;AACA;AADA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAMA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAIA;AAIA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAQA;AAnBA;AAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAIA;AAIA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAUA;AArBA;AA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAIA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAIA;AAEA;AAAA;AACA;AAOA;AAIA;AACA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAPA;AAAA;AAAA;AAAA;AAAA;AAkBA;AAIA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAIA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAIA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AAAA;AAaA;AACA;AA5OA;AAIA;;;AAJA;AA6OA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjFA;AACA;AACA;AACA;AAEA;AACA;;;AAgBA;AAKA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAEA;AACA;AAIA;AAEA;AACA;AACA;AACA;AAIA;AAEA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AANA;AASA;AAAA;AATA;AAAA;AAAA;AAAA;AAAA;AAPA;AAAA;AAAA;AAAA;AAAA;AADA;AACA;AAuBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AApGA;AACA;AADA;AAqGA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}