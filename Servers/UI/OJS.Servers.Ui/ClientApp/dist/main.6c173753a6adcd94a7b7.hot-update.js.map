{"version":3,"file":"main.6c173753a6adcd94a7b7.hot-update.js","sources":["C:/Users/User/Desktop/OpenJudgeSystem/Servers/UI/OJS.Servers.Ui/ClientApp/src/hooks/use-contest-categories.tsx"],"sourcesContent":["import React, { createContext, useCallback, useContext, useEffect, useState } from 'react';\nimport { isEmpty } from 'lodash';\nimport { IHaveChildrenProps } from '../components/common/Props';\nimport { IContestCategoryTreeType } from '../common/types';\nimport { useHttp } from './use-http';\nimport { useUrls } from './use-urls';\nimport { useLoading } from './use-loading';\n\ninterface IContestCategoriesContext {\n    state: {\n        categories: IContestCategoryTreeType[];\n        isLoaded: boolean,\n    };\n    actions: {\n        load: () => Promise<void>;\n    };\n}\n\ninterface IContestCategoriesProviderProps extends IHaveChildrenProps {\n}\n\nconst defaultState = { state: { categories: [] as IContestCategoryTreeType[] } };\n\nconst ContestCategoriesContext = createContext<IContestCategoriesContext>(defaultState as IContestCategoriesContext);\n\nconst ContestCategoriesProvider = ({ children }: IContestCategoriesProviderProps) => {\n    const [ categories, setCategories ] = useState(defaultState.state.categories);\n    const { getCategoriesTreeUrl } = useUrls();\n    const { startLoading, stopLoading } = useLoading();\n\n    const {\n        get,\n        data,\n        isSuccess,\n    } = useHttp(getCategoriesTreeUrl);\n\n    const load = useCallback(\n        async () => {\n            startLoading();\n            await get();\n            stopLoading();\n        },\n        [ get, startLoading, stopLoading ],\n    );\n\n    useEffect(\n        () => {\n            if (isEmpty(data)) {\n                return;\n            }\n\n            setCategories(data as IContestCategoryTreeType[]);\n        },\n        [ data ],\n    );\n\n    const value = {\n        state: {\n            categories,\n            isLoaded: isSuccess,\n        },\n        actions: { load },\n    };\n\n    return (\n        <ContestCategoriesContext.Provider value={value}>\n            <div className=\"hello\">{children}</div>\n        </ContestCategoriesContext.Provider>\n    );\n};\n\nconst useContestCategories = () => useContext(ContestCategoriesContext);\n\nexport default ContestCategoriesProvider;\n\nexport {\n    useContestCategories,\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAGA;AACA;AACA;;AAeA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AADA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAGA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AALA;AAQA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AA7CA;AAEA;;;AAFA;AACA;AA6CA;AAAA;AACA;AADA;AAAA;AACA;AADA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}