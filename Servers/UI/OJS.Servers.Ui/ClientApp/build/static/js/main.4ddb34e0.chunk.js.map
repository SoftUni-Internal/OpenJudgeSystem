{"version":3,"sources":["components/guidelines/forms/FormControl.module.scss","components/profile/profile-about-info/ProfileAboutInfo.module.scss","components/submissions/submission-results/SubmissionResults.module.scss","components/contests/contest-tasks-navigation/ContestTasksNavigation.module.scss","components/guidelines/loading/Loading.module.scss","components/guidelines/headings/Heading.module.scss","components/submissions/execution-result/ExecutionResult.module.scss","components/problems/problem-resource/ProblemResource.module.scss","layout/nav/PageNav.module.scss","components/home-contests/HomeContests.module.scss","components/contests/execution-type-selector/ExecutionTypeSelector.module.scss","components/contests/contest/Contest.module.scss","pages/shared/set-layout.module.scss","components/profile/profile-submissions/ProfileSubmissions.module.scss","components/problems/problem-resources/ProblemResources.module.scss","layout/content/PageContent.module.scss","layout/footer/PageFooter.module.scss","components/guidelines/loading/Loading.svg","common/common.ts","components/guidelines/loading/Loading.tsx","hooks/use-loading.tsx","hooks/use-http.tsx","hooks/use-notifications.tsx","utils/urls.ts","utils/cookies.ts","hooks/use-auth.tsx","layout/header/softuni-logo-horizontal.svg","utils/class-names.ts","components/guidelines/buttons/Button.tsx","components/guidelines/lists/List.tsx","layout/nav/PageNav.tsx","components/guidelines/headings/Heading.tsx","layout/header/PageHeader.tsx","hooks/contests/use-contests.tsx","utils/dates.ts","components/guidelines/countdown/Countdown.tsx","components/home-contests/contest-card/ContestCard.tsx","pages/shared/set-layout.tsx","components/home-contests/HomeContests.tsx","components/home-header/HomeHeader.tsx","pages/home/HomePage.tsx","utils/promise-utils.ts","pages/logout/LogoutPage.tsx","utils/id-generator.ts","components/guidelines/forms/FormControl.tsx","pages/login/LoginPage.tsx","pages/register/RegisterPage.tsx","hooks/use-users.tsx","components/profile/profile-about-info/ProfileAboutInfo.tsx","hooks/submissions/use-submissions.tsx","components/submissions/execution-result/ExecutionResult.tsx","components/profile/profile-submissions/ProfileSubmisssions.tsx","hooks/use-participations.tsx","components/profile/profile-contest-participations/ProfileContestParticipations.tsx","pages/shared/make-private.tsx","components/guidelines/tabs/Tabs.tsx","pages/profile/ProfilePage.tsx","components/Diff.tsx","hooks/submissions/use-submissions-details.tsx","components/submissions/submission-results/SubmissionResults.tsx","components/submissions/test-runs/test-run-heading/SubmissionDetailsHeading.tsx","pages/submissions/SubmissionPage.tsx","components/contests/contest-tasks-navigation/ContestTasksNavigation.tsx","components/code-editor/CodeEditor.tsx","components/contests/execution-type-selector/ExecutionTypeSelector.tsx","components/problems/problem-resource/ProblemResource.tsx","components/problems/problem-resources/ProblemResources.tsx","components/problems/problem-submissions/SubmissionResults.tsx","components/contests/contest-main-navigation/ContestMainNavigation.tsx","components/contests/contest/Contest.tsx","pages/contests/ContestPage.tsx","layout/content/PageContent.tsx","layout/footer/PageFooter.tsx","services/storage-service.tsx","hooks/use-services.tsx","App.tsx","registerServiceWorker.ts","index.tsx","components/home-header/HomeHeader.module.scss","components/guidelines/buttons/Button.module.scss","layout/header/PageHeader.module.scss","components/contests/contest-main-navigation/ContestMainNavigation.module.scss","components/guidelines/lists/List.module.scss","components/home-contests/contest-card/ContestCard.module.scss"],"names":["module","exports","_path","_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgLoading","_ref","svgRef","title","titleId","props","id","xmlns","xmlnsXlink","x","y","viewBox","enableBackground","xmlSpace","ref","d","attributeName","attributeType","type","dur","from","to","repeatCount","HttpStatus","ForwardRef","loadingRoot","document","createElement","Loading","isLoading","useEffect","body","appendChild","removeChild","ReactDOM","createPortal","className","styles","loadingWrapper","loading","svg","defaultState","LoadingContext","createContext","useLoading","useContext","LoadingProvider","children","useState","setLoading","value","startLoading","useCallback","stopLoading","Provider","useHttp","url","headers","response","setResponse","NotStarted","status","setStatus","error","setError","actualHeaders","setActualHeaders","request","func","a","Pending","resp","Success","Unauthorized","Error","replaceParameters","urlToReplace","parameters","replace","placeholder","placeholderKey","data","useMemo","get","responseType","axios","post","requestData","notification","message","leaveTimeout","showNotification","NotificationsContext","useNotifications","NotificationsProvider","setNotification","setShowNotification","showError","m","n","showWarning","store","addNotification","container","animationIn","animationOut","dismiss","duration","onScreen","baseUrl","window","URLS","UI_URL","administrationBaseUrl","ADMINISTRATION_URL","loginSubmitUrl","logoutUrl","getProfileInfoUrl","getIndexContestsUrl","startContestParticipationUrl","getSubmissionDetailsUrl","getSubmissionsForProfileUrl","submitUrl","getParticipationsForProfileUrl","getProblemResourceUrl","getSubmissionResultsByProblem","administrationContestsGridUrl","getCookie","name","cookieValue","cookie","cookies","split","trim","substring","decodeURIComponent","user","username","isLoggedIn","permissions","canAccessAdministration","AuthContext","useAuth","AuthProvider","setUser","setUsername","password","setPassword","loginSubmitRequest","loginSubmitRequestResponse","loginSubmitRequestStatus","logoutRequest","logoutResponse","signIn","Username","Password","RememberMe","signOut","getUser","tryGetUserDetailsFromCookie","loggedInUsername","canAccessAdministrationCookie","setUserDetails","userDetails","loadedUser","concatClassNames","classNames","filter","flat","join","classNameToType","primary","btn","secondary","btnSecondary","plain","btnPlain","disabled","btnDisabled","Button","onClick","text","size","sizeToClassName","small","btnSmall","medium","btnMedium","large","btnLarge","buttonClassName","content","LinkButton","defaultKeyFunc","objWithId","toString","JSON","stringify","List","values","itemFunc","keyFunc","itemClassName","orientation","listTypeClassName","listNormal","listNumbered","listNumberedAlpha","listBulleted","listOrientationClassName","listHorizontal","listClassName","itemClassNameCombined","items","map","userRoutes","link","isPrimary","anonymousRoutes","PageNav","routes","setRoutes","btnClassName","listNav","Heading","headingTypeClassName","headingClassName","PageHeader","renderLinks","administrationLink","href","headerLink","header","headerSize","headerLinks","heading","src","logo","alt","currentContest","currentProblem","isContestParticipationOfficial","selectedSubmissionTypeId","ContestsContext","useContests","ContestsProvider","activeContests","setActiveContests","pastContests","setPastContests","setIsContestParticipationOfficial","setCurrentContest","setAllProblems","setCurrentProblem","setSelectedSubmissionTypeId","getContestsForIndexRequest","getContestsForIndexData","startContestParticipationRequest","startContestParticipationData","getProblemResourceRequest","getProblemResourceResponse","getForHome","startContestParticipation","isOfficial","idStr","official","hasDefaultSubmissionType","submissionTypes","some","st","isSelectedByDefault","setSubmissionType","setDefaultSubmissionType","submissionType","setProblem","problem","allowedSubmissionTypes","orderProblemsByOrderBy","problems","sort","b","orderBy","getProblemResourceFile","resourceId","responseData","contest","contestIsCompete","console","log","defaultDateTimeFormat","formatDate","date","formatString","format","convertToSecondsRemaining","intervalToDuration","start","Date","end","days","hours","minutes","seconds","secondsToFullTime","daysInitial","hoursInitial","minutesInitial","secondsInitial","convertToTwoDigitValues","hoursValue","minutesValue","secondsValue","defaultRender","remainingTime","Countdown","metric","renderRemainingTime","handleOnCountdownEnd","handleOnCountdownChange","metricsToSecondsDelta","remainingInSeconds","setRemainingInSeconds","timer","setTimeout","clearTimeout","ContestCard","contestCard","contestCardHeader","contestCardCategoryLabel","category","contestCardCountdown","canBePracticed","practiceEndTime","timeToRender","canBeCompeted","endTime","renderCountdown","contestCardControls","Layout","setLayout","ComponentToWrap","contentWrapper","renderContestsList","contests","render","headerTitle","contestCardsContainer","contestsSeeAllButton","HomeHeader","headerContent","headerLeft","headerContentWrapper","headerPrimaryHeading","headerBulletsWrapper","headerBullet","headerLeftButton","headerRight","containerClassName","youtubePlayer","videoId","opts","height","width","playerVars","autoplay","onReady","event","pauseVideo","HomePage","wait","Promise","resolve","LogoutPage","history","useHistory","location","generateId","uuidv4","LabelInternal","forKey","componentClassName","formLabel","formControlContainer","htmlFor","FormControl","onChange","v","onInput","labelText","labelClassName","checked","formControlValue","setFormControlValue","formControl","handleOnChange","ev","handleOnInput","formControlTextArea","LoginPage","onChangeUpdateUsername","onChangeUpdatePassword","submitLoginOnClick","push","action","RegisterPage","profile","userName","UsersContext","UsersProvider","setProfile","getProfileInfoRequest","getProfileInfoData","getProfile","ProfileAboutInfo","profileAboutInfo","profileAboutInfoGroupControl","firstName","lastName","email","currentSubmissionCode","SubmissionsContext","useSubmissions","SubmissionsProvider","submissions","setSubmissions","setCurrentSubmissionCode","getSubmissionsForProfileRequest","getSubmissionsForProfileData","submitRequest","submitData","getUserSubmissions","submit","ProblemId","SubmissionTypeId","Content","Official","setCode","code","classnameToTestRunResultType","CorrectAnswer","WrongAnswer","TimeLimit","MemoryLimit","RunTimeError","ExecutionResult","runs","testRuns","testResultsList","run","resultType","correctAnswerIcon","wrongAnswerIcon","columns","field","headerName","minWidth","flex","sortable","valueGetter","params","row","submittedOn","renderCell","contestLink","points","maximumPoints","hide","ProfileSubmissions","style","rows","pageSize","rowsPerPageOptions","disableSelectionOnClick","ParticipationsContext","ParticipationsProvider","areUserParticipationsRetrieved","setAreUserParticipationsRetrieved","userParticipations","setUserParticipations","getParticipationsForProfileRequest","getParticipationsForProfileData","getUserParticipations","registrationTime","competeResult","contestCompeteMaximumPoints","practiceResult","contestPracticeMaximumPoints","ProfileContestParticipations","PrivatePage","useLocation","pathname","state","makePrivate","Tabs","tabChildren","tabLabels","themeOverride","setValue","theme","createTheme","overrides","MuiTabs","indicator","backgroundColor","ThemeProvider","Box","sx","TabContext","TabList","newValue","tl","index","Tab","label","tc","TabPanel","Diff","expectedStr","actualStr","highlightSyntax","str","display","dangerouslySetInnerHTML","__html","Prism","highlight","languages","oldValue","compareMethod","DiffMethod","CHARS","splitView","showDiffOnly","renderContent","currentProblemSubmissionResults","SubmissionsDetailsContext","useSubmissionsDetails","SubmissionsDetailsProvider","currentSubmissionId","setCurrentSubmissionId","currentSubmission","setCurrentSubmission","setCurrentProblemSubmissionResults","getCurrentSubmissionDetailsUrl","getSubmissionDetailsRequest","getSubmissionDetailsData","getProblemResultsRequest","getProblemResultsData","getSubmissionDetails","getSubmissionResults","problemId","SubmissionResults","getTestRunHeading","runIndex","getTestRunHeadingClassName","getIsCorrectAnswerResultType","correctTestRunHeading","wrongTestRunHeading","renderTimeAndMemoryUsed","maxUsedTime","maxUsedMemory","renderTrialTests","trialTests","submissionResultContainer","isTrialTest","expectedOutputFragment","userOutputFragment","renderCompeteTests","competeTests","renderTestRuns","tr","SubmissionDetailsHeading","getHeaderText","submissionId","useParams","Number","ContestTasksNavigation","renderTask","taskSideNavigationItemSelected","taskSideNavigationItem","tasksSideNavigation","tasksListSideNavigation","CodeEditor","language","options","selectOnLineNumbers","minimap","enabled","automaticLayout","hideCursorInOverviewRuler","lineHeight","scrollbar","vertical","ExecutionTypeSelector","isSelected","onSelect","selected","setSelected","getClassName","executionTypeSelectorActive","executionTypeSelectorInactive","select","resourceTypeToIconClassName","ProblemResource","resource","saveFile","filename","filenameDecoded","saveAs","onClickGetResourceFile","linkContent","resourceTypeIconClassName","resourceLinkContent","resourceWrapper","resourceLink","rel","resourceLinkButton","e","preventDefault","renderResource","ProblemResources","resources","resourcesList","createdOn","submissionResult","isProcessed","getResults","ContestMainNavigation","renderSubmissionTypesSelectors","contestMainWrapper","contestInnerLayout","editorAndProblemControlsWrapper","contestTabControls","contestSubmitControlsWrapper","executionTypeSelectors","submissionTypesList","Contest","contestHeading","contestWrapper","contestId","participationType","PageContent","main","exact","path","component","ProfilePage","SubmissionPage","ContestPage","PageFooter","footer","CacheService","storage","obj","setItem","getItem","parse","clear","ServicesContext","ServicesProvider","localStorageService","localStorage","InitProviders","providers","initial","reverse","reduce","current","App","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","checkValidServiceWorker","fetch","contentType","ready","unregister","reload","URL","process","origin","addEventListener","getElementById"],"mappings":"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","file":"static/js/main.4ddb34e0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControl_formControl__17vZc\",\"formControlTextArea\":\"FormControl_formControlTextArea__2WAhK\",\"formLabel\":\"FormControl_formLabel__2OfBI\",\"formControlContainer\":\"FormControl_formControlContainer__175Rl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileAboutInfo\":\"ProfileAboutInfo_profileAboutInfo__w9LQY\",\"profileAboutInfoGroupControl\":\"ProfileAboutInfo_profileAboutInfoGroupControl__sAi4g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"submissionResultContainer\":\"SubmissionResults_submissionResultContainer__arabQ\",\"wrongTestRunHeading\":\"SubmissionResults_wrongTestRunHeading__2LRx1\",\"correctTestRunHeading\":\"SubmissionResults_correctTestRunHeading__16ZIB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tasksSideNavigation\":\"ContestTasksNavigation_tasksSideNavigation__3GFWI\",\"tasksListSideNavigation\":\"ContestTasksNavigation_tasksListSideNavigation__QtyGm\",\"taskSideNavigationItem\":\"ContestTasksNavigation_taskSideNavigationItem__zKKjn\",\"taskSideNavigationItemSelected\":\"ContestTasksNavigation_taskSideNavigationItemSelected__3DoSd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loadingWrapper\":\"Loading_loadingWrapper__1QnBZ\",\"svg\":\"Loading_svg__1Vm3J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"base\":\"Heading_base__JSMft\",\"primary\":\"Heading_primary__zzZr6\",\"secondary\":\"Heading_secondary__Fr78_\",\"small\":\"Heading_small__2GwxZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"testResultsList\":\"ExecutionResult_testResultsList__3MT2O\",\"correctAnswerIcon\":\"ExecutionResult_correctAnswerIcon__3RNUW\",\"wrongAnswerIcon\":\"ExecutionResult_wrongAnswerIcon__Dpo2x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"resourceWrapper\":\"ProblemResource_resourceWrapper__2GcWw\",\"resourceLink\":\"ProblemResource_resourceLink__2ivba\",\"resourceLinkButton\":\"ProblemResource_resourceLinkButton__1kJc1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listNav\":\"PageNav_listNav__2yVqG\",\"btn\":\"PageNav_btn__1ETR-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contestCardsContainer\":\"HomeContests_contestCardsContainer__3jnst\",\"contestsSeeAllButton\":\"HomeContests_contestsSeeAllButton__3HjwN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tag\":\"ExecutionTypeSelector_tag__1Lpm3\",\"tagSuccess\":\"ExecutionTypeSelector_tagSuccess__GRE3B\",\"tagWarning\":\"ExecutionTypeSelector_tagWarning__j5duy\",\"tagDanger\":\"ExecutionTypeSelector_tagDanger__2J8PC\",\"executionTypeSelector\":\"ExecutionTypeSelector_executionTypeSelector__13ZMb\",\"executionTypeSelectorActive\":\"ExecutionTypeSelector_executionTypeSelectorActive__3jom6\",\"executionTypeSelectorInactive\":\"ExecutionTypeSelector_executionTypeSelectorInactive__1s6yX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contestWrapper\":\"Contest_contestWrapper__qq1F8\",\"contestHeading\":\"Contest_contestHeading__2vxyQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"small\":\"set-layout_small__mEZn3\",\"medium\":\"set-layout_medium__21BaL\",\"large\":\"set-layout_large__RzxDz\",\"contentSize\":\"set-layout_contentSize__KqQXw\",\"contentWrapper\":\"set-layout_contentWrapper__12Tjw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contestLink\":\"ProfileSubmissions_contestLink__8pW1M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"resourcesList\":\"ProblemResources_resourcesList__Fu80n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"PageContent_main__2bQAp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"PageFooter_footer__2eHLC\"};","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgLoading(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"L9\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 100 100\",\n    enableBackground: \"new 0 0 0 0\",\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M73,50c0-12.7-10.3-23-23-23S27,37.3,27,50 M30.9,50c0-10.5,8.5-19.1,19.1-19.1S69.1,39.5,69.1,50\"\n  }, /*#__PURE__*/React.createElement(\"animateTransform\", {\n    attributeName: \"transform\",\n    attributeType: \"XML\",\n    type: \"rotate\",\n    dur: \"1s\",\n    from: \"0 50 50\",\n    to: \"360 50 50\",\n    repeatCount: \"indefinite\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLoading);\nexport default __webpack_public_path__ + \"static/media/Loading.a5b6dda5.svg\";\nexport { ForwardRef as ReactComponent };","enum HttpStatus {\n    Pending,\n    Success,\n    Unauthorized,\n    Error,\n    NotStarted\n}\n\nexport {\n    // eslint-disable-next-line import/prefer-default-export\n    HttpStatus,\n};\n","import * as React from 'react';\nimport { useEffect } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport styles from './Loading.module.scss';\n\nimport { ReactComponent } from './Loading.svg';\n\ninterface ILoadingProps {\n    isLoading: boolean,\n}\n\nconst loadingRoot = document.createElement('div') as HTMLElement;\n\nconst Loading = ({ isLoading }:ILoadingProps) => {\n    useEffect(() => {\n        document.body.appendChild(loadingRoot);\n        return () => {\n            document.body.removeChild(loadingRoot);\n        };\n    }, []);\n\n    if (isLoading) {\n        return ReactDOM.createPortal(\n            <div className={styles.loadingWrapper}>\n                <div className={styles.loading}>\n                    <ReactComponent className={styles.svg} />\n                </div>\n            </div>,\n            loadingRoot,\n        );\n    }\n\n    return null;\n};\n\nexport default Loading;\n","import * as React from 'react';\nimport { createContext, useCallback, useContext, useState } from 'react';\nimport IHaveChildrenProps from '../components/common/IHaveChildrenProps';\nimport Loading from '../components/guidelines/loading/Loading';\n\ninterface ILoadingContext {\n    startLoading: () => void;\n    stopLoading: () => void;\n}\n\nconst defaultState = {};\n\nconst LoadingContext = createContext<ILoadingContext>(defaultState as ILoadingContext);\n\nconst LoadingProvider = ({ children }: IHaveChildrenProps) => {\n    const [ isLoading, setLoading ] = useState(false);\n\n    const startLoading = useCallback(\n        () => setLoading(true),\n        [],\n    );\n\n    const stopLoading = useCallback(\n        () => setLoading(false),\n        [],\n    );\n\n    const value = {\n        startLoading,\n        stopLoading,\n    };\n\n    const showLoading = () => {\n        if (isLoading) {\n            return (<Loading isLoading />);\n        }\n\n        return null;\n    };\n\n    return (\n        <LoadingContext.Provider value={value}>\n            {children}\n            {showLoading()}\n        </LoadingContext.Provider>\n    );\n};\n\nconst useLoading = () => useContext(LoadingContext);\n\nexport default LoadingProvider;\n\nexport {\n    useLoading,\n};\n","import { useCallback, useEffect, useMemo, useState } from 'react';\n\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport axios from 'axios';\nimport { HttpStatus } from '../common/common';\nimport { IDictionary } from '../common/types';\n\nconst useHttp = (url: string, headers: IDictionary<string> | null = null) => {\n    const [ response, setResponse ] = useState<any>(null);\n    const [ status, setStatus ] = useState<HttpStatus>(HttpStatus.NotStarted);\n    const [ error, setError ] = useState<Error | null>(null);\n    const [ actualHeaders, setActualHeaders ] = useState<IDictionary<string>>({});\n\n    const request = useCallback(async (func: () => Promise<any>) => {\n        try {\n            setStatus(HttpStatus.Pending);\n            setResponse(null);\n            setError(null);\n            const resp = await func();\n            setResponse(await resp);\n            setError(null);\n            setStatus(HttpStatus.Success);\n        } catch (err: any) {\n            switch (err.response.status) {\n            case 401:\n                setStatus(HttpStatus.Unauthorized);\n                break;\n            default:\n                setStatus(HttpStatus.Error);\n                break;\n            }\n            setError(err);\n            setResponse(err.response);\n        }\n    }, [ ]);\n\n    const replaceParameters = (urlToReplace: string, parameters: IDictionary<string>) => urlToReplace.replace(/%\\w+%/g, (placeholder) => {\n        const placeholderKey = placeholder\n            .replace(/^%/, '')\n            .replace(/%$/, '');\n        return parameters[placeholderKey] || placeholder;\n    });\n\n    const data = useMemo(() => {\n        if (response == null || response.data == null) {\n            return null;\n        }\n\n        return response.data;\n    }, [ response ]);\n\n    const get = useCallback(\n        (parameters?: IDictionary<string>, responseType = 'json') => request(() => axios.get(\n            replaceParameters(url, parameters == null\n                ? {}\n                : parameters),\n            { responseType, headers: actualHeaders },\n        )),\n        [ actualHeaders, request, url ],\n    );\n\n    const post = useCallback(\n        (requestData: any, parameters?: IDictionary<string>) => request(() => axios.post(\n            replaceParameters(url, parameters == null\n                ? {}\n                : parameters),\n            requestData,\n            { headers: actualHeaders },\n        )),\n        [ actualHeaders, request, url ],\n    );\n\n    useEffect(\n        () => {\n            setActualHeaders({\n                'content-type': 'application/json',\n                ...headers ?? {},\n            });\n        },\n        [ headers ],\n    );\n\n    return {\n        get,\n        post,\n        response,\n        data,\n        status,\n        error,\n    };\n};\n\nexport {\n    // eslint-disable-next-line import/prefer-default-export\n    useHttp,\n};\n","import React, {\n    createContext, useCallback,\n    useContext, useEffect, useState,\n} from 'react';\n\nimport { store } from 'react-notifications-component';\nimport { INotificationType } from '../common/types';\nimport 'react-notifications-component/dist/theme.css';\n\nimport IHaveChildrenProps from '../components/common/IHaveChildrenProps';\n\ninterface INotificationsContext {\n    notification: INotificationType,\n    showNotification: boolean,\n    showError(notificationObj: INotificationType): void\n    showWarning(notificationObj: INotificationType): void\n}\n\nconst defaultState = {\n    notification: {\n        title: '',\n        message: 'def',\n        type: 'default',\n        leaveTimeout: 4000,\n    } as INotificationType,\n    showNotification: false,\n};\n\ninterface INotificationsProviderProps extends IHaveChildrenProps {}\n\nconst NotificationsContext = createContext<INotificationsContext>(defaultState as INotificationsContext);\n\nconst NotificationsProvider = ({ children }: INotificationsProviderProps) => {\n    const [ notification, setNotification ] = useState<INotificationType>(defaultState.notification);\n    const [ showNotification, setShowNotification ] = useState<boolean>(defaultState.showNotification);\n\n    const showError = useCallback(({ message: m, leaveTimeout = null } : INotificationType) => {\n        const n = {\n            title: 'Error',\n            message: m,\n            type: 'danger',\n            leaveTimeout:\n                leaveTimeout == null\n                    ? defaultState.notification.leaveTimeout\n                    : leaveTimeout,\n        } as INotificationType;\n        setNotification(n);\n        setShowNotification(true);\n    }, [ setNotification ]);\n\n    const showWarning = useCallback(({ message: m, leaveTimeout = null } : INotificationType) => {\n        const n = {\n            title: 'Warning',\n            message: m,\n            type: 'warning',\n            leaveTimeout:\n                leaveTimeout == null\n                    ? defaultState.notification.leaveTimeout\n                    : leaveTimeout,\n        } as INotificationType;\n        setNotification(n);\n        setShowNotification(true);\n    }, [ setNotification ]);\n\n    useEffect(() => {\n        if (showNotification) {\n            store.addNotification({\n                title: notification.title,\n                message: notification.message,\n                type: notification.type,\n                container: 'bottom-right',\n                animationIn: [ 'animate__animated', 'animate__fadeIn' ],\n                animationOut: [ 'animate__animated', 'animate__fadeOut' ],\n                dismiss: {\n                    duration: 5000,\n                    onScreen: true,\n                },\n            });\n            setShowNotification(false);\n        }\n    }, [ notification, showNotification ]);\n\n    const value = { notification, showNotification, showError, showWarning };\n\n    return (\n        <NotificationsContext.Provider value={value}>\n            {children}\n        </NotificationsContext.Provider>\n    );\n};\n\nconst useNotifications = () => useContext(NotificationsContext);\n\nexport {\n    useNotifications,\n};\n\nexport default NotificationsProvider;\n","const baseUrl = window.URLS.UI_URL;\nconst administrationBaseUrl = window.URLS.ADMINISTRATION_URL;\n\nconst loginSubmitUrl = `${baseUrl}/Account/Login`;\nconst logoutUrl = `${baseUrl}/Account/Logout`;\n\nconst getProfileInfoUrl = `${baseUrl}/Users/GetProfileInfo`;\n\nconst getIndexContestsUrl = `${baseUrl}/Contests/GetForHomeIndex`;\nconst startContestParticipationUrl = `${baseUrl}/Compete/Index/%id%?official=%official%`;\n\nconst getSubmissionDetailsUrl = `${baseUrl}/Submissions/Details`;\nconst getSubmissionsForProfileUrl = `${baseUrl}/Submissions/GetForProfile`;\nconst submitUrl = `${baseUrl}/Compete/Submit?official=%official%`;\n\nconst getParticipationsForProfileUrl = `${baseUrl}/Participations/GetForProfile`;\n\nconst getProblemResourceUrl = `${baseUrl}/ProblemResources/GetResource/%id%`;\n\nconst getSubmissionResultsByProblem = `${baseUrl}/Submissions/GetSubmissionResultsByProblem/%id%?isOfficial=%isOfficial%`;\n\nconst administrationContestsGridUrl = `${administrationBaseUrl}/Contests`;\n\nexport {\n    loginSubmitUrl,\n    logoutUrl,\n    getProfileInfoUrl,\n    getIndexContestsUrl,\n    startContestParticipationUrl,\n    getSubmissionDetailsUrl,\n    getSubmissionsForProfileUrl,\n    getParticipationsForProfileUrl,\n    getProblemResourceUrl,\n    getSubmissionResultsByProblem,\n    submitUrl,\n    administrationContestsGridUrl,\n};\n","type name = string | '';\n\nconst getCookie = (name: name) => {\n    let cookieValue = '';\n\n    if (document.cookie && document.cookie !== '') {\n        const cookies = document.cookie.split(';');\n        for (let i = 0; i < cookies.length; i += 1) {\n            const cookie = cookies[i].trim();\n            if (cookie.substring(0, name.length + 1) === `${name}=`) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                break;\n            }\n        }\n    }\n\n    return cookieValue;\n};\n\nexport default { getCookie };\n\nexport { getCookie };\n","import React, { createContext, useCallback, useContext, useEffect, useState } from 'react';\nimport IHaveChildrenProps from '../components/common/IHaveChildrenProps';\nimport { useLoading } from './use-loading';\nimport { useHttp } from './use-http';\nimport { useNotifications } from './use-notifications';\nimport { INotificationType } from '../common/types';\nimport { HttpStatus } from '../common/common';\nimport { logoutUrl, loginSubmitUrl } from '../utils/urls';\nimport { getCookie } from '../utils/cookies';\n\ntype UserType = {\n    username: string,\n    isLoggedIn: boolean,\n    permissions: IUserPermissionsType,\n  };\n\ninterface IUserPermissionsType {\n    canAccessAdministration: boolean,\n}\n\ninterface IAuthContext {\nuser: UserType,\nsignIn: () => void;\nsignOut: () => Promise<void>;\ngetUser: () => UserType;\nsetUsername: (value: string) => void;\nsetPassword: (value: string) => void;\n}\n\nconst defaultState = {\n    user: {\n        username: '',\n        isLoggedIn: false,\n        permissions: { canAccessAdministration: false } as IUserPermissionsType,\n    },\n};\n\nconst AuthContext = createContext<IAuthContext>(defaultState as IAuthContext);\n\ninterface IAuthProviderProps extends IHaveChildrenProps {}\n\nconst AuthProvider = ({ children }: IAuthProviderProps) => {\n    const { startLoading, stopLoading } = useLoading();\n    const [ user, setUser ] = useState<UserType>(defaultState.user);\n    const [ username, setUsername ] = useState<string>(defaultState.user.username);\n    const [ password, setPassword ] = useState<string>();\n    const { showError } = useNotifications();\n    const { post: loginSubmitRequest, response: loginSubmitRequestResponse, status: loginSubmitRequestStatus } = useHttp(loginSubmitUrl);\n    const { post: logoutRequest, response: logoutResponse } = useHttp(logoutUrl);\n\n    const signIn = useCallback(\n        async () => {\n            startLoading();\n            await loginSubmitRequest({\n                Username: username,\n                Password: password,\n                RememberMe: true,\n            });\n            stopLoading();\n        },\n        [ loginSubmitRequest, password, startLoading, stopLoading, username ],\n    );\n\n    const signOut = useCallback(async () => {\n        startLoading();\n        await logoutRequest({});\n        setUser(defaultState.user);\n        stopLoading();\n    }, [ logoutRequest, startLoading, stopLoading ]);\n\n    const getUser = useCallback(() => user, [ user ]);\n\n    const tryGetUserDetailsFromCookie = () => {\n        const loggedInUsername = getCookie('logged_in_username');\n        const canAccessAdministrationCookie = getCookie('can_access_administration');\n\n        if (loggedInUsername) {\n            const canAccessAdministration = canAccessAdministrationCookie.length > 0;\n            const permissions = { canAccessAdministration } as IUserPermissionsType;\n\n            return {\n                username: loggedInUsername,\n                isLoggedIn: true,\n                permissions: permissions!,\n            };\n        }\n\n        return defaultState.user;\n    };\n\n    const setUserDetails = useCallback((userDetails: UserType | null) => {\n        if (userDetails == null) {\n            return;\n        }\n\n        setUser(userDetails);\n    }, []);\n\n    useEffect(() => {\n        const loadedUser = tryGetUserDetailsFromCookie();\n        setUserDetails(loadedUser);\n    }, [ setUserDetails ]);\n\n    useEffect(() => {\n        if (loginSubmitRequestResponse) {\n            if (loginSubmitRequestStatus === HttpStatus.Unauthorized) {\n                showError({ message: 'Invalid credentials.' } as INotificationType);\n            }\n\n            const loadedUser = tryGetUserDetailsFromCookie();\n            setUserDetails(loadedUser);\n        }\n    }, [ loginSubmitRequestResponse, loginSubmitRequestStatus, showError, setUserDetails ]);\n\n    useEffect(() => {\n        if (logoutResponse) {\n            setUser(defaultState.user);\n        }\n    }, [ logoutResponse ]);\n\n    const value = {\n        user,\n        signIn,\n        signOut,\n        getUser,\n        setUsername,\n        setPassword,\n    };\n\n    return (\n        <AuthContext.Provider value={value}>\n            {children}\n        </AuthContext.Provider>\n    );\n};\n\nconst useAuth = () => useContext(AuthContext);\n\nexport {\n    useAuth,\n};\n\nexport default AuthProvider;\n","export default __webpack_public_path__ + \"static/media/softuni-logo-horizontal.c94ee051.svg\";","type classNamesType = string | string[] | null | undefined;\n\nconst concatClassNames = (...classNames:classNamesType[]) => classNames\n    .filter((x) => x)\n    .flat()\n    .join(' ');\n\nexport default concatClassNames;\n","// eslint-disable import/no-default-export\n\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport concatClassNames from '../../../utils/class-names';\nimport { IHaveOptionalChildrenProps } from '../../common/IHaveChildrenProps';\n\nimport styles from './Button.module.scss';\n\ninterface IButtonProps extends IHaveOptionalChildrenProps {\n    text?: string,\n    onClick: React.MouseEventHandler<HTMLButtonElement>,\n    className?: string | string[],\n    type?: 'primary' | 'secondary' | 'plain' | 'disabled',\n    size?: 'small' | 'medium' | 'large',\n}\n\ninterface ILinkButtonProps {\n    text: string,\n    className?: string | string[],\n    type?: 'primary' | 'secondary' | 'plain' | 'disabled',\n    size?: 'small' | 'medium' | 'large',\n    to: string,\n}\n\nconst classNameToType = {\n    primary: styles.btn,\n    secondary: styles.btnSecondary,\n    plain: styles.btnPlain,\n    disabled: styles.btnDisabled,\n};\n\nconst Button = ({\n    onClick,\n    text = '',\n    children = null,\n    className = '',\n    type = 'primary',\n    size = 'medium',\n}: IButtonProps) => {\n    if (!text && !children) {\n        throw new Error('Buttons must have only `text` or `children`');\n    }\n    const sizeToClassName = {\n        small: styles.btnSmall,\n        medium: styles.btnMedium,\n        large: styles.btnLarge,\n    };\n\n    const typeClassName = classNameToType[type];\n\n    const sizeClassName = sizeToClassName[size];\n\n    const buttonClassName = concatClassNames(\n        typeClassName,\n        sizeClassName,\n        className,\n    );\n\n    const content = children ?? text;\n\n    return (\n        <button\n          type=\"button\"\n          onClick={onClick}\n          className={buttonClassName}\n        >\n            {content}\n        </button>\n    );\n};\n\nconst LinkButton = ({ text, to, className = '', type = 'primary', size = 'medium' }: ILinkButtonProps) => {\n    const sizeToClassName = {\n        small: styles.small,\n        medium: styles.medium,\n        large: styles.large,\n    };\n\n    const typeClassName = classNameToType[type];\n\n    const sizeClassName = sizeToClassName[size];\n\n    const buttonClassName = concatClassNames(\n        className,\n        typeClassName,\n        sizeClassName,\n    );\n\n    return (\n        <Link\n          type=\"button\"\n          to={to}\n          className={buttonClassName}\n        >\n            {text}\n        </Link>\n    );\n};\n\nexport {\n    Button,\n    LinkButton,\n};\n","import * as React from 'react';\nimport concatClassNames from '../../../utils/class-names';\n\nimport styles from './List.module.scss';\n\ninterface IListProps<TValue> {\n    values: TValue[];\n    itemFunc: (value: TValue) => React.ReactElement;\n    keyFunc?: (value: TValue) => string,\n    className?: string | string[];\n    itemClassName?: string | string[];\n    type?: 'normal' | 'numbered' | 'alpha' | 'bulleted';\n    orientation?: 'vertical' | 'horizontal';\n}\n\nconst defaultKeyFunc = <TValue extends unknown>(value: TValue) => {\n    const objWithId = value as { id: string };\n\n    if (objWithId.id) {\n        return objWithId.id.toString();\n    }\n\n    return JSON.stringify(value);\n};\n\nconst List = <TValue extends unknown>({\n    values,\n    itemFunc,\n    keyFunc = defaultKeyFunc,\n    className = '',\n    itemClassName = '',\n    type = 'normal',\n    orientation = 'vertical',\n}: IListProps<TValue>) => {\n    const listTypeClassName =\n        type === 'normal'\n            ? styles.listNormal\n            : type === 'numbered'\n                ? styles.listNumbered\n                : type === 'alpha'\n                    ? styles.listNumberedAlpha\n                    : styles.listBulleted;\n\n    const listOrientationClassName =\n        orientation === 'vertical'\n            ? ''\n            : styles.listHorizontal;\n\n    const listClassName = concatClassNames(listTypeClassName, listOrientationClassName, className);\n    const itemClassNameCombined = concatClassNames(itemClassName);\n\n    const items = values.map((value) => (\n        <li key={keyFunc(value)} className={itemClassNameCombined}>\n            {itemFunc(value)}\n        </li>\n    ));\n\n    if (type === 'numbered') {\n        return (\n            <ol className={listClassName}>\n                {items}\n            </ol>\n        );\n    }\n\n    return (\n        <ul className={listClassName}>\n            {items}\n        </ul>\n    );\n};\n\nexport default List;\n","import { useEffect, useState } from 'react';\nimport * as React from 'react';\nimport { useAuth } from '../../hooks/use-auth';\nimport { LinkButton } from '../../components/guidelines/buttons/Button';\nimport List from '../../components/guidelines/lists/List';\n\nimport styles from './PageNav.module.scss';\n\ninterface IRouteType {\n    name: string;\n    link: string;\n    isPrimary: boolean;\n}\n\nconst userRoutes = [\n    { name: 'My Profile', link: '/profile', isPrimary: true },\n    { name: 'Log out', link: '/logout', isPrimary: false },\n];\n\nconst anonymousRoutes = [\n    { name: 'Login', link: '/login', isPrimary: false },\n    { name: 'Register', link: '/register', isPrimary: true },\n];\n\nconst PageNav = () => {\n    const { user } = useAuth();\n    const [ routes, setRoutes ] = useState(anonymousRoutes);\n\n    useEffect(() => {\n        setRoutes(user.isLoggedIn\n            ? userRoutes\n            : anonymousRoutes);\n    }, [ user.isLoggedIn ]);\n\n    const itemFunc = ({ name, link, isPrimary }: IRouteType) => {\n        const type = isPrimary\n            ? 'primary'\n            : 'secondary';\n\n        const btnClassName = styles.btn;\n\n        return (\n            <LinkButton to={link} text={name} type={type} className={btnClassName} />\n        );\n    };\n\n    return (\n        <nav>\n            <List\n              values={routes}\n              itemFunc={itemFunc}\n              orientation=\"horizontal\"\n              className={styles.listNav}\n            />\n        </nav>\n    );\n};\n\nexport default PageNav;\n","import * as React from 'react';\n\nimport IHaveChildrenProps from '../../common/IHaveChildrenProps';\nimport concatClassNames from '../../../utils/class-names';\nimport styles from './Heading.module.scss';\n\ninterface IHeadingProps extends IHaveChildrenProps {\n    type?: 'primary' | 'secondary' | 'small';\n    className?: string | string[];\n}\n\nconst Heading = ({ children, type = 'primary', className = '' }: IHeadingProps) => {\n    const headingTypeClassName = type === 'primary'\n        ? styles.primary\n        : type === 'secondary'\n            ? styles.secondary\n            : styles.small;\n\n    const headingClassName = concatClassNames(headingTypeClassName, className);\n\n    if (type === 'primary') {\n        return (<h1 className={headingClassName}>{children}</h1>);\n    }\n    if (type === 'secondary') {\n        return (<h2 className={headingClassName}>{children}</h2>);\n    }\n    if (type === 'small') {\n        return (<h3 className={headingClassName}>{children}</h3>);\n    }\n\n    return null;\n};\n\nexport default Heading;\n","import React, { useCallback } from 'react';\nimport ReactNotification from 'react-notifications-component';\nimport { Link } from 'react-router-dom';\nimport logo from './softuni-logo-horizontal.svg';\nimport PageNav from '../nav/PageNav';\nimport Heading from '../../components/guidelines/headings/Heading';\nimport styles from './PageHeader.module.scss';\nimport { useAuth } from '../../hooks/use-auth';\nimport { administrationContestsGridUrl } from '../../utils/urls';\n\nconst PageHeader = () => {\n    const { user } = useAuth();\n\n    const renderLinks = useCallback(() => {\n        const administrationLink = user.permissions.canAccessAdministration\n            ? <a href={administrationContestsGridUrl} className={styles.headerLink}>Administration</a>\n            : null;\n\n        return (\n            <>\n                <Link to=\"/contests/all\" className={styles.headerLink}>Contests</Link>\n                <Link to=\"/submissions\" className={styles.headerLink}>Submissions</Link>\n                { administrationLink }\n            </>\n        );\n    }, [ user ]);\n\n    return (\n        <header className={styles.header}>\n            <ReactNotification />\n            <div className={styles.headerSize}>\n                <div className={styles.headerLinks}>\n                    <Heading type=\"secondary\" className={styles.heading}>\n                        <a href=\"/\">\n                            <img src={logo} alt=\"softuni logo\" />\n                        </a>\n                    </Heading>\n                    { renderLinks() }\n                </div>\n                <PageNav />\n            </div>\n        </header>\n    );\n};\n\nexport default PageHeader;\n","import * as React from 'react';\nimport { createContext, useCallback, useContext, useEffect, useState } from 'react';\nimport { AxiosResponse } from 'axios';\nimport IHaveChildrenProps from '../../components/common/IHaveChildrenProps';\nimport { getIndexContestsUrl, getProblemResourceUrl, startContestParticipationUrl } from '../../utils/urls';\nimport { useHttp } from '../use-http';\nimport { useLoading } from '../use-loading';\nimport {\n    IContestType,\n    IProblemType,\n    IIndexContestsType,\n    IGetContestsForIndexResponseType,\n    IStartParticipationResponseType,\n    ISubmissionTypeType,\n} from './types';\n\ninterface IContestsContext {\n    currentContest: IContestType | null,\n    isContestParticipationOfficial: boolean,\n    currentProblem: IProblemType | null,\n    selectedSubmissionTypeId: number | null,\n    setProblem: (problem: IProblemType) => void,\n    setSubmissionType: (id: number) => void,\n    activeContests: IIndexContestsType[]\n    pastContests: IIndexContestsType[]\n    getForHome: () => Promise<void>;\n    startContestParticipation: (id: number, isOfficial: boolean) => Promise<void>;\n    getProblemResourceFile: (resourceId: number) => Promise<void>;\n    getProblemResourceResponse: AxiosResponse;\n}\n\nconst defaultState = {\n    currentContest: null,\n    currentProblem: null,\n    isContestParticipationOfficial: false,\n    selectedSubmissionTypeId: 0,\n};\n\nconst ContestsContext = createContext<IContestsContext>(defaultState as IContestsContext);\n\ninterface IContestsProviderProps extends IHaveChildrenProps {\n}\n\nconst ContestsProvider = ({ children }: IContestsProviderProps) => {\n    const [ activeContests, setActiveContests ] = useState<IIndexContestsType[]>([]);\n    const [ pastContests, setPastContests ] = useState<IIndexContestsType[]>([]);\n    const [ isContestParticipationOfficial, setIsContestParticipationOfficial ] =\n        useState<boolean>(defaultState.isContestParticipationOfficial);\n    const [ currentContest, setCurrentContest ] = useState<IContestType | null>(defaultState.currentContest);\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const [ allProblems, setAllProblems ] = useState<IProblemType[]>();\n    const [ currentProblem, setCurrentProblem ] = useState<IProblemType | null>(defaultState.currentProblem);\n    const [ selectedSubmissionTypeId, setSelectedSubmissionTypeId ] = useState<number>(defaultState.selectedSubmissionTypeId);\n    const { startLoading, stopLoading } = useLoading();\n    const {\n        get: getContestsForIndexRequest,\n        data: getContestsForIndexData,\n    } = useHttp(getIndexContestsUrl);\n\n    const {\n        get: startContestParticipationRequest,\n        data: startContestParticipationData,\n    } = useHttp(startContestParticipationUrl);\n\n    const {\n        get: getProblemResourceRequest,\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        response: getProblemResourceResponse,\n    } = useHttp(getProblemResourceUrl);\n\n    const getForHome = useCallback(async () => {\n        startLoading();\n        await getContestsForIndexRequest({});\n        stopLoading();\n    }, [ getContestsForIndexRequest, startLoading, stopLoading ]);\n\n    const startContestParticipation = useCallback(async (id: number, isOfficial: boolean) => {\n        startLoading();\n        const idStr = id.toString();\n        await startContestParticipationRequest({ id: idStr, official: isOfficial.toString() });\n        stopLoading();\n    }, [ startContestParticipationRequest, startLoading, stopLoading ]);\n\n    const hasDefaultSubmissionType = useCallback(\n        (submissionTypes: ISubmissionTypeType[]) => submissionTypes.some((st) => st.isSelectedByDefault),\n        [],\n    );\n\n    const setSubmissionType = useCallback(\n        (id: number) => setSelectedSubmissionTypeId(id),\n        [],\n    );\n\n    const setDefaultSubmissionType = useCallback((submissionTypes: ISubmissionTypeType[]) => {\n        const submissionType = hasDefaultSubmissionType(submissionTypes)\n            ? submissionTypes.filter((st) => st.isSelectedByDefault)[0]\n            : submissionTypes[0];\n        setSubmissionType(submissionType.id);\n    }, [ hasDefaultSubmissionType, setSubmissionType ]);\n\n    const setProblem = useCallback(\n        (problem: IProblemType) => {\n            setCurrentProblem(problem);\n            setDefaultSubmissionType(problem.allowedSubmissionTypes);\n        },\n        [ setDefaultSubmissionType ],\n    );\n\n    const orderProblemsByOrderBy = useCallback(\n        (problems: IProblemType[]) => problems.sort((a, b) => a.orderBy - b.orderBy),\n        [],\n    );\n\n    const getProblemResourceFile = useCallback(async (resourceId: number) => {\n        startLoading();\n        await getProblemResourceRequest({ id: resourceId.toString() }, 'blob');\n        stopLoading();\n    }, [ getProblemResourceRequest, startLoading, stopLoading ]);\n\n    useEffect(() => {\n        if (getContestsForIndexData != null) {\n            const responseData = getContestsForIndexData as IGetContestsForIndexResponseType;\n            setActiveContests(responseData.activeContests);\n            setPastContests(responseData.pastContests);\n        }\n    }, [ getContestsForIndexData ]);\n\n    useEffect(() => {\n        if (startContestParticipationData != null) {\n            const responseData = startContestParticipationData as IStartParticipationResponseType;\n            setCurrentContest(responseData.contest);\n            setIsContestParticipationOfficial(responseData.contestIsCompete);\n            const problems = orderProblemsByOrderBy(responseData.contest.problems);\n            setAllProblems(problems);\n            setCurrentProblem(problems[0]);\n            setDefaultSubmissionType(problems[0].allowedSubmissionTypes);\n        }\n    }, [ orderProblemsByOrderBy, setDefaultSubmissionType, startContestParticipationData ]);\n\n    useEffect(() => {\n        console.log(currentProblem);\n    }, [ currentProblem ]);\n\n    const value = {\n        currentContest,\n        isContestParticipationOfficial,\n        currentProblem,\n        selectedSubmissionTypeId,\n        setProblem,\n        setSubmissionType,\n        activeContests,\n        pastContests,\n        getForHome,\n        startContestParticipation,\n        getProblemResourceFile,\n        getProblemResourceResponse,\n    };\n\n    return (\n        <ContestsContext.Provider value={value}>\n            {children}\n        </ContestsContext.Provider>\n    );\n};\n\nconst useContests = () => useContext(ContestsContext);\n\nexport {\n    useContests,\n};\n\nexport type { IIndexContestsType };\n\nexport default ContestsProvider;\n","import { format, intervalToDuration } from 'date-fns';\n\nconst defaultDateTimeFormat = 'HH:MM, dd/MMM/yyyy';\n\nconst calculateTimeUntil = (date: Date) => intervalToDuration({\n    start: new Date(),\n    end: date,\n});\n\nconst formatDate = (date: Date, formatString = defaultDateTimeFormat) => format(date, formatString);\n\nconst convertToSecondsRemaining = (date: Date) => {\n    const { days, hours, minutes, seconds } = intervalToDuration({\n        start: new Date(),\n        end: date,\n    });\n\n    const daysRemaining = days ?? 0;\n\n    const hoursRemaining = daysRemaining * 24 + (hours ?? 0);\n    const minutesRemaining = hoursRemaining * 60 + (minutes ?? 0);\n    return minutesRemaining * 60 + (seconds ?? 0);\n};\n\nconst secondsToFullTime = (duration: number) => {\n    const { days: daysInitial, hours: hoursInitial, minutes: minutesInitial, seconds: secondsInitial } =\n        intervalToDuration({ start: 0, end: duration * 1000 });\n\n    const days = daysInitial ?? 0;\n\n    const hours = hoursInitial ?? 0;\n\n    const minutes = minutesInitial ?? 0;\n\n    const seconds = secondsInitial ?? 0;\n\n    return { days, hours, minutes, seconds };\n};\n\ninterface IConvertToTwoDigitValuesParamType {\n    hours: number;\n    minutes: number;\n    seconds: number\n}\n\nconst convertToTwoDigitValues = ({\n    hours: hoursValue,\n    minutes: minutesValue,\n    seconds: secondsValue,\n}: IConvertToTwoDigitValuesParamType) => {\n    const hours = hoursValue > 10\n        ? hoursValue.toString()\n        : `0${hoursValue}`;\n\n    const minutes = minutesValue > 10\n        ? minutesValue.toString()\n        : `0${minutesValue}`;\n\n    const seconds = secondsValue > 10\n        ? secondsValue.toString()\n        : `0${secondsValue}`;\n\n    return {\n        hours,\n        minutes,\n        seconds,\n    };\n};\n\nexport default {\n    formatDate,\n    secondsToFullTime,\n    calculateTimeUntil,\n    convertToSecondsRemaining,\n    convertToTwoDigitValues,\n};\n\nexport {\n    formatDate,\n    secondsToFullTime,\n    calculateTimeUntil,\n    convertToSecondsRemaining,\n    convertToTwoDigitValues,\n};\n","import * as React from 'react';\nimport { useEffect, useMemo, useState } from 'react';\nimport { convertToTwoDigitValues, secondsToFullTime } from '../../../utils/dates';\n\ninterface ICountdownRemainingType {\n    days: number;\n    hours: number;\n    minutes: number;\n    seconds: number;\n}\n\ninterface ICountdownProps {\n    duration: number;\n    metric: 'seconds' | 'minutes' | 'hours' | 'days';\n    renderRemainingTime?: (countdownRemaining: ICountdownRemainingType) => React.ReactElement;\n    handleOnCountdownEnd?: () => void;\n    handleOnCountdownChange?: (seconds: number) => void;\n}\n\nconst defaultRender = (remainingTime: ICountdownRemainingType) => {\n    const { hours, minutes, seconds } = convertToTwoDigitValues(remainingTime);\n    return (\n        <>\n            <p>\n                Remaining time:\n                {' '}\n                <span>\n                    {hours}\n                    :\n                    {minutes}\n                    :\n                    {seconds}\n                </span>\n            </p>\n        </>\n    );\n};\n\n// eslint-disable-next-line max-len\nconst Countdown = ({ duration, metric, renderRemainingTime = defaultRender, handleOnCountdownEnd = () => {}, handleOnCountdownChange = () => {} }: ICountdownProps) => {\n    const metricsToSecondsDelta = useMemo(() => ({\n        seconds: 1,\n        minutes: 60,\n        hours: 60 * 60,\n        days: 24 * 60 * 60,\n    }), []);\n\n    const [ remainingInSeconds, setRemainingInSeconds ] = useState(0);\n\n    useEffect(() => {\n        setRemainingInSeconds(duration * metricsToSecondsDelta[metric]);\n    }, [ duration, metric, metricsToSecondsDelta ]);\n\n    useEffect(() => {\n        if (remainingInSeconds < 0) {\n            handleOnCountdownEnd();\n            return () => {};\n        }\n\n        const timer = setTimeout(() => setRemainingInSeconds(remainingInSeconds - 1), 1000);\n\n        return () => clearTimeout(timer);\n    }, [ handleOnCountdownEnd, remainingInSeconds ]);\n\n    useEffect(() => {\n        handleOnCountdownChange(remainingInSeconds);\n    }, [ handleOnCountdownChange, remainingInSeconds ]);\n\n    return (\n        <>\n            {renderRemainingTime(secondsToFullTime(remainingInSeconds))}\n        </>\n    );\n};\n\nexport default Countdown;\n\nexport type {\n    ICountdownRemainingType,\n};\n","import * as React from 'react';\nimport { IIndexContestsType } from '../../../hooks/contests/use-contests';\nimport Countdown from '../../guidelines/countdown/Countdown';\nimport { convertToSecondsRemaining } from '../../../utils/dates';\nimport styles from './ContestCard.module.scss';\nimport { LinkButton } from '../../guidelines/buttons/Button';\n\ninterface IContestCardProps {\n    contest: IIndexContestsType\n}\n\nconst ContestCard = ({ contest }: IContestCardProps) => {\n    const renderCountdown = () => {\n        if (contest.canBePracticed && contest.practiceEndTime == null) {\n            return <p>No practice end time.</p>;\n        }\n\n        const timeToRender = contest.canBeCompeted && !contest.canBePracticed\n        // render compete time\n            ? contest.endTime\n            : contest.practiceEndTime;\n\n        // console.log(contest.id);\n        // console.log(timeToRender);\n        // console.log(convertToSecondsRemaining(new Date(timeToRender)));\n\n        return (\n            <Countdown\n              key={contest.id}\n              duration={convertToSecondsRemaining(new Date(timeToRender))}\n              metric=\"seconds\"\n            />\n        );\n    };\n\n    return (\n        <div className={styles.contestCard}>\n            <div className={styles.contestCardHeader}>{contest.name}</div>\n            <div className={styles.contestCardCategoryLabel}>{contest.category}</div>\n            <div className={styles.contestCardCountdown}>\n                {renderCountdown()}\n            </div>\n            <div className={styles.contestCardControls}>\n                <LinkButton\n                  to={`/contests/${contest.id}/compete`}\n                  text=\"Compete\"\n                  type={\n                        contest.canBeCompeted\n                            ? 'primary'\n                            : 'disabled'\n                    }\n                  size=\"small\"\n                />\n                <LinkButton\n                  to={`/contests/${contest.id}/practice`}\n                  text=\"Practice\"\n                  type={\n                        contest.canBePracticed\n                            ? 'secondary'\n                            : 'disabled'\n                    }\n                  size=\"small\"\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default ContestCard;\n","import * as React from 'react';\nimport { FC } from 'react';\nimport IHaveChildrenProps from '../../components/common/IHaveChildrenProps';\n\nimport styles from './set-layout.module.scss';\n\ninterface ILayoutProps extends IHaveChildrenProps {\n}\n\nconst Layout = ({ children }: ILayoutProps) => (\n    <>\n        {children}\n    </>\n);\n\nconst setLayout = (ComponentToWrap: FC) => (props: any) => (\n    <Layout>\n        <div className={styles.contentWrapper}>\n            {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n            <ComponentToWrap {...props} />\n        </div>\n    </Layout>\n);\n\nexport default Layout;\n\nexport {\n    setLayout,\n};\n","import * as React from 'react';\nimport { useEffect } from 'react';\nimport { IIndexContestsType, useContests } from '../../hooks/contests/use-contests';\nimport { LinkButton } from '../guidelines/buttons/Button';\nimport ContestCard from './contest-card/ContestCard';\nimport Heading from '../guidelines/headings/Heading';\nimport { setLayout } from '../../pages/shared/set-layout';\nimport styles from './HomeContests.module.scss';\n\nconst HomeContests = () => {\n    const { activeContests, pastContests, getForHome } = useContests();\n\n    useEffect(() => {\n        getForHome();\n    }, [ getForHome ]);\n\n    const renderContestsList = (contests: IIndexContestsType[]) => contests.map((contest: IIndexContestsType) => (\n        <ContestCard key={contest.id} contest={contest} />\n    ));\n\n    const render = (headerTitle: string, contests: IIndexContestsType[]) => (\n        <>\n            <Heading>\n                {headerTitle}\n                {' '}\n                Contests\n            </Heading>\n            <div className={styles.contestCardsContainer}>\n                {renderContestsList(contests)}\n            </div>\n            <LinkButton\n              to=\"/contests\"\n              text=\"See All\"\n              type=\"secondary\"\n              size=\"small\"\n              className={styles.contestsSeeAllButton}\n            />\n        </>\n    );\n\n    return (\n        <>\n            { render('Active', activeContests) }\n            { render('Past', pastContests) }\n        </>\n    );\n};\n\nexport default setLayout(HomeContests);\n","import * as React from 'react';\n\nimport YouTube, { Options } from 'react-youtube';\nimport Heading from '../guidelines/headings/Heading';\nimport { Button } from '../guidelines/buttons/Button';\nimport styles from './HomeHeader.module.scss';\n\nconst HomeHeader = () => {\n    const opts = {\n        height: '292',\n        width: '520',\n        playerVars: {\n            // https://developers.google.com/youtube/player_parameters\n            autoplay: 1,\n        },\n    } as Options;\n\n    return (\n        <div className={styles.header}>\n            <div className={styles.headerContent}>\n                <div className={styles.headerLeft}>\n                    <div className={styles.headerContentWrapper}>\n                        <Heading type=\"primary\" className={styles.headerPrimaryHeading}>SoftUni Judge System</Heading>\n                        <Heading type=\"secondary\">Automatic Algorithm Test Platform</Heading>\n                        <div className={styles.headerBulletsWrapper}>\n                            <div className={styles.headerBullet}>\n                                <i className=\"fas fa-check-circle\" />\n                                Solve problems in most popular programming languages\n                            </div>\n                            <div className={styles.headerBullet}>\n                                <i className=\"fas fa-check-circle\" />\n                                See results right away\n                            </div>\n                            <div className={styles.headerBullet}>\n                                <i className=\"fas fa-check-circle\" />\n                                Submit algorithms, projects etc.\n                            </div>\n                        </div>\n                        <Button\n                          type=\"primary\"\n                          text=\"See Contests\"\n                          className={styles.headerLeftButton}\n                          onClick={() => {\n                          }}\n                        />\n                    </div>\n                </div>\n                <div className={styles.headerRight}>\n                    <div className={styles.headerContentWrapper}>\n                        {/* eslint-disable-next-line max-len */}\n                        <YouTube containerClassName={styles.youtubePlayer} videoId=\"IwLET8SDBE4\" opts={opts} onReady={(event) => event.target.pauseVideo()} />\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default HomeHeader;\n","import * as React from 'react';\nimport HomeContests from '../../components/home-contests/HomeContests';\nimport HomeHeader from '../../components/home-header/HomeHeader';\n\nconst HomePage = () => (\n    <>\n        <HomeHeader />\n        <HomeContests />\n    </>\n);\n\nexport default HomePage;\n","const wait = (seconds: number): Promise<void> => new Promise<void>((resolve) => {\n    setTimeout(resolve, seconds * 1000);\n});\n\nexport default { wait };\nexport {\n    wait,\n};\n","import * as React from 'react';\nimport { useHistory } from 'react-router';\nimport { useEffect } from 'react';\nimport { wait } from '../../utils/promise-utils';\nimport { useAuth } from '../../hooks/use-auth';\n\nconst LogoutPage = () => {\n    const { signOut } = useAuth();\n    const history = useHistory();\n\n    useEffect(() => {\n        (async () => {\n            await signOut();\n            await wait(0.7);\n            window.location.href = '/';\n        })();\n    }, [ history, signOut ]);\n\n    return (\n        <div>You are logged out. You will be redirected to home shortly.</div>\n    );\n};\n\nexport default LogoutPage;\n","import { v4 as uuidv4 } from 'uuid';\n\nconst generateId = () => uuidv4();\n\nexport default generateId;\n","import * as React from 'react';\nimport { useState } from 'react';\nimport concatClassNames from '../../../utils/class-names';\nimport generateId from '../../../utils/id-generator';\nimport IHaveChildrenProps from '../../common/IHaveChildrenProps';\n\nimport styles from './FormControl.module.scss';\n\ninterface IFormControlProps {\n    name: string,\n    value: string,\n    className?: string | string[],\n    labelText?: string,\n    labelClassName?: string | string[],\n    type?: 'radio' | 'checkbox' | 'text' | 'textarea' | 'input' | 'password',\n    onChange?: (value?:string) => void\n    onInput?: (value?:string) => void,\n    checked?: boolean\n}\n\ninterface ILabelInternalProps extends IHaveChildrenProps {\n    text: string,\n    className: string | string[],\n    forKey: string,\n}\n\nconst LabelInternal = ({ text, className, forKey, children }: ILabelInternalProps) => {\n    if (!text && !className) {\n        return (\n            <>\n                {children}\n            </>\n        );\n    }\n\n    const componentClassName = concatClassNames(className, styles.formLabel);\n\n    return (\n        <div className={styles.formControlContainer}>\n            {children}\n            <label className={componentClassName} htmlFor={forKey}>\n                <span>{text}</span>\n            </label>\n        </div>\n    );\n};\n\nconst FormControl = ({\n    name,\n    value,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onChange = (v?:string) => { },\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onInput = (v?:string) => { },\n    className = '',\n    labelText = '',\n    labelClassName = '',\n    type = 'text',\n    checked = false,\n}: IFormControlProps) => {\n    const [ formControlValue, setFormControlValue ] = useState(value);\n\n    const id = generateId();\n    const componentClassName = concatClassNames(styles.formControl, className);\n    const handleOnChange = (ev:any) => {\n        setFormControlValue(ev.target.value);\n        onChange(ev.target.value);\n    };\n    const handleOnInput = (ev:any) => {\n        setFormControlValue(ev.target.value);\n        onChange(ev.target.value);\n    };\n\n    const generateFormControl = () => {\n        if (type === 'textarea') {\n            return (\n                <textarea\n                  className={concatClassNames(componentClassName, styles.formControlTextArea)}\n                  name={name}\n                  id={id}\n                  onChange={handleOnChange}\n                  onInput={handleOnInput}\n                  value={formControlValue}\n                />\n            );\n        }\n        return (\n            <input\n              type={type}\n              className={componentClassName}\n              name={name}\n              id={id}\n              onChange={handleOnChange}\n              onInput={handleOnInput}\n              value={formControlValue}\n              checked={checked}\n            />\n        );\n    };\n\n    return (\n        <LabelInternal text={labelText} className={labelClassName} forKey={id}>\n            {generateFormControl()}\n        </LabelInternal>\n    );\n};\n\nexport default FormControl;\n","import * as React from 'react';\nimport { useCallback, useEffect } from 'react';\nimport { useHistory } from 'react-router';\nimport { Button } from '../../components/guidelines/buttons/Button';\nimport FormControl from '../../components/guidelines/forms/FormControl';\nimport { useAuth } from '../../hooks/use-auth';\n\nconst LoginPage = () => {\n    const { setUsername, setPassword, signIn, user } = useAuth();\n    const history = useHistory();\n\n    const onChangeUpdateUsername = useCallback((value: any) => {\n        setUsername(value);\n    }, [ setUsername ]);\n\n    const onChangeUpdatePassword = useCallback((value: any) => {\n        setPassword(value);\n    }, [ setPassword ]);\n\n    const submitLoginOnClick = useCallback(async () => {\n        signIn();\n    }, [ signIn ]);\n\n    useEffect(() => {\n        if (user.isLoggedIn) {\n            history.push('/');\n        }\n    }, [ history, user.isLoggedIn ]);\n\n    return (\n        <>\n            <form action=\"\">\n                <FormControl name=\"Username\" type=\"input\" onChange={(value) => onChangeUpdateUsername(value)} value=\"\" />\n                <FormControl name=\"Password\" type=\"password\" onChange={(value) => onChangeUpdatePassword(value)} value=\"\" />\n                <FormControl name=\"Password\" type=\"checkbox\" value=\"false\" />\n                <Button text=\"Login\" type=\"primary\" onClick={submitLoginOnClick} />\n            </form>\n        </>\n    );\n};\n\nexport default LoginPage;\n","import * as React from 'react';\nimport { useEffect } from 'react';\nimport { useHistory } from 'react-router';\nimport { useAuth } from '../../hooks/use-auth';\n\nconst RegisterPage = () => {\n    const { user } = useAuth();\n    const history = useHistory();\n\n    useEffect(() => {\n        if (user.isLoggedIn) {\n            history.push('/');\n        }\n\n        window.location.href = '';\n    }, [ history, user ]);\n\n    return <></>;\n};\n\nexport default RegisterPage;\n","import React, { createContext, useCallback, useContext, useEffect, useState } from 'react';\nimport IHaveChildrenProps from '../components/common/IHaveChildrenProps';\nimport { useLoading } from './use-loading';\nimport { useHttp } from './use-http';\nimport { useNotifications } from './use-notifications';\nimport { getProfileInfoUrl } from '../utils/urls';\n\ninterface IUserProfileType {\n    id: string,\n    userName: string,\n    firstName: string,\n    lastName: string,\n    email: string\n}\n\ninterface IUsersContext {\n    profile: IUserProfileType,\n    getProfile: () => Promise<void>\n}\n\nconst defaultState = { profile: { userName: '' } as IUserProfileType };\n\nconst UsersContext = createContext<IUsersContext>(defaultState as IUsersContext);\n\ninterface IUsersProviderProps extends IHaveChildrenProps {}\n\nconst UsersProvider = ({ children }: IUsersProviderProps) => {\n    const { startLoading, stopLoading } = useLoading();\n    const [ profile, setProfile ] = useState(defaultState.profile);\n    const { showError } = useNotifications();\n    const {\n        get: getProfileInfoRequest,\n        data: getProfileInfoData,\n    } = useHttp(getProfileInfoUrl);\n\n    const getProfile = useCallback(async () => {\n        startLoading();\n        await getProfileInfoRequest();\n        stopLoading();\n    }, [ getProfileInfoRequest, startLoading, stopLoading ]);\n\n    useEffect(() => {\n        if (getProfileInfoData != null) {\n            setProfile(getProfileInfoData as IUserProfileType);\n        }\n\n        // showError({ message: 'Could not retrieve profile info.' } as INotificationType);\n    }, [ getProfileInfoData, showError ]);\n\n    const value = { profile, getProfile };\n\n    return (\n        <UsersContext.Provider value={value}>\n            {children}\n        </UsersContext.Provider>\n    );\n};\n\nconst useUsers = () => useContext(UsersContext);\n\nexport {\n    useUsers,\n};\n\nexport type { IUserProfileType };\n\nexport default UsersProvider;\n","import * as React from 'react';\nimport { IUserProfileType } from '../../../hooks/use-users';\nimport styles from './ProfileAboutInfo.module.scss';\nimport { LinkButton } from '../../guidelines/buttons/Button';\n\ninterface IProfileAboutInfoProps {\n    value: IUserProfileType\n}\n\nconst ProfileAboutInfo = ({ value } : IProfileAboutInfoProps) => (\n    <div className={styles.profileAboutInfo}>\n        <div className={styles.profileAboutInfoGroupControl}>\n            <h2>Username:</h2>\n            <p>{value.userName}</p>\n        </div>\n        <div className={styles.profileAboutInfoGroupControl}>\n            <h2>Name:</h2>\n            <p>\n                {value.firstName}\n                {' '}\n                {value.lastName}\n            </p>\n        </div>\n        <div className={styles.profileAboutInfoGroupControl}>\n            <h2>Email:</h2>\n            <p>{value.email}</p>\n        </div>\n        <LinkButton text=\"Update\" to=\"/\" type=\"secondary\" />\n    </div>\n);\n\nexport default ProfileAboutInfo;\n","import React, { createContext, useCallback, useContext, useEffect, useState } from 'react';\nimport IHaveChildrenProps from '../../components/common/IHaveChildrenProps';\nimport { useLoading } from '../use-loading';\nimport { useHttp } from '../use-http';\nimport { ITestRunType, ISubmissionType } from './types';\nimport { getSubmissionsForProfileUrl, submitUrl } from '../../utils/urls';\nimport { useContests } from '../contests/use-contests';\n\ninterface ISubmissionsContext {\n    submissions: ISubmissionType[]\n    currentSubmissionCode: string,\n    getUserSubmissions: () => Promise<void>\n    submit: () => Promise<void>\n    setCode: (code: string) => void;\n}\n\nconst defaultState = { currentSubmissionCode: 'Write your code here' };\n\nconst SubmissionsContext = createContext<ISubmissionsContext>(defaultState as ISubmissionsContext);\n\ninterface ISubmissionsProviderProps extends IHaveChildrenProps {}\n\nconst SubmissionsProvider = ({ children }: ISubmissionsProviderProps) => {\n    const { startLoading, stopLoading } = useLoading();\n    const { selectedSubmissionTypeId, currentProblem } = useContests();\n    const [ submissions, setSubmissions ] = useState<ISubmissionType[]>([]);\n    const [ currentSubmissionCode, setCurrentSubmissionCode ] = useState<string>(defaultState.currentSubmissionCode);\n\n    const {\n        get: getSubmissionsForProfileRequest,\n        data: getSubmissionsForProfileData,\n    } = useHttp(getSubmissionsForProfileUrl);\n\n    const {\n        post: submitRequest,\n        data: submitData,\n    } = useHttp(submitUrl);\n\n    const getUserSubmissions = useCallback(async () => {\n        startLoading();\n        await getSubmissionsForProfileRequest();\n        stopLoading();\n    }, [ getSubmissionsForProfileRequest, startLoading, stopLoading ]);\n\n    const submit = useCallback(async () => {\n        startLoading();\n        await submitRequest({\n            ProblemId: currentProblem?.id,\n            SubmissionTypeId: selectedSubmissionTypeId,\n            Content: currentSubmissionCode,\n            Official: true,\n        });\n        stopLoading();\n    }, [ startLoading, submitRequest, currentProblem, selectedSubmissionTypeId, currentSubmissionCode, stopLoading ]);\n\n    const setCode = (code: string) => {\n        setCurrentSubmissionCode(code);\n    };\n\n    useEffect(() => {\n        if (getSubmissionsForProfileData != null) {\n            setSubmissions(getSubmissionsForProfileData as ISubmissionType[]);\n        }\n    }, [ getSubmissionsForProfileData ]);\n\n    useEffect(() => {\n        if (submitData != null) {\n            console.log(submitData);\n        }\n    }, [ submitData ]);\n\n    const value = {\n        submissions,\n        getUserSubmissions,\n        submit,\n        currentSubmissionCode,\n        setCode,\n    };\n\n    return (\n        <SubmissionsContext.Provider value={value}>\n            {children}\n        </SubmissionsContext.Provider>\n    );\n};\n\nconst useSubmissions = () => useContext(SubmissionsContext);\n\nexport {\n    useSubmissions,\n};\n\nexport type { ISubmissionType, ITestRunType };\n\nexport default SubmissionsProvider;\n","import * as React from 'react';\nimport { ITestRunType } from '../../../hooks/submissions/use-submissions';\nimport concatClassNames from '../../../utils/class-names';\nimport styles from './ExecutionResult.module.scss';\n\ninterface IExecutionResultDetailsProps {\n    testRuns: ITestRunType[],\n}\n\nconst classnameToTestRunResultType : { [name: string]: string } = {\n    CorrectAnswer: 'fa-check',\n    WrongAnswer: 'fa-times',\n    TimeLimit: 'fa-clock',\n    MemoryLimit: 'fa-archive',\n    RunTimeError: 'fa-asterisk',\n};\n\nconst concatResultTypeIconClassname = (resultType: string) : string => concatClassNames(\n    'fas',\n    classnameToTestRunResultType[resultType],\n    resultType === 'CorrectAnswer'\n        ? styles.correctAnswerIcon\n        : styles.wrongAnswerIcon,\n);\n\nconst ExecutionResult = ({ testRuns }: IExecutionResultDetailsProps) => {\n    // eslint-disable-next-line max-len\n    const renderTestRunIcons = (runs: ITestRunType[]) => runs.map((run) => (<i key={run.id} className={concatResultTypeIconClassname(run.resultType)} />));\n\n    return (\n        <div className={styles.testResultsList}>{renderTestRunIcons(testRuns)}</div>\n    );\n};\n\nexport default ExecutionResult;\n","import * as React from 'react';\nimport { DataGrid, GridColDef, GridValueGetterParams } from '@mui/x-data-grid';\nimport { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSubmissions } from '../../../hooks/submissions/use-submissions';\nimport { formatDate } from '../../../utils/dates';\nimport ExecutionResult from '../../submissions/execution-result/ExecutionResult';\nimport styles from './ProfileSubmissions.module.scss';\n\nconst columns: GridColDef[] = [\n    { field: 'id', headerName: '№', minWidth: 70, flex: 1 },\n    {\n        field: 'submittedOn',\n        headerName: 'Submitted On',\n        minWidth: 160,\n        flex: 1,\n        sortable: true,\n        valueGetter: (params: GridValueGetterParams) => `${formatDate(new Date(params.row.submittedOn))}`,\n    },\n    {\n        field: 'problem',\n        headerName: 'Task',\n        minWidth: 150,\n        flex: 1,\n        sortable: true,\n        renderCell: (params: GridValueGetterParams) => (\n            <Link to={`/submissions/${params.row.id}`} className={styles.contestLink}>{params.row.problem.name}</Link>\n        ),\n    },\n    {\n        field: 'points',\n        headerName: 'Points',\n        type: 'number',\n        minWidth: 70,\n        flex: 1,\n        sortable: true,\n        valueGetter: (params: GridValueGetterParams) => `${params.row.points}/${params.row.problem.maximumPoints}`,\n    },\n    {\n        field: 'maxUsedTime',\n        headerName: 'Memory Used',\n        type: 'string',\n        minWidth: 70,\n        flex: 1,\n        hide: true,\n        sortable: false,\n    },\n    {\n        field: 'maxUsedMemory',\n        headerName: 'Memory Used',\n        type: 'string',\n        minWidth: 70,\n        hide: true,\n        sortable: true,\n    },\n    {\n        field: 'executionResult',\n        headerName: 'Execution Result',\n        type: 'string',\n        minWidth: 250,\n        flex: 1,\n        sortable: false,\n        renderCell: (params: GridValueGetterParams) => (\n            <ExecutionResult testRuns={params.row.testRuns} />\n        ),\n    },\n];\n\nconst ProfileSubmissions = () => {\n    const { submissions, getUserSubmissions } = useSubmissions();\n\n    useEffect(() => {\n        getUserSubmissions();\n    }, [ getUserSubmissions ]);\n\n    return (\n        <div style={{ height: 400, width: '100%' }}>\n            <DataGrid\n              rows={submissions}\n              columns={columns}\n              pageSize={5}\n              rowsPerPageOptions={[ 5 ]}\n              disableSelectionOnClick\n            />\n        </div>\n    );\n};\n\nexport default ProfileSubmissions;\n","import * as React from 'react';\nimport { createContext, useCallback, useContext, useEffect, useState } from 'react';\nimport IHaveChildrenProps from '../components/common/IHaveChildrenProps';\nimport { useLoading } from './use-loading';\nimport { useHttp } from './use-http';\nimport { getParticipationsForProfileUrl } from '../utils/urls';\n\ninterface IParticipationType {\n    id: number,\n    contestId: number,\n    contestName: string,\n    competeResult?: number,\n    practiceResult?: number,\n    contestCompeteMaximumPoints?: number,\n    contestPracticeMaximumPoints?: number,\n    registrationTime: Date\n}\n\ninterface IParticipationsContext {\n    areUserParticipationsRetrieved: boolean,\n    userParticipations: IParticipationType[]\n    getUserParticipations: () => Promise<void>\n}\n\nconst defaultState = {};\n\nconst ParticipationsContext = createContext<IParticipationsContext>(defaultState as IParticipationsContext);\n\ninterface IParticipationsProviderProps extends IHaveChildrenProps {}\n\nconst ParticipationsProvider = ({ children }: IParticipationsProviderProps) => {\n    const { startLoading, stopLoading } = useLoading();\n    const [ areUserParticipationsRetrieved, setAreUserParticipationsRetrieved ] = useState<boolean>(false);\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const [ userParticipations, setUserParticipations ] = useState<IParticipationType[]>([]);\n    const {\n        get: getParticipationsForProfileRequest,\n        data: getParticipationsForProfileData,\n    } = useHttp(getParticipationsForProfileUrl);\n\n    const getUserParticipations = useCallback(async () => {\n        startLoading();\n        await getParticipationsForProfileRequest();\n        stopLoading();\n    }, [ getParticipationsForProfileRequest, startLoading, stopLoading ]);\n\n    useEffect(() => {\n        if (getParticipationsForProfileData != null) {\n            console.log(getParticipationsForProfileData);\n            setUserParticipations(getParticipationsForProfileData as IParticipationType[]);\n            setAreUserParticipationsRetrieved(true);\n        }\n    }, [ getParticipationsForProfileData ]);\n\n    const value = {\n        areUserParticipationsRetrieved,\n        userParticipations,\n        getUserParticipations,\n    };\n\n    return (\n        <ParticipationsContext.Provider value={value}>\n            {children}\n        </ParticipationsContext.Provider>\n    );\n};\n\nconst useParticipations = () => useContext(ParticipationsContext);\n\nexport {\n    useParticipations,\n};\n\nexport type { IParticipationType };\n\nexport default ParticipationsProvider;\n","import * as React from 'react';\nimport { DataGrid, GridColDef, GridValueGetterParams } from '@mui/x-data-grid';\nimport { useEffect } from 'react';\nimport { formatDate } from '../../../utils/dates';\nimport { useParticipations } from '../../../hooks/use-participations';\n\nconst columns: GridColDef[] = [\n    {\n        field: 'contestName',\n        headerName: 'Contest',\n        minWidth: 160,\n        flex: 1,\n        sortable: true,\n    },\n    {\n        field: 'registrationTime',\n        headerName: 'Time',\n        minWidth: 80,\n        flex: 1,\n        sortable: true,\n        valueGetter: (params: GridValueGetterParams) => `${formatDate(new Date(params.row.registrationTime))}`,\n    },\n    {\n        field: 'competeResult',\n        headerName: 'Compete Result',\n        type: 'string',\n        minWidth: 70,\n        flex: 1,\n        sortable: false,\n        valueGetter: (params: GridValueGetterParams) => `${params.row.competeResult}/${params.row.contestCompeteMaximumPoints}`,\n    },\n    {\n        field: 'practiceResult',\n        headerName: 'Practice Result',\n        type: 'string',\n        minWidth: 70,\n        flex: 1,\n        sortable: false,\n        valueGetter: (params: GridValueGetterParams) => `${params.row.practiceResult}/${params.row.contestPracticeMaximumPoints}`,\n    },\n];\n\nconst ProfileContestParticipations = () => {\n    const { areUserParticipationsRetrieved, userParticipations, getUserParticipations } = useParticipations();\n\n    useEffect(() => {\n        console.log(userParticipations);\n        if (areUserParticipationsRetrieved) {\n            return;\n        }\n        getUserParticipations();\n    }, [ areUserParticipationsRetrieved, getUserParticipations, userParticipations ]);\n\n    return (\n        <div style={{ height: 400, width: '100%' }}>\n            <DataGrid\n              rows={userParticipations}\n              columns={columns}\n              pageSize={5}\n              rowsPerPageOptions={[ 5 ]}\n              disableSelectionOnClick\n            />\n        </div>\n    );\n};\n\nexport default ProfileContestParticipations;\n","import * as React from 'react';\nimport { FC } from 'react';\nimport { Redirect, useLocation } from 'react-router';\nimport IHaveChildrenProps from '../../components/common/IHaveChildrenProps';\nimport { useAuth } from '../../hooks/use-auth';\n\ninterface IPrivatePageProps extends IHaveChildrenProps {\n}\n\nconst PrivatePage = ({ children }: IPrivatePageProps) => {\n    const { user } = useAuth();\n    const location = useLocation();\n\n    return (\n        !user.isLoggedIn\n            ? (\n                <Redirect to={{\n                    pathname: '/login',\n                    state: { from: location },\n                }}\n                />\n            )\n            : (\n                <>\n                    {children}\n                </>\n            )\n    );\n};\nconst makePrivate = (ComponentToWrap: FC) => (props: any) => (\n    <PrivatePage>\n        {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n        <ComponentToWrap {...props} />\n    </PrivatePage>\n);\n\nexport default PrivatePage;\nexport {\n    makePrivate,\n};\n","import * as React from 'react';\nimport { useState } from 'react';\nimport { Box, createTheme, Tab } from '@material-ui/core';\nimport { TabContext, TabList, TabPanel } from '@material-ui/lab';\nimport { ThemeProvider } from '@mui/styles';\nimport { Theme } from '@material-ui/core/styles/createTheme';\n\ninterface ITabPanelProps {\n    tabChildren: React.ReactNode[]\n    tabLabels: string[]\n    themeOverride?: Theme\n}\n\nconst defaultState = { initialValue: '0' };\n\nconst Tabs = ({ tabChildren, tabLabels, themeOverride }: ITabPanelProps) => {\n    const [ value, setValue ] = useState(defaultState.initialValue);\n\n    const theme =\n        themeOverride == null\n            ? createTheme({ overrides: { MuiTabs: { indicator: { backgroundColor: '#42abf8', height: 3 } } } })\n            : themeOverride;\n\n    const handleChange = (event: React.ChangeEvent<{}>, newValue: string) => {\n        setValue(newValue);\n    };\n\n    const renderTabs = () => tabLabels.map((tl: string, index: number) => (\n        <Tab key={tl} label={tl} value={index.toString()} />\n    ));\n\n    const renderTabChildren = () => tabChildren?.map((tc: React.ReactNode, index: number) => (\n        <TabPanel key={index.toString()} value={index.toString()}>{tc}</TabPanel>\n    ));\n\n    return (\n        <ThemeProvider theme={theme}>\n            <Box sx={{ width: '100%' }}>\n                <TabContext value={value}>\n                    <Box>\n                        <TabList\n                          onChange={handleChange}\n                        >\n                            {renderTabs()}\n                        </TabList>\n                    </Box>\n                    {renderTabChildren()}\n                </TabContext>\n            </Box>\n        </ThemeProvider>\n    );\n};\n\nexport default Tabs;\n","import * as React from 'react';\nimport { useEffect } from 'react';\n\nimport { setLayout } from '../shared/set-layout';\nimport { useUsers } from '../../hooks/use-users';\nimport Heading from '../../components/guidelines/headings/Heading';\nimport ProfileAboutInfo from '../../components/profile/profile-about-info/ProfileAboutInfo';\nimport ProfileSubmissions from '../../components/profile/profile-submissions/ProfileSubmisssions';\nimport ProfileContestParticipations\n    from '../../components/profile/profile-contest-participations/ProfileContestParticipations';\nimport { makePrivate } from '../shared/make-private';\nimport Tabs from '../../components/guidelines/tabs/Tabs';\n\nconst ProfilePage = () => {\n    const { profile, getProfile } = useUsers();\n\n    useEffect(() => {\n        getProfile();\n    }, [ getProfile ]);\n\n    return (\n        <>\n            <Heading>Profile</Heading>\n            <ProfileAboutInfo value={profile} />\n            <Tabs\n              tabLabels={[ 'Submissions', 'Contest Participations' ]}\n              tabChildren={[ <ProfileSubmissions />, <ProfileContestParticipations /> ]}\n            />\n        </>\n    );\n};\n\nexport default makePrivate(setLayout(ProfilePage));\n","import * as React from 'react';\nimport { useCallback } from 'react';\nimport ReactDiffViewer, { DiffMethod } from 'react-diff-viewer';\nimport Prism from 'prismjs';\nimport 'prismjs/components/prism-javascript';\nimport 'prismjs/themes/prism-okaidia.css';\n\ninterface ITestsRunDiffProps {\n    expectedStr: string,\n    actualStr: string\n}\n\nconst Diff = ({ expectedStr, actualStr } : ITestsRunDiffProps) => {\n    const highlightSyntax = useCallback((str) => {\n        if (str) {\n            return (\n                <pre\n                  style={{ display: 'inline' }}\n                  dangerouslySetInnerHTML={{ __html: Prism.highlight(str, Prism.languages.text, 'apex') }}\n                />\n            );\n        }\n        return (\n            <></>\n        );\n    }, []);\n\n    return (\n        <ReactDiffViewer\n          oldValue={expectedStr}\n          newValue={actualStr}\n          compareMethod={DiffMethod.CHARS}\n          splitView\n          showDiffOnly\n          renderContent={highlightSyntax}\n        />\n    );\n};\n\nexport default Diff;\n","import React, { createContext, useCallback, useContext, useEffect, useMemo, useState } from 'react';\nimport IHaveChildrenProps from '../../components/common/IHaveChildrenProps';\nimport { useLoading } from '../use-loading';\nimport { useHttp } from '../use-http';\nimport { ITestRunType, ISubmissionType, ISubmissionDetailsType, ISubmissionResultType } from './types';\nimport { getSubmissionDetailsUrl, getSubmissionResultsByProblem } from '../../utils/urls';\nimport { useContests } from '../contests/use-contests';\n\ninterface ISubmissionsDetailsContext {\n    setCurrentSubmissionId: (submissionId: number) => void;\n    currentSubmission: ISubmissionDetailsType | undefined,\n    getSubmissionDetails: () => Promise<void>,\n    currentProblemSubmissionResults: ISubmissionResultType[]\n    getSubmissionResults: (problemId: number) => Promise<void>\n}\n\nconst defaultState = { currentProblemSubmissionResults: [] as ISubmissionResultType[] };\n\nconst SubmissionsDetailsContext = createContext<ISubmissionsDetailsContext>(defaultState as ISubmissionsDetailsContext);\n\ninterface ISubmissionsDetailsProviderProps extends IHaveChildrenProps {}\n\nconst SubmissionsDetailsProvider = ({ children }: ISubmissionsDetailsProviderProps) => {\n    const { startLoading, stopLoading } = useLoading();\n    const { isContestParticipationOfficial } = useContests();\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const [ currentSubmissionId, setCurrentSubmissionId ] = useState<number>();\n    const [ currentSubmission, setCurrentSubmission ] = useState<ISubmissionDetailsType>();\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const [ currentProblemSubmissionResults, setCurrentProblemSubmissionResults ] =\n        useState<ISubmissionResultType[]>(defaultState.currentProblemSubmissionResults);\n    const getCurrentSubmissionDetailsUrl = useMemo(() => `${getSubmissionDetailsUrl}/${currentSubmissionId}`, [\n        currentSubmissionId,\n    ]);\n\n    const {\n        get: getSubmissionDetailsRequest,\n        data: getSubmissionDetailsData,\n    } = useHttp(getCurrentSubmissionDetailsUrl);\n\n    const {\n        get: getProblemResultsRequest,\n        data: getProblemResultsData,\n    } = useHttp(getSubmissionResultsByProblem);\n\n    const getSubmissionDetails = useCallback(async () => {\n        if (currentSubmissionId != null) {\n            startLoading();\n            await getSubmissionDetailsRequest();\n            stopLoading();\n        }\n    }, [ currentSubmissionId, getSubmissionDetailsRequest, startLoading, stopLoading ]);\n\n    const getSubmissionResults = useCallback(async (problemId: number) => {\n        startLoading();\n        await getProblemResultsRequest({ id: problemId.toString(), isOfficial: isContestParticipationOfficial.toString() });\n        stopLoading();\n    }, [ getProblemResultsRequest, isContestParticipationOfficial, startLoading, stopLoading ]);\n\n    useEffect(() => {\n        if (getProblemResultsData != null) {\n            setCurrentProblemSubmissionResults(getProblemResultsData as ISubmissionResultType[]);\n        }\n    }, [ getProblemResultsData ]);\n\n    useEffect(() => {\n        if (getSubmissionDetailsData != null) {\n            setCurrentSubmission(getSubmissionDetailsData as ISubmissionDetailsType);\n        }\n    }, [ getSubmissionDetailsData ]);\n\n    const value = {\n        setCurrentSubmissionId,\n        currentSubmission,\n        currentProblemSubmissionResults,\n        getSubmissionDetails,\n        getSubmissionResults,\n    };\n\n    return (\n        <SubmissionsDetailsContext.Provider value={value}>\n            {children}\n        </SubmissionsDetailsContext.Provider>\n    );\n};\n\nconst useSubmissionsDetails = () => useContext(SubmissionsDetailsContext);\n\nexport {\n    useSubmissionsDetails,\n};\n\nexport type { ISubmissionType, ITestRunType };\n\nexport default SubmissionsDetailsProvider;\n","import * as React from 'react';\nimport { useCallback } from 'react';\nimport Heading from '../../guidelines/headings/Heading';\nimport Diff from '../../Diff';\nimport { useSubmissionsDetails } from '../../../hooks/submissions/use-submissions-details';\nimport { ITestRunDetailsType } from '../../../hooks/submissions/types';\nimport styles from './SubmissionResults.module.scss';\n\nconst SubmissionResults = () => {\n    const { currentSubmission } = useSubmissionsDetails();\n\n    const getTestRunHeading = (run: ITestRunDetailsType, runIndex: number) => `Test #${runIndex} (${run.resultType}) `;\n\n    const getIsCorrectAnswerResultType = (run: ITestRunDetailsType) => run.resultType === 'CorrectAnswer';\n\n    const getTestRunHeadingClassName = useCallback(\n        (run: ITestRunDetailsType) => (getIsCorrectAnswerResultType(run)\n            ? styles.correctTestRunHeading\n            : styles.wrongTestRunHeading),\n        [],\n    );\n\n    const renderTimeAndMemoryUsed = (run: ITestRunDetailsType) => (\n        <>\n            <p>\n                Time used:\n                {run.maxUsedTime}\n                s\n            </p>\n            <p>\n                Memory used:\n                {run.maxUsedMemory}\n                {' '}\n                MB\n            </p>\n        </>\n    );\n\n    const renderTrialTests = useCallback((trialTests: ITestRunDetailsType[]) => trialTests.map((run, index) => (\n        <div className={styles.submissionResultContainer}>\n            <Heading type=\"secondary\" className={(() => getTestRunHeadingClassName(run))()}>\n                {`Zero ${getTestRunHeading(run, index)}`}\n            </Heading>\n            {\n                run.isTrialTest && (run.expectedOutputFragment !== null && run.userOutputFragment !== null)\n                    ? <Diff expectedStr={run.expectedOutputFragment} actualStr={run.userOutputFragment} />\n                    : null\n            }\n            {renderTimeAndMemoryUsed(run)}\n        </div>\n    )), [ getTestRunHeadingClassName ]);\n\n    const renderCompeteTests = useCallback((competeTests: ITestRunDetailsType[]) => competeTests.map((run, index) => (\n        <div className={styles.submissionResultContainer}>\n            <Heading type=\"secondary\" className={(() => getTestRunHeadingClassName(run))()}>\n                {getTestRunHeading(run, index)}\n            </Heading>\n            {renderTimeAndMemoryUsed(run)}\n        </div>\n    )), [ getTestRunHeadingClassName ]);\n\n    const renderTestRuns = useCallback(\n        () => {\n            if (currentSubmission == null) {\n                return null;\n            }\n            return (\n                <>\n                    {renderTrialTests(currentSubmission!.testRuns.filter((tr) => tr.isTrialTest))}\n                    {renderCompeteTests(currentSubmission!.testRuns.filter((tr) => !tr.isTrialTest))}\n                </>\n            );\n        },\n        [ currentSubmission, renderCompeteTests, renderTrialTests ],\n    );\n\n    return (\n        <>\n            {renderTestRuns()}\n        </>\n    );\n};\n\nexport default SubmissionResults;\n","import * as React from 'react';\nimport { useMemo } from 'react';\nimport { useSubmissionsDetails } from '../../../../hooks/submissions/use-submissions-details';\nimport Heading from '../../../guidelines/headings/Heading';\n\nconst SubmissionDetailsHeading = () => {\n    const { currentSubmission } = useSubmissionsDetails();\n\n    const getHeaderText = useMemo(\n        () => `Solution #${currentSubmission?.id} for problem ${currentSubmission?.problem.name}`,\n        [ currentSubmission ],\n    );\n\n    return (\n        <>\n            <Heading>\n                {getHeaderText}\n            </Heading>\n            <p>{`By ${currentSubmission?.user.userName}`}</p>\n        </>\n    );\n};\n\nexport default SubmissionDetailsHeading;\n","import * as React from 'react';\nimport { useParams } from 'react-router';\nimport { useEffect } from 'react';\nimport SubmissionResults from '../../components/submissions/submission-results/SubmissionResults';\nimport { useSubmissionsDetails } from '../../hooks/submissions/use-submissions-details';\nimport SubmissionDetailsHeading from '../../components/submissions/test-runs/test-run-heading/SubmissionDetailsHeading';\nimport { setLayout } from '../shared/set-layout';\n\ninterface IParamsProps {\n    submissionId: string\n}\n\nconst SubmissionPage = () => {\n    const { submissionId } = useParams<IParamsProps>();\n    const { setCurrentSubmissionId, getSubmissionDetails } = useSubmissionsDetails();\n\n    useEffect(() => {\n        setCurrentSubmissionId(Number(submissionId));\n    });\n\n    useEffect(() => {\n        getSubmissionDetails();\n    }, [ getSubmissionDetails, submissionId ]);\n\n    return (\n        <>\n            <SubmissionDetailsHeading />\n            <SubmissionResults />\n        </>\n    );\n};\n\nexport default setLayout(SubmissionPage);\n","import * as React from 'react';\nimport List from '../../guidelines/lists/List';\nimport Heading from '../../guidelines/headings/Heading';\nimport { useContests } from '../../../hooks/contests/use-contests';\nimport styles from './ContestTasksNavigation.module.scss';\nimport { IProblemType } from '../../../hooks/contests/types';\n\nconst ContestTasksNavigation = () => {\n    const { currentContest, currentProblem, setProblem } = useContests();\n\n    const renderTask = (problem: IProblemType) => {\n        // eslint-disable-next-line eqeqeq\n        const className = currentProblem?.id == problem.id\n            ? styles.taskSideNavigationItemSelected\n            : styles.taskSideNavigationItem;\n\n        return (\n            // eslint-disable-next-line max-len\n            // eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions,jsx-a11y/click-events-have-key-events\n            <p\n              key={problem.id}\n              className={className}\n              onClick={() => setProblem(problem)}\n            >\n                {problem.name}\n            </p>\n        );\n    };\n\n    const renderTasksList = () => (\n        currentContest == null\n            ? null\n            : (\n                <List\n                  values={currentContest.problems.sort((a, b) => a.orderBy - b.orderBy)}\n                  itemFunc={renderTask}\n                  className={styles.tasksListSideNavigation}\n                />\n            )\n    );\n\n    return (\n        <div className={styles.tasksSideNavigation}>\n            <Heading type=\"secondary\">Tasks</Heading>\n            {renderTasksList()}\n        </div>\n    );\n};\n\nexport default ContestTasksNavigation;\n","import * as React from 'react';\nimport MonacoEditor from 'react-monaco-editor';\nimport { useSubmissions } from '../../hooks/submissions/use-submissions';\n\nconst CodeEditor = () => {\n    const { currentSubmissionCode, setCode } = useSubmissions();\n\n    const onCodeChange = (newValue: string) => {\n        setCode(newValue);\n    };\n\n    return (\n        <MonacoEditor\n          width=\"600\"\n          height=\"400\"\n          language=\"JavaScript\"\n          theme=\"vs-dark\"\n          value={currentSubmissionCode}\n          options={{\n              selectOnLineNumbers: true,\n              minimap: { enabled: false },\n              automaticLayout: true,\n              hideCursorInOverviewRuler: true,\n              lineHeight: 20,\n              scrollbar: { vertical: 'hidden' },\n          }}\n          onChange={onCodeChange}\n        />\n    );\n};\n\nexport default CodeEditor;\n","import * as React from 'react';\nimport { useCallback, useState } from 'react';\nimport styles from './ExecutionTypeSelector.module.scss';\nimport { Button } from '../../guidelines/buttons/Button';\nimport { useContests } from '../../../hooks/contests/use-contests';\n\ninterface IExecutionTypeSelectorProps {\n    id: number,\n    value: string\n    isSelected: boolean,\n    onSelect: () => void;\n}\n\nconst ExecutionTypeSelector = ({ id, value, isSelected, onSelect }: IExecutionTypeSelectorProps) => {\n    const [ selected, setSelected ] = useState(isSelected);\n    const { selectedSubmissionTypeId } = useContests();\n\n    // eslint-disable-next-line eqeqeq\n    const getClassName = useCallback(() => (selectedSubmissionTypeId == id\n        ? styles.executionTypeSelectorActive\n        : styles.executionTypeSelectorInactive), [ id, selectedSubmissionTypeId ]);\n\n    const select = useCallback(() => {\n        onSelect();\n        setSelected(!selected);\n    }, [ onSelect, selected ]);\n\n    return (\n        // eslint-disable-next-line max-len\n        // eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions\n        <Button\n          type=\"plain\"\n          className={getClassName()}\n          onClick={select}\n        >\n            {value}\n        </Button>\n    );\n};\n\nexport default ExecutionTypeSelector;\n","import * as React from 'react';\nimport { useCallback, useEffect } from 'react';\nimport { saveAs } from 'file-saver';\nimport { IProblemResourceType } from '../../../hooks/contests/types';\nimport { useContests } from '../../../hooks/contests/use-contests';\nimport { Button } from '../../guidelines/buttons/Button';\nimport styles from './ProblemResource.module.scss';\n\ninterface IProblemResourceProps {\n    resource: IProblemResourceType\n}\n\nconst resourceTypeToIconClassName : { [name: number]: string } = {\n    1: 'fa-file-alt',\n    2: 'fa-lightbulb',\n    3: 'fa-link',\n};\n\nconst ProblemResource = ({ resource }: IProblemResourceProps) => {\n    const { getProblemResourceFile, getProblemResourceResponse } = useContests();\n\n    const saveFile = useCallback(() => {\n        if (!getProblemResourceResponse) {\n            return;\n        }\n\n        // todo: move this to http helper\n        const filename = getProblemResourceResponse\n            .headers['content-disposition']\n            .split('filename*=UTF-8\\'\\'')[1];\n\n        const filenameDecoded = decodeURIComponent(filename);\n\n        saveAs(\n            getProblemResourceResponse.data,\n            filenameDecoded,\n        );\n    }, [ getProblemResourceResponse ]);\n\n    const onClickGetResourceFile = useCallback(async () => {\n        await getProblemResourceFile(resource.id);\n    }, [ getProblemResourceFile, resource ]);\n\n    useEffect(() => {\n        saveFile();\n    }, [ getProblemResourceResponse, saveFile ]);\n\n    const renderResourceLink = (linkContent: React.ReactNode) => (resource.type === 3\n        ? (\n            <a\n              href={resource.link}\n              className={styles.resourceLink}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n                {linkContent}\n            </a>\n        )\n        : (\n            <Button\n              type=\"plain\"\n              className={styles.resourceLinkButton}\n              onClick={\n                        (e) => {\n                            e.preventDefault();\n                            onClickGetResourceFile();\n                        }\n                    }\n            >\n                {linkContent}\n            </Button>\n        ));\n\n    const renderResource = () => {\n        const resourceTypeIconClassName = resource.type == null\n            ? resourceTypeToIconClassName[1]\n            : resourceTypeToIconClassName[resource.type];\n\n        const resourceLinkContent = (\n            <>\n                <i className={`fal ${resourceTypeIconClassName}`} />\n                {resource.name}\n            </>\n        );\n\n        return (\n            <div className={styles.resourceWrapper}>\n                {renderResourceLink(resourceLinkContent)}\n            </div>\n        );\n    };\n\n    return renderResource();\n};\n\nexport default ProblemResource;\n","import * as React from 'react';\nimport { IProblemResourceType } from '../../../hooks/contests/types';\nimport List from '../../guidelines/lists/List';\nimport ProblemResource from '../problem-resource/ProblemResource';\nimport styles from './ProblemResources.module.scss';\n\ninterface IProblemResourcesProps {\n    resources: IProblemResourceType[] | undefined\n}\n\nconst ProblemResources = ({ resources }: IProblemResourcesProps) => {\n    const renderResource = (resource: IProblemResourceType) => (<ProblemResource resource={resource} />);\n\n    return (\n        resources == null\n            ? <p>No additional resources.</p>\n            : (\n                <List\n                  values={resources}\n                  orientation=\"vertical\"\n                  itemFunc={renderResource}\n                  className={styles.resourcesList}\n                />\n            )\n    );\n};\n\nexport default ProblemResources;\n","import * as React from 'react';\nimport { useCallback, useEffect } from 'react';\nimport { DataGrid, GridColDef, GridValueGetterParams } from '@mui/x-data-grid';\nimport { useSubmissionsDetails } from '../../../hooks/submissions/use-submissions-details';\nimport { ISubmissionResultType } from '../../../hooks/submissions/types';\nimport { formatDate } from '../../../utils/dates';\n\ninterface ISubmissionResultsProps {\n    problemId?: number,\n}\n\nconst getResultText = (submissionResult: ISubmissionResultType) => (\n    submissionResult.isProcessed\n        ? `${submissionResult.points}/${submissionResult.maximumPoints}`\n        : 'Not processed yet.');\n\nconst columns: GridColDef[] = [\n    { field: 'id', headerName: '№', flex: 0.5 },\n    {\n        field: 'submittedOn',\n        headerName: 'Submitted On',\n        flex: 1,\n        sortable: true,\n        valueGetter: (params: GridValueGetterParams) => `${formatDate(new Date(params.row.createdOn))}`,\n    },\n    {\n        field: 'result',\n        headerName: 'Result',\n        type: 'string',\n        flex: 1,\n        sortable: true,\n        valueGetter: (params: GridValueGetterParams) => getResultText(params.row as ISubmissionResultType),\n    },\n];\n\nconst SubmissionResults = ({ problemId }: ISubmissionResultsProps) => {\n    const { currentProblemSubmissionResults, getSubmissionResults } = useSubmissionsDetails();\n\n    const getResults = useCallback(async () => {\n        if (problemId != null) {\n            await getSubmissionResults(problemId);\n        }\n    }, [ getSubmissionResults, problemId ]);\n\n    useEffect(() => {\n        (async () => {\n            await getResults();\n        })();\n    }, [ getResults ]);\n\n    return (\n        currentProblemSubmissionResults.length === 0\n            ? <p> No results for this problem yet.</p>\n            : (\n                <div style={{ height: 300, width: '100%' }}>\n                    <DataGrid\n                      rows={currentProblemSubmissionResults}\n                      columns={columns}\n                      pageSize={5}\n                      rowsPerPageOptions={[ 5 ]}\n                      disableSelectionOnClick\n                    />\n                </div>\n            )\n    );\n};\n\nexport default SubmissionResults;\n","import * as React from 'react';\nimport { useCallback } from 'react';\nimport { useContests } from '../../../hooks/contests/use-contests';\nimport Heading from '../../guidelines/headings/Heading';\nimport CodeEditor from '../../code-editor/CodeEditor';\nimport Tabs from '../../guidelines/tabs/Tabs';\nimport ExecutionTypeSelector from '../execution-type-selector/ExecutionTypeSelector';\nimport List from '../../guidelines/lists/List';\nimport { ISubmissionTypeType } from '../../../hooks/contests/types';\nimport { Button } from '../../guidelines/buttons/Button';\nimport styles from './ContestMainNavigation.module.scss';\nimport { useSubmissions } from '../../../hooks/submissions/use-submissions';\nimport ProblemResources from '../../problems/problem-resources/ProblemResources';\nimport SubmissionResults from '../../problems/problem-submissions/SubmissionResults';\n\nconst ContestMainNavigation = () => {\n    const { currentProblem, setSubmissionType } = useContests();\n    const { submit: submitRequest, setCode } = useSubmissions();\n\n    const renderSubmissionTypesSelectors = (submissionType: ISubmissionTypeType) => {\n        // eslint-disable-next-line eqeqeq\n        const isSelected = currentProblem?.allowedSubmissionTypes.length == 1\n            ? true\n            : submissionType.isSelectedByDefault;\n\n        return (\n            <ExecutionTypeSelector\n              id={submissionType.id}\n              value={submissionType.name}\n              isSelected={isSelected}\n              onSelect={() => setSubmissionType(submissionType.id)}\n            />\n        );\n    };\n\n    const renderSubmissionTypesSelectorsList = () => (currentProblem == null\n        ? null\n        : (\n            <List\n              className={styles.submissionTypesList}\n              values={currentProblem.allowedSubmissionTypes}\n              itemFunc={renderSubmissionTypesSelectors}\n              orientation=\"horizontal\"\n            />\n        ));\n\n    const submit = useCallback(async () => {\n        await submitRequest();\n        setCode('');\n    }, [ setCode, submitRequest ]);\n\n    return (\n        <div className={styles.contestMainWrapper}>\n            <Heading type=\"secondary\">{currentProblem?.name}</Heading>\n            <div className={styles.contestInnerLayout}>\n                <div className={styles.editorAndProblemControlsWrapper}>\n                    <CodeEditor />\n                    <div className={styles.contestTabControls}>\n                        <Tabs\n                          tabLabels={[ 'Problem', 'Submissions' ]}\n                          tabChildren={[\n                              <ProblemResources resources={currentProblem?.resources} />,\n                              <SubmissionResults problemId={currentProblem?.id} />,\n                          ]}\n                        />\n                    </div>\n                </div>\n                <div className={styles.contestSubmitControlsWrapper}>\n                    <div className={styles.executionTypeSelectors}>\n                        {renderSubmissionTypesSelectorsList()}\n                    </div>\n                    <div><Button type=\"primary\" text=\"Submit\" onClick={submit} /></div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ContestMainNavigation;\n","import * as React from 'react';\nimport { useContests } from '../../../hooks/contests/use-contests';\nimport Heading from '../../guidelines/headings/Heading';\nimport ContestTasksNavigation from '../contest-tasks-navigation/ContestTasksNavigation';\nimport ContestMainNavigation from '../contest-main-navigation/ContestMainNavigation';\nimport styles from './Contest.module.scss';\n\nconst Contest = () => {\n    const { currentContest } = useContests();\n\n    return (\n        <>\n            <Heading type=\"primary\" className={styles.contestHeading}>{currentContest?.name}</Heading>\n            <div className={styles.contestWrapper}>\n                <ContestTasksNavigation />\n                <ContestMainNavigation />\n            </div>\n        </>\n    );\n};\n\nexport default Contest;\n","import * as React from 'react';\nimport { useParams } from 'react-router';\nimport { useEffect } from 'react';\nimport { useContests } from '../../hooks/contests/use-contests';\nimport Contest from '../../components/contests/contest/Contest';\nimport { setLayout } from '../shared/set-layout';\nimport { makePrivate } from '../shared/make-private';\n\ninterface IContestPageParamsProps {\n    contestId: string\n    participationType: string\n}\n\nconst ContestPage = () => {\n    const { contestId } = useParams<IContestPageParamsProps>();\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const { participationType } = useParams<IContestPageParamsProps>();\n    const { startContestParticipation } = useContests();\n\n    useEffect(() => {\n        (async () => {\n            await startContestParticipation(Number(contestId), participationType === 'compete');\n        })();\n    }, [ contestId, participationType, startContestParticipation ]);\n\n    return (\n        <Contest />\n    );\n};\n\nexport default makePrivate(setLayout(ContestPage));\n","import { Route, Switch } from 'react-router-dom';\nimport * as React from 'react';\nimport HomePage from '../../pages/home/HomePage';\nimport LogoutPage from '../../pages/logout/LogoutPage';\nimport LoginPage from '../../pages/login/LoginPage';\nimport RegisterPage from '../../pages/register/RegisterPage';\nimport ProfilePage from '../../pages/profile/ProfilePage';\nimport SubmissionPage from '../../pages/submissions/SubmissionPage';\nimport ContestPage from '../../pages/contests/ContestPage';\nimport styles from './PageContent.module.scss';\n\nconst PageContent = () => (\n    <main className={styles.main}>\n        <Switch>\n            <Route exact path=\"/login\" component={LoginPage} />\n            <Route exact path=\"/register\" component={RegisterPage} />\n            <Route exact path=\"/logout\" component={LogoutPage} />\n            <Route exact path=\"/\" component={HomePage} />\n            <Route exact path=\"/profile\" component={ProfilePage} />\n            <Route exact path=\"/submissions/:submissionId\" component={SubmissionPage} />\n            <Route exact path=\"/contests/:contestId/:participationType\" component={ContestPage} />\n        </Switch>\n    </main>\n);\n\nexport default PageContent;\n","import * as React from 'react';\nimport styles from './PageFooter.module.scss';\n\nconst PageFooter = () => (\n    <footer className={styles.footer}>\n        © 2011-2021 - Open Judge System (OJS) 1.5.20150729.95737d0 -\n        <a href=\"https://github.com/NikolayIT/OpenJudgeSystem\">Open source project.</a>\n    </footer>\n);\n\nexport default PageFooter;\n","class CacheService {\n    storage: Storage;\n\n    constructor(storage: Storage) {\n        this.storage = storage;\n    }\n\n    set(key: string, value: any) {\n        const obj = JSON.stringify({ value });\n        this.storage.setItem(key, obj);\n    }\n\n    get(key: string) {\n        const value = this.storage.getItem(key) ?? '{}';\n        const obj = JSON.parse(value);\n        return obj.value;\n    }\n\n    clear() {\n        this.storage.clear();\n    }\n}\n\nexport default CacheService;\n","import React, {\n    createContext,\n    useContext,\n    useMemo,\n} from 'react';\n\nimport IHaveChildrenProps from '../components/common/IHaveChildrenProps';\nimport CacheService from '../services/storage-service';\n\ninterface IServicesContext {\n    localStorageService: CacheService\n}\n\nconst defaultState = { };\n\nconst ServicesContext = createContext<IServicesContext>(defaultState as IServicesContext);\n\ninterface IServicesProviderProps extends IHaveChildrenProps {}\n\nconst ServicesProvider = ({ children }: IServicesProviderProps) => {\n    const localStorageService = useMemo(() => new CacheService(window.localStorage), []);\n\n    const value = { localStorageService };\n\n    return (\n        <ServicesContext.Provider value={value}>\n            {children}\n        </ServicesContext.Provider>\n    );\n};\n\nconst useServices = () => useContext(ServicesContext);\n\nexport {\n    useServices,\n};\n\nexport default ServicesProvider;\n","import * as React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport AuthProvider from './hooks/use-auth';\nimport PageHeader from './layout/header/PageHeader';\nimport PageContent from './layout/content/PageContent';\nimport PageFooter from './layout/footer/PageFooter';\nimport LoadingProvider from './hooks/use-loading';\nimport ServicesProvider from './hooks/use-services';\nimport NotificationsProvider from './hooks/use-notifications';\nimport ContestsProvider from './hooks/contests/use-contests';\nimport UsersProvider from './hooks/use-users';\nimport SubmissionsProvider from './hooks/submissions/use-submissions';\nimport SubmissionsDetailsProvider from './hooks/submissions/use-submissions-details';\nimport ParticipationsProvider from './hooks/use-participations';\n\nimport './styles/global.scss';\n\nconst InitProviders = ({ providers, children }: any) => {\n    const initial = (<>{ children }</>);\n    return providers\n        .reverse()\n        .reduce((current: any, Provider: any) => (\n            <Provider>\n                { current }\n            </Provider>\n        ), initial);\n};\n\nconst App = () => {\n    const providers = [\n        ServicesProvider,\n        LoadingProvider,\n        NotificationsProvider,\n        AuthProvider,\n        UsersProvider,\n        ContestsProvider,\n        ParticipationsProvider,\n        SubmissionsProvider,\n        SubmissionsDetailsProvider,\n    ];\n    return (\n        <InitProviders providers={providers}>\n            <Router>\n                <PageHeader />\n                <PageContent />\n                <PageFooter />\n            </Router>\n        </InitProviders>\n    );\n};\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));\n\nconst registerValidSW = async (swUrl: string) => {\n    try {\n        const registration = await navigator.serviceWorker\n            .register(swUrl);\n        registration.onupdatefound = () => {\n            const installingWorker = registration.installing as ServiceWorker;\n            installingWorker.onstatechange = () => {\n                if (installingWorker.state === 'installed') {\n                    if (navigator.serviceWorker.controller) {\n                        // At this point, the old content will have been purged and\n                        // the fresh content will have been added to the cache.\n                        // It's the perfect time to display a \"New content is\n                        // available; please refresh.\" message in your web app.\n                        console.log('New content is available; please refresh.');\n                    } else {\n                        // At this point, everything has been precached.\n                        // It's the perfect time to display a\n                        // \"Content is cached for offline use.\" message.\n                        console.log('Content is cached for offline use.');\n                    }\n                }\n            };\n        };\n    } catch (error) {\n        console.error('Error during service worker registration:', error);\n    }\n};\n\nconst checkValidServiceWorker = async (swUrl: string) => {\n    // Check if the service worker can be found. If it can't reload the page.\n    try {\n        const response = await fetch(swUrl);\n\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (response.status === 404 || (contentType && contentType.indexOf('javascript') === -1)) {\n            // No service worker found. Probably a different app. Reload the page.\n            const registration = await navigator.serviceWorker.ready;\n\n            await registration.unregister();\n            window.location.reload();\n        } else {\n            // Service worker found. Proceed as normal.\n            registerValidSW(swUrl);\n        }\n    } catch (err) {\n        console.log('No internet connection found. App is running in offline mode.');\n    }\n};\n\nconst register = () => {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const url = process.env.PUBLIC_URL as string;\n        const publicUrl = new URL(url, window.location.toString());\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Lets check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl);\n            } else {\n                // Is not local host. Just register service worker\n                registerValidSW(swUrl);\n            }\n        });\n    }\n};\n\nconst unregister = async () => {\n    if ('serviceWorker' in navigator) {\n        const registration = await navigator.serviceWorker.ready;\n        await registration.unregister();\n    }\n};\n\nexport default register;\nexport {\n    unregister,\n};\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport App from './App';\nimport register from './registerServiceWorker';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root'),\n);\n\nregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"small\":\"HomeHeader_small__QrF4e\",\"medium\":\"HomeHeader_medium__qVHGL\",\"large\":\"HomeHeader_large__3OWWY\",\"contentSize\":\"HomeHeader_contentSize__2Jhcl\",\"headerContent\":\"HomeHeader_headerContent__1x15g\",\"base\":\"HomeHeader_base__2mult\",\"primary\":\"HomeHeader_primary__ibnLA\",\"headerPrimaryHeading\":\"HomeHeader_headerPrimaryHeading__m3bC1\",\"secondary\":\"HomeHeader_secondary__2e34e\",\"headerContentWrapper\":\"HomeHeader_headerContentWrapper__22buD\",\"headerLeft\":\"HomeHeader_headerLeft__1KA_7\",\"headerLeftButton\":\"HomeHeader_headerLeftButton__2XZ8W\",\"headerBulletsWrapper\":\"HomeHeader_headerBulletsWrapper__34-pE\",\"headerBullet\":\"HomeHeader_headerBullet__3pt7r\",\"headerRight\":\"HomeHeader_headerRight__1UTBd\",\"youtubePlayer\":\"HomeHeader_youtubePlayer__MdRNQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"small\":\"Button_small__pXZbm\",\"btnSmall\":\"Button_btnSmall__2bmnA\",\"medium\":\"Button_medium__4wJsT\",\"btnMedium\":\"Button_btnMedium__1hYAo\",\"large\":\"Button_large__1tFyw\",\"btnLarge\":\"Button_btnLarge__2tljR\",\"contentSize\":\"Button_contentSize__3qm8t\",\"btn\":\"Button_btn__3OGq_\",\"btnSecondary\":\"Button_btnSecondary__5hAtx\",\"btnDisabled\":\"Button_btnDisabled__30-5Y\",\"btnPlain\":\"Button_btnPlain__OunM0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"small\":\"PageHeader_small__9chu4\",\"medium\":\"PageHeader_medium__a8g9p\",\"large\":\"PageHeader_large__3IUfI\",\"contentSize\":\"PageHeader_contentSize__yjaNL\",\"headerSize\":\"PageHeader_headerSize__c8YPH\",\"header\":\"PageHeader_header__3-e1i\",\"heading\":\"PageHeader_heading__34Ekf\",\"headerLinks\":\"PageHeader_headerLinks__38f8p\",\"headerLink\":\"PageHeader_headerLink__nPcjs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contestMainWrapper\":\"ContestMainNavigation_contestMainWrapper__33zH8\",\"contestInnerLayout\":\"ContestMainNavigation_contestInnerLayout__1CKmQ\",\"contestTabControls\":\"ContestMainNavigation_contestTabControls__1Ws1I\",\"editorAndProblemControlsWrapper\":\"ContestMainNavigation_editorAndProblemControlsWrapper__2nTEQ\",\"executionTypeSelectors\":\"ContestMainNavigation_executionTypeSelectors__3-u4b\",\"contestSubmitControlsWrapper\":\"ContestMainNavigation_contestSubmitControlsWrapper__KrnfY\",\"submissionTypesList\":\"ContestMainNavigation_submissionTypesList__1awv0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listBase\":\"List_listBase__7hMHC\",\"listNormal\":\"List_listNormal__3GZp7\",\"listNumbered\":\"List_listNumbered__oZLXz\",\"listNumberedAlpha\":\"List_listNumberedAlpha__3u7vP\",\"listBulleted\":\"List_listBulleted__1Uk5O\",\"listHorizontal\":\"List_listHorizontal__e-7xc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contestCard\":\"ContestCard_contestCard__1Pn8q\",\"contestCardHeader\":\"ContestCard_contestCardHeader__3UyM2\",\"contestCardControls\":\"ContestCard_contestCardControls__1x3RA\",\"contestCardCountdown\":\"ContestCard_contestCardCountdown__-6SSv\",\"contestCardCategoryLabel\":\"ContestCard_contestCardCategoryLabel__3GrcV\"};"],"sourceRoot":""}